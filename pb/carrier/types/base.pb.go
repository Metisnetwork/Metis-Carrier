// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: carrier/types/base.proto

package types

import (
	fmt "fmt"
	proto "github.com/gogo/protobuf/proto"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type UserType int32

const (
	UserType_User_Unknown UserType = 0
	UserType_User_1       UserType = 1
	UserType_User_2       UserType = 2
	UserType_User_3       UserType = 3
)

var UserType_name = map[int32]string{
	0: "User_Unknown",
	1: "User_1",
	2: "User_2",
	3: "User_3",
}

var UserType_value = map[string]int32{
	"User_Unknown": 0,
	"User_1":       1,
	"User_2":       2,
	"User_3":       3,
}

func (x UserType) String() string {
	return proto.EnumName(UserType_name, int32(x))
}

func (UserType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_216c145f2c8fe2fc, []int{0}
}

// the status of data for local storage, 1 means valid, 2 means invalid
type DataStatus int32

const (
	DataStatus_DataStatus_Unknown DataStatus = 0
	DataStatus_DataStatus_Valid   DataStatus = 1
	DataStatus_DataStatus_Invalid DataStatus = 2
)

var DataStatus_name = map[int32]string{
	0: "DataStatus_Unknown",
	1: "DataStatus_Valid",
	2: "DataStatus_Invalid",
}

var DataStatus_value = map[string]int32{
	"DataStatus_Unknown": 0,
	"DataStatus_Valid":   1,
	"DataStatus_Invalid": 2,
}

func (x DataStatus) String() string {
	return proto.EnumName(DataStatus_name, int32(x))
}

func (DataStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_216c145f2c8fe2fc, []int{1}
}

// the status of data for datacenter, 1 means valid, 2 means invalid
type CommonStatus int32

const (
	CommonStatus_CommonStatus_Unknown CommonStatus = 0
	CommonStatus_CommonStatus_Valid   CommonStatus = 1
	CommonStatus_CommonStatus_Invalid CommonStatus = 2
)

var CommonStatus_name = map[int32]string{
	0: "CommonStatus_Unknown",
	1: "CommonStatus_Valid",
	2: "CommonStatus_Invalid",
}

var CommonStatus_value = map[string]int32{
	"CommonStatus_Unknown": 0,
	"CommonStatus_Valid":   1,
	"CommonStatus_Invalid": 2,
}

func (x CommonStatus) String() string {
	return proto.EnumName(CommonStatus_name, int32(x))
}

func (CommonStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_216c145f2c8fe2fc, []int{2}
}

type AuditMetadataOption int32

const (
	AuditMetadataOption_Audit_Pending AuditMetadataOption = 0
	AuditMetadataOption_Audit_Passed  AuditMetadataOption = 1
	AuditMetadataOption_Audit_Refused AuditMetadataOption = 2
)

var AuditMetadataOption_name = map[int32]string{
	0: "Audit_Pending",
	1: "Audit_Passed",
	2: "Audit_Refused",
}

var AuditMetadataOption_value = map[string]int32{
	"Audit_Pending": 0,
	"Audit_Passed":  1,
	"Audit_Refused": 2,
}

func (x AuditMetadataOption) String() string {
	return proto.EnumName(AuditMetadataOption_name, int32(x))
}

func (AuditMetadataOption) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_216c145f2c8fe2fc, []int{3}
}

// 元数据类型
type MetadataType int32

const (
	MetadataType_MetadataType_Unknown    MetadataType = 0
	MetadataType_MetadataType_DataFile   MetadataType = 1
	MetadataType_MetadataType_ModuleFile MetadataType = 2
)

var MetadataType_name = map[int32]string{
	0: "MetadataType_Unknown",
	1: "MetadataType_DataFile",
	2: "MetadataType_ModuleFile",
}

var MetadataType_value = map[string]int32{
	"MetadataType_Unknown":    0,
	"MetadataType_DataFile":   1,
	"MetadataType_ModuleFile": 2,
}

func (x MetadataType) String() string {
	return proto.EnumName(MetadataType_name, int32(x))
}

func (MetadataType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_216c145f2c8fe2fc, []int{4}
}

// 数据的位置 (本地、远端、云等)
type DataLocationType int32

const (
	DataLocationType_DataLocationType_Unknown DataLocationType = 0
	DataLocationType_DataLocationType_Local   DataLocationType = 1
	DataLocationType_DataLocationType_URL     DataLocationType = 2
)

var DataLocationType_name = map[int32]string{
	0: "DataLocationType_Unknown",
	1: "DataLocationType_Local",
	2: "DataLocationType_URL",
}

var DataLocationType_value = map[string]int32{
	"DataLocationType_Unknown": 0,
	"DataLocationType_Local":   1,
	"DataLocationType_URL":     2,
}

func (x DataLocationType) String() string {
	return proto.EnumName(DataLocationType_name, int32(x))
}

func (DataLocationType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_216c145f2c8fe2fc, []int{5}
}

// 原始数据类型 (文件类型)
type OrigindataType int32

const (
	OrigindataType_OrigindataType_Unknown OrigindataType = 0
	OrigindataType_OrigindataType_CSV     OrigindataType = 1
	OrigindataType_OrigindataType_DIR     OrigindataType = 2
	OrigindataType_OrigindataType_BINARY  OrigindataType = 3
	OrigindataType_OrigindataType_XLS     OrigindataType = 4
	OrigindataType_OrigindataType_XLSX    OrigindataType = 5
	OrigindataType_OrigindataType_TXT     OrigindataType = 6
	OrigindataType_OrigindataType_JSON    OrigindataType = 7
)

var OrigindataType_name = map[int32]string{
	0: "OrigindataType_Unknown",
	1: "OrigindataType_CSV",
	2: "OrigindataType_DIR",
	3: "OrigindataType_BINARY",
	4: "OrigindataType_XLS",
	5: "OrigindataType_XLSX",
	6: "OrigindataType_TXT",
	7: "OrigindataType_JSON",
}

var OrigindataType_value = map[string]int32{
	"OrigindataType_Unknown": 0,
	"OrigindataType_CSV":     1,
	"OrigindataType_DIR":     2,
	"OrigindataType_BINARY":  3,
	"OrigindataType_XLS":     4,
	"OrigindataType_XLSX":    5,
	"OrigindataType_TXT":     6,
	"OrigindataType_JSON":    7,
}

func (x OrigindataType) String() string {
	return proto.EnumName(OrigindataType_name, int32(x))
}

func (OrigindataType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_216c145f2c8fe2fc, []int{6}
}

// 元数据的状态 (0: 未知; 1: 还未发布的新表; 2: 已发布的表; 3: 已撤销的表)
type MetadataState int32

const (
	MetadataState_MetadataState_Unknown  MetadataState = 0
	MetadataState_MetadataState_Created  MetadataState = 1
	MetadataState_MetadataState_Released MetadataState = 2
	MetadataState_MetadataState_Revoked  MetadataState = 3
)

var MetadataState_name = map[int32]string{
	0: "MetadataState_Unknown",
	1: "MetadataState_Created",
	2: "MetadataState_Released",
	3: "MetadataState_Revoked",
}

var MetadataState_value = map[string]int32{
	"MetadataState_Unknown":  0,
	"MetadataState_Created":  1,
	"MetadataState_Released": 2,
	"MetadataState_Revoked":  3,
}

func (x MetadataState) String() string {
	return proto.EnumName(MetadataState_name, int32(x))
}

func (MetadataState) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_216c145f2c8fe2fc, []int{7}
}

// 元数据的使用方式类型枚举 (0: 未定义; 1: 按照时间段来使用; 2: 按照次数来使用)
type MetadataUsageType int32

const (
	MetadataUsageType_Usage_Unknown MetadataUsageType = 0
	MetadataUsageType_Usage_Period  MetadataUsageType = 1
	MetadataUsageType_Usage_Times   MetadataUsageType = 2
)

var MetadataUsageType_name = map[int32]string{
	0: "Usage_Unknown",
	1: "Usage_Period",
	2: "Usage_Times",
}

var MetadataUsageType_value = map[string]int32{
	"Usage_Unknown": 0,
	"Usage_Period":  1,
	"Usage_Times":   2,
}

func (x MetadataUsageType) String() string {
	return proto.EnumName(MetadataUsageType_name, int32(x))
}

func (MetadataUsageType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_216c145f2c8fe2fc, []int{8}
}

// 算力的状态 (0: 未知; 1: 还未发布的算力; 2: 已发布的算力(算力未被占用); 3: 已发布的算力(算力正在被占用); 4: 已撤销的算力)
type PowerState int32

const (
	PowerState_PowerState_Unknown    PowerState = 0
	PowerState_PowerState_Created    PowerState = 1
	PowerState_PowerState_Released   PowerState = 2
	PowerState_PowerState_Occupation PowerState = 3
	PowerState_PowerState_Revoked    PowerState = 4
)

var PowerState_name = map[int32]string{
	0: "PowerState_Unknown",
	1: "PowerState_Created",
	2: "PowerState_Released",
	3: "PowerState_Occupation",
	4: "PowerState_Revoked",
}

var PowerState_value = map[string]int32{
	"PowerState_Unknown":    0,
	"PowerState_Created":    1,
	"PowerState_Released":   2,
	"PowerState_Occupation": 3,
	"PowerState_Revoked":    4,
}

func (x PowerState) String() string {
	return proto.EnumName(PowerState_name, int32(x))
}

func (PowerState) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_216c145f2c8fe2fc, []int{9}
}

// 本组织在task中的角色
type TaskRole int32

const (
	TaskRole_TaskRole_Unknown       TaskRole = 0
	TaskRole_TaskRole_Sender        TaskRole = 1
	TaskRole_TaskRole_DataSupplier  TaskRole = 2
	TaskRole_TaskRole_PowerSupplier TaskRole = 3
	TaskRole_TaskRole_Receiver      TaskRole = 4
	TaskRole_TaskRole_AlgoSupplier  TaskRole = 5
)

var TaskRole_name = map[int32]string{
	0: "TaskRole_Unknown",
	1: "TaskRole_Sender",
	2: "TaskRole_DataSupplier",
	3: "TaskRole_PowerSupplier",
	4: "TaskRole_Receiver",
	5: "TaskRole_AlgoSupplier",
}

var TaskRole_value = map[string]int32{
	"TaskRole_Unknown":       0,
	"TaskRole_Sender":        1,
	"TaskRole_DataSupplier":  2,
	"TaskRole_PowerSupplier": 3,
	"TaskRole_Receiver":      4,
	"TaskRole_AlgoSupplier":  5,
}

func (x TaskRole) String() string {
	return proto.EnumName(TaskRole_name, int32(x))
}

func (TaskRole) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_216c145f2c8fe2fc, []int{10}
}

// task的状态
type TaskState int32

const (
	TaskState_TaskState_Unknown TaskState = 0
	TaskState_TaskState_Pending TaskState = 1
	TaskState_TaskState_Running TaskState = 2
	TaskState_TaskState_Failed  TaskState = 3
	TaskState_TaskState_Succeed TaskState = 4
)

var TaskState_name = map[int32]string{
	0: "TaskState_Unknown",
	1: "TaskState_Pending",
	2: "TaskState_Running",
	3: "TaskState_Failed",
	4: "TaskState_Succeed",
}

var TaskState_value = map[string]int32{
	"TaskState_Unknown": 0,
	"TaskState_Pending": 1,
	"TaskState_Running": 2,
	"TaskState_Failed":  3,
	"TaskState_Succeed": 4,
}

func (x TaskState) String() string {
	return proto.EnumName(TaskState_name, int32(x))
}

func (TaskState) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_216c145f2c8fe2fc, []int{11}
}

// 数据授权信息的状态 (0: 未知; 1: 还未发布的数据授权; 2: 已发布的数据授权; 3: 已撤销的数据授权 <失效前主动撤回的>; 4: 已经失效的数据授权 <过期or达到使用上限的or被拒绝的>;)
type MetadataAuthorityState int32

const (
	MetadataAuthorityState_MAState_Unknown  MetadataAuthorityState = 0
	MetadataAuthorityState_MAState_Created  MetadataAuthorityState = 1
	MetadataAuthorityState_MAState_Released MetadataAuthorityState = 2
	MetadataAuthorityState_MAState_Revoked  MetadataAuthorityState = 3
	MetadataAuthorityState_MAState_Invalid  MetadataAuthorityState = 4
)

var MetadataAuthorityState_name = map[int32]string{
	0: "MAState_Unknown",
	1: "MAState_Created",
	2: "MAState_Released",
	3: "MAState_Revoked",
	4: "MAState_Invalid",
}

var MetadataAuthorityState_value = map[string]int32{
	"MAState_Unknown":  0,
	"MAState_Created":  1,
	"MAState_Released": 2,
	"MAState_Revoked":  3,
	"MAState_Invalid":  4,
}

func (x MetadataAuthorityState) String() string {
	return proto.EnumName(MetadataAuthorityState_name, int32(x))
}

func (MetadataAuthorityState) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_216c145f2c8fe2fc, []int{12}
}

// A represents the basic information of the organization.
type Organization struct {
	// org name
	NodeName string `protobuf:"bytes,1,opt,name=node_name,json=nodeName,proto3" json:"node_name,omitempty"`
	// the node_id for org
	NodeId string `protobuf:"bytes,2,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	// the identity for org
	IdentityId string `protobuf:"bytes,3,opt,name=identity_id,json=identityId,proto3" json:"identity_id,omitempty"`
	// the status of data for local storage, 1 means valid, 2 means invalid
	DataStatus DataStatus `protobuf:"varint,4,opt,name=data_status,json=dataStatus,proto3,enum=carrier.types.DataStatus" json:"data_status,omitempty"`
	// the status of data for datacenter, 1 means valid, 2 means invalid
	Status CommonStatus `protobuf:"varint,5,opt,name=status,proto3,enum=carrier.types.CommonStatus" json:"status,omitempty"`
	//v 3.0
	// the last_update time of corresponding datacenter (unit: UTC ms)
	UpdateAt uint64 `protobuf:"varint,6,opt,name=update_at,json=updateAt,proto3" json:"update_at,omitempty"`
	// the link of face image (with a length limit)
	ImageUrl string `protobuf:"bytes,7,opt,name=image_url,json=imageUrl,proto3" json:"image_url,omitempty"`
	// description of the node (with a length limit)
	Details              string   `protobuf:"bytes,8,opt,name=details,proto3" json:"details,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Organization) Reset()         { *m = Organization{} }
func (m *Organization) String() string { return proto.CompactTextString(m) }
func (*Organization) ProtoMessage()    {}
func (*Organization) Descriptor() ([]byte, []int) {
	return fileDescriptor_216c145f2c8fe2fc, []int{0}
}
func (m *Organization) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Organization) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Organization.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Organization) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Organization.Merge(m, src)
}
func (m *Organization) XXX_Size() int {
	return m.Size()
}
func (m *Organization) XXX_DiscardUnknown() {
	xxx_messageInfo_Organization.DiscardUnknown(m)
}

var xxx_messageInfo_Organization proto.InternalMessageInfo

func (m *Organization) GetNodeName() string {
	if m != nil {
		return m.NodeName
	}
	return ""
}

func (m *Organization) GetNodeId() string {
	if m != nil {
		return m.NodeId
	}
	return ""
}

func (m *Organization) GetIdentityId() string {
	if m != nil {
		return m.IdentityId
	}
	return ""
}

func (m *Organization) GetDataStatus() DataStatus {
	if m != nil {
		return m.DataStatus
	}
	return DataStatus_DataStatus_Unknown
}

func (m *Organization) GetStatus() CommonStatus {
	if m != nil {
		return m.Status
	}
	return CommonStatus_CommonStatus_Unknown
}

func (m *Organization) GetUpdateAt() uint64 {
	if m != nil {
		return m.UpdateAt
	}
	return 0
}

func (m *Organization) GetImageUrl() string {
	if m != nil {
		return m.ImageUrl
	}
	return ""
}

func (m *Organization) GetDetails() string {
	if m != nil {
		return m.Details
	}
	return ""
}

// 任务下的组织信息
type TaskOrganization struct {
	PartyId string `protobuf:"bytes,1,opt,name=party_id,json=partyId,proto3" json:"party_id,omitempty"`
	// org name
	NodeName string `protobuf:"bytes,2,opt,name=node_name,json=nodeName,proto3" json:"node_name,omitempty"`
	// the node_id for org
	NodeId string `protobuf:"bytes,3,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	// the identity for org
	IdentityId           string   `protobuf:"bytes,4,opt,name=identity_id,json=identityId,proto3" json:"identity_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TaskOrganization) Reset()         { *m = TaskOrganization{} }
func (m *TaskOrganization) String() string { return proto.CompactTextString(m) }
func (*TaskOrganization) ProtoMessage()    {}
func (*TaskOrganization) Descriptor() ([]byte, []int) {
	return fileDescriptor_216c145f2c8fe2fc, []int{1}
}
func (m *TaskOrganization) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TaskOrganization) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TaskOrganization.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TaskOrganization) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TaskOrganization.Merge(m, src)
}
func (m *TaskOrganization) XXX_Size() int {
	return m.Size()
}
func (m *TaskOrganization) XXX_DiscardUnknown() {
	xxx_messageInfo_TaskOrganization.DiscardUnknown(m)
}

var xxx_messageInfo_TaskOrganization proto.InternalMessageInfo

func (m *TaskOrganization) GetPartyId() string {
	if m != nil {
		return m.PartyId
	}
	return ""
}

func (m *TaskOrganization) GetNodeName() string {
	if m != nil {
		return m.NodeName
	}
	return ""
}

func (m *TaskOrganization) GetNodeId() string {
	if m != nil {
		return m.NodeId
	}
	return ""
}

func (m *TaskOrganization) GetIdentityId() string {
	if m != nil {
		return m.IdentityId
	}
	return ""
}

type SimpleResponse struct {
	// the code for response
	Status int32 `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	// the message for response
	Msg                  string   `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SimpleResponse) Reset()         { *m = SimpleResponse{} }
func (m *SimpleResponse) String() string { return proto.CompactTextString(m) }
func (*SimpleResponse) ProtoMessage()    {}
func (*SimpleResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_216c145f2c8fe2fc, []int{2}
}
func (m *SimpleResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *SimpleResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_SimpleResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *SimpleResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SimpleResponse.Merge(m, src)
}
func (m *SimpleResponse) XXX_Size() int {
	return m.Size()
}
func (m *SimpleResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SimpleResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SimpleResponse proto.InternalMessageInfo

func (m *SimpleResponse) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *SimpleResponse) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

// 任务需要花费的资源声明
type TaskResourceCostDeclare struct {
	// 任务所需的内存 (单位: byte)
	Memory uint64 `protobuf:"varint,1,opt,name=memory,proto3" json:"memory,omitempty"`
	// 任务所需的核数 (单位: 个)
	Processor uint32 `protobuf:"varint,2,opt,name=processor,proto3" json:"processor,omitempty"`
	// 任务所需的带宽 (单位: bps)
	Bandwidth uint64 `protobuf:"varint,3,opt,name=bandwidth,proto3" json:"bandwidth,omitempty"`
	// 任务所需的运行时长 (单位: ms)
	Duration             uint64   `protobuf:"varint,4,opt,name=duration,proto3" json:"duration,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TaskResourceCostDeclare) Reset()         { *m = TaskResourceCostDeclare{} }
func (m *TaskResourceCostDeclare) String() string { return proto.CompactTextString(m) }
func (*TaskResourceCostDeclare) ProtoMessage()    {}
func (*TaskResourceCostDeclare) Descriptor() ([]byte, []int) {
	return fileDescriptor_216c145f2c8fe2fc, []int{3}
}
func (m *TaskResourceCostDeclare) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TaskResourceCostDeclare) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TaskResourceCostDeclare.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TaskResourceCostDeclare) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TaskResourceCostDeclare.Merge(m, src)
}
func (m *TaskResourceCostDeclare) XXX_Size() int {
	return m.Size()
}
func (m *TaskResourceCostDeclare) XXX_DiscardUnknown() {
	xxx_messageInfo_TaskResourceCostDeclare.DiscardUnknown(m)
}

var xxx_messageInfo_TaskResourceCostDeclare proto.InternalMessageInfo

func (m *TaskResourceCostDeclare) GetMemory() uint64 {
	if m != nil {
		return m.Memory
	}
	return 0
}

func (m *TaskResourceCostDeclare) GetProcessor() uint32 {
	if m != nil {
		return m.Processor
	}
	return 0
}

func (m *TaskResourceCostDeclare) GetBandwidth() uint64 {
	if m != nil {
		return m.Bandwidth
	}
	return 0
}

func (m *TaskResourceCostDeclare) GetDuration() uint64 {
	if m != nil {
		return m.Duration
	}
	return 0
}

func init() {
	proto.RegisterEnum("carrier.types.UserType", UserType_name, UserType_value)
	proto.RegisterEnum("carrier.types.DataStatus", DataStatus_name, DataStatus_value)
	proto.RegisterEnum("carrier.types.CommonStatus", CommonStatus_name, CommonStatus_value)
	proto.RegisterEnum("carrier.types.AuditMetadataOption", AuditMetadataOption_name, AuditMetadataOption_value)
	proto.RegisterEnum("carrier.types.MetadataType", MetadataType_name, MetadataType_value)
	proto.RegisterEnum("carrier.types.DataLocationType", DataLocationType_name, DataLocationType_value)
	proto.RegisterEnum("carrier.types.OrigindataType", OrigindataType_name, OrigindataType_value)
	proto.RegisterEnum("carrier.types.MetadataState", MetadataState_name, MetadataState_value)
	proto.RegisterEnum("carrier.types.MetadataUsageType", MetadataUsageType_name, MetadataUsageType_value)
	proto.RegisterEnum("carrier.types.PowerState", PowerState_name, PowerState_value)
	proto.RegisterEnum("carrier.types.TaskRole", TaskRole_name, TaskRole_value)
	proto.RegisterEnum("carrier.types.TaskState", TaskState_name, TaskState_value)
	proto.RegisterEnum("carrier.types.MetadataAuthorityState", MetadataAuthorityState_name, MetadataAuthorityState_value)
	proto.RegisterType((*Organization)(nil), "carrier.types.Organization")
	proto.RegisterType((*TaskOrganization)(nil), "carrier.types.TaskOrganization")
	proto.RegisterType((*SimpleResponse)(nil), "carrier.types.SimpleResponse")
	proto.RegisterType((*TaskResourceCostDeclare)(nil), "carrier.types.TaskResourceCostDeclare")
}

func init() { proto.RegisterFile("carrier/types/base.proto", fileDescriptor_216c145f2c8fe2fc) }

var fileDescriptor_216c145f2c8fe2fc = []byte{
	// 962 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x96, 0xcd, 0x4e, 0xe4, 0x46,
	0x10, 0xc7, 0xd7, 0x9e, 0x61, 0x18, 0x8a, 0xaf, 0xa6, 0x61, 0x07, 0x03, 0x2b, 0x82, 0x38, 0x21,
	0x1f, 0x40, 0x59, 0x6e, 0x7b, 0xca, 0x2c, 0x68, 0xa5, 0x89, 0xf8, 0x92, 0x07, 0x56, 0x64, 0x2f,
	0x93, 0xc6, 0xae, 0x9d, 0x6d, 0x61, 0xbb, 0xad, 0x76, 0x1b, 0x34, 0x51, 0x72, 0x89, 0x72, 0x48,
	0x5e, 0x22, 0x0f, 0x90, 0x27, 0xc9, 0x31, 0xd7, 0xdc, 0x22, 0x9e, 0x24, 0xea, 0xf6, 0xd8, 0x63,
	0x1b, 0x92, 0x5b, 0xd7, 0xef, 0xdf, 0x55, 0xdd, 0xf5, 0xaf, 0xf6, 0x68, 0xc0, 0xf1, 0x99, 0x94,
	0x1c, 0xe5, 0x91, 0x9a, 0x24, 0x98, 0x1e, 0xdd, 0xb1, 0x14, 0x0f, 0x13, 0x29, 0x94, 0xa0, 0xcb,
	0x53, 0xe5, 0xd0, 0x28, 0xfb, 0x7f, 0xd8, 0xb0, 0x74, 0x29, 0xc7, 0x2c, 0xe6, 0x3f, 0x30, 0xc5,
	0x45, 0x4c, 0x77, 0x60, 0x21, 0x16, 0x01, 0x8e, 0x62, 0x16, 0xa1, 0x63, 0xed, 0x59, 0x07, 0x0b,
	0x5e, 0x57, 0x83, 0x0b, 0x16, 0x21, 0xdd, 0x84, 0x79, 0x23, 0xf2, 0xc0, 0xb1, 0x8d, 0xd4, 0xd1,
	0xe1, 0x20, 0xa0, 0x5f, 0xc1, 0x22, 0x0f, 0x30, 0x56, 0x5c, 0x4d, 0xb4, 0xd8, 0x32, 0x22, 0x14,
	0x68, 0x10, 0xd0, 0x77, 0xb0, 0x18, 0x30, 0xc5, 0x46, 0xa9, 0x62, 0x2a, 0x4b, 0x9d, 0xf6, 0x9e,
	0x75, 0xb0, 0xf2, 0x76, 0xeb, 0xb0, 0x76, 0x99, 0xc3, 0x53, 0xa6, 0xd8, 0xd0, 0x6c, 0xf0, 0x20,
	0x28, 0xd7, 0xf4, 0x18, 0x3a, 0xd3, 0xb4, 0x39, 0x93, 0xb6, 0xd3, 0x48, 0x3b, 0x11, 0x51, 0x24,
	0xe2, 0x69, 0xe2, 0x74, 0xab, 0xee, 0x23, 0x4b, 0x02, 0xa6, 0x70, 0xc4, 0x94, 0xd3, 0xd9, 0xb3,
	0x0e, 0xda, 0x5e, 0x37, 0x07, 0x7d, 0xa5, 0x45, 0x1e, 0xb1, 0x31, 0x8e, 0x32, 0x19, 0x3a, 0xf3,
	0x79, 0x93, 0x06, 0xdc, 0xc8, 0x90, 0x3a, 0x30, 0x1f, 0xa0, 0x62, 0x3c, 0x4c, 0x9d, 0xae, 0x91,
	0x8a, 0x70, 0xff, 0x17, 0x0b, 0xc8, 0x35, 0x4b, 0xef, 0x6b, 0x86, 0x6d, 0x41, 0x37, 0x61, 0x32,
	0xef, 0x3b, 0xf7, 0x6b, 0xde, 0xc4, 0x83, 0xa0, 0xee, 0xa5, 0xfd, 0xdf, 0x5e, 0xb6, 0xfe, 0xcf,
	0xcb, 0x76, 0xd3, 0xcb, 0xfd, 0x77, 0xb0, 0x32, 0xe4, 0x51, 0x12, 0xa2, 0x87, 0x69, 0x22, 0xe2,
	0x14, 0x69, 0xaf, 0x74, 0x48, 0xdf, 0x60, 0xae, 0x34, 0x81, 0x40, 0x2b, 0x4a, 0xc7, 0xd3, 0xa3,
	0xf5, 0x72, 0xff, 0x37, 0x0b, 0x36, 0x75, 0x0b, 0x1e, 0xa6, 0x22, 0x93, 0x3e, 0x9e, 0x88, 0x54,
	0x9d, 0xa2, 0x1f, 0x32, 0x69, 0xaa, 0x44, 0x18, 0x09, 0x39, 0x31, 0x55, 0xda, 0xde, 0x34, 0xa2,
	0x6f, 0x60, 0x21, 0x91, 0xc2, 0xc7, 0x34, 0x15, 0xd2, 0xd4, 0x5a, 0xf6, 0x66, 0x40, 0xab, 0x77,
	0x2c, 0x0e, 0x1e, 0x79, 0xa0, 0xbe, 0x98, 0x4e, 0xda, 0xde, 0x0c, 0xd0, 0x6d, 0xe8, 0x06, 0x99,
	0x34, 0x4e, 0x99, 0x4e, 0xda, 0x5e, 0x19, 0xbb, 0xdf, 0x40, 0xf7, 0x26, 0x45, 0x79, 0x3d, 0x49,
	0x90, 0x12, 0x58, 0xd2, 0xeb, 0xd1, 0x4d, 0x7c, 0x1f, 0x8b, 0xc7, 0x98, 0xbc, 0xa2, 0x00, 0x1d,
	0x43, 0xbe, 0x26, 0x56, 0xb9, 0x7e, 0x4b, 0xec, 0x72, 0x7d, 0x4c, 0x5a, 0xae, 0x07, 0x30, 0x7b,
	0x33, 0xb4, 0x07, 0x74, 0x16, 0x55, 0x2a, 0x6d, 0x00, 0xa9, 0xf0, 0x8f, 0x2c, 0xe4, 0x01, 0xb1,
	0x1a, 0xbb, 0x07, 0xf1, 0x83, 0xe1, 0xb6, 0xfb, 0x09, 0x96, 0xaa, 0x0f, 0x8a, 0x3a, 0xb0, 0x51,
	0x8d, 0x2b, 0x75, 0x7b, 0x40, 0x6b, 0x4a, 0x51, 0xb9, 0x99, 0x31, 0xab, 0x7d, 0x0e, 0xeb, 0xfd,
	0x2c, 0xe0, 0xea, 0x1c, 0x15, 0xd3, 0x0f, 0xfc, 0x32, 0x31, 0x4f, 0x68, 0x0d, 0x96, 0x0d, 0x1e,
	0x5d, 0x61, 0x1c, 0xf0, 0x78, 0x4c, 0x5e, 0x69, 0x3f, 0xa6, 0x88, 0xa5, 0x29, 0xea, 0xaa, 0xe5,
	0x26, 0x0f, 0x3f, 0x67, 0x1a, 0xd9, 0xee, 0xf7, 0xb0, 0x54, 0x54, 0x32, 0x26, 0x3a, 0xb0, 0x51,
	0x8d, 0x2b, 0x57, 0xdd, 0x82, 0xd7, 0x35, 0x45, 0x77, 0xfe, 0x81, 0x87, 0x48, 0x2c, 0xba, 0x03,
	0x9b, 0x35, 0xe9, 0x5c, 0x04, 0x59, 0x88, 0x46, 0xb4, 0xdd, 0xcf, 0xb9, 0x75, 0x67, 0xc2, 0x37,
	0x23, 0x33, 0xa7, 0xbc, 0x01, 0xa7, 0xc9, 0x2a, 0x27, 0x6d, 0x43, 0xef, 0x99, 0xaa, 0x83, 0x30,
	0x37, 0xe6, 0x79, 0xa6, 0x77, 0x46, 0x6c, 0xf7, 0x6f, 0x0b, 0x56, 0x2e, 0x25, 0x1f, 0xf3, 0xb8,
	0x6c, 0x66, 0x1b, 0x7a, 0x75, 0x52, 0x77, 0xbe, 0xa1, 0x9d, 0x0c, 0x3f, 0xe6, 0x33, 0x6d, 0xf0,
	0xd3, 0x81, 0x47, 0x6c, 0xdd, 0x7e, 0x83, 0xbf, 0x1f, 0x5c, 0xf4, 0xbd, 0xef, 0x48, 0xeb, 0x85,
	0x94, 0xdb, 0xb3, 0x21, 0x69, 0xd3, 0x4d, 0x58, 0x7f, 0xce, 0x6f, 0xc9, 0xdc, 0x0b, 0x09, 0xd7,
	0xb7, 0xd7, 0xa4, 0xf3, 0x42, 0xc2, 0xb7, 0xc3, 0xcb, 0x0b, 0x32, 0xef, 0xfe, 0x08, 0xcb, 0x85,
	0xc1, 0xfa, 0x41, 0x60, 0x75, 0x18, 0x06, 0xbc, 0x3c, 0xa7, 0x5c, 0x3a, 0x91, 0xc8, 0x94, 0x99,
	0xff, 0x36, 0xf4, 0xea, 0x92, 0x87, 0x21, 0x32, 0xf3, 0x10, 0x9e, 0xa7, 0x79, 0xf8, 0x20, 0xee,
	0x31, 0x20, 0x2d, 0x77, 0x00, 0x6b, 0x85, 0x74, 0x93, 0xb2, 0x31, 0x1a, 0x6f, 0xd7, 0x60, 0xd9,
	0x04, 0x95, 0x93, 0xcd, 0x07, 0xa8, 0xd1, 0x15, 0x4a, 0x2e, 0xf4, 0x81, 0xab, 0xb0, 0x98, 0x93,
	0x6b, 0x1e, 0x61, 0x4a, 0x6c, 0xf7, 0x57, 0x0b, 0xe0, 0x4a, 0x3c, 0xa2, 0xcc, 0xdb, 0xe8, 0x01,
	0x9d, 0x45, 0xf5, 0xe1, 0x54, 0xf8, 0xac, 0x81, 0x4d, 0x58, 0xaf, 0xf0, 0xfa, 0xed, 0x2b, 0xc2,
	0xa5, 0xef, 0x67, 0x89, 0x79, 0x1f, 0xf9, 0x74, 0x6a, 0x39, 0x79, 0x57, 0x6d, 0xf7, 0x77, 0x0b,
	0xba, 0xe6, 0x67, 0x4c, 0x84, 0xa8, 0xbf, 0xef, 0x62, 0x5d, 0xb9, 0xc6, 0x3a, 0xac, 0x96, 0x74,
	0x88, 0x71, 0x80, 0x92, 0x58, 0xfa, 0xa8, 0x12, 0x9a, 0xaf, 0x3f, 0x4b, 0x92, 0x90, 0xa3, 0x24,
	0xb6, 0xf6, 0xb7, 0x94, 0xf2, 0x33, 0x0b, 0xad, 0x45, 0x5f, 0xc3, 0x5a, 0xa9, 0x79, 0xe8, 0x23,
	0x7f, 0x40, 0x49, 0xda, 0xb5, 0x6a, 0xfd, 0x70, 0x2c, 0xca, 0x8c, 0x39, 0xf7, 0x27, 0x58, 0xd0,
	0x52, 0xee, 0xd4, 0x34, 0xbd, 0x69, 0x54, 0x0d, 0x17, 0x9f, 0xbe, 0x55, 0xc7, 0x5e, 0x16, 0xc7,
	0x1a, 0xdb, 0x45, 0x97, 0x39, 0xfe, 0xc0, 0x78, 0xa8, 0xc7, 0x5b, 0xdf, 0x3c, 0xcc, 0x7c, 0x1f,
	0x8d, 0x3f, 0x3f, 0x5b, 0xb3, 0xd7, 0xd2, 0xcf, 0xd4, 0x17, 0x21, 0xb9, 0x9a, 0xe4, 0x97, 0x59,
	0x87, 0xd5, 0xf3, 0x7e, 0xf3, 0x2a, 0x15, 0x38, 0x1b, 0xd8, 0x06, 0x90, 0x02, 0x56, 0xa6, 0x55,
	0xd9, 0x5a, 0xbe, 0xb2, 0x2a, 0x2c, 0x7e, 0xed, 0xda, 0xef, 0x77, 0xff, 0x7c, 0xda, 0xb5, 0xfe,
	0x7a, 0xda, 0xb5, 0xfe, 0x79, 0xda, 0xb5, 0x3e, 0x91, 0xe4, 0xee, 0xa8, 0xf6, 0xaf, 0xe4, 0xae,
	0x63, 0xfe, 0x91, 0x1c, 0xff, 0x1b, 0x00, 0x00, 0xff, 0xff, 0x63, 0x7d, 0x56, 0x29, 0xad, 0x08,
	0x00, 0x00,
}

func (m *Organization) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Organization) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Organization) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Details) > 0 {
		i -= len(m.Details)
		copy(dAtA[i:], m.Details)
		i = encodeVarintBase(dAtA, i, uint64(len(m.Details)))
		i--
		dAtA[i] = 0x42
	}
	if len(m.ImageUrl) > 0 {
		i -= len(m.ImageUrl)
		copy(dAtA[i:], m.ImageUrl)
		i = encodeVarintBase(dAtA, i, uint64(len(m.ImageUrl)))
		i--
		dAtA[i] = 0x3a
	}
	if m.UpdateAt != 0 {
		i = encodeVarintBase(dAtA, i, uint64(m.UpdateAt))
		i--
		dAtA[i] = 0x30
	}
	if m.Status != 0 {
		i = encodeVarintBase(dAtA, i, uint64(m.Status))
		i--
		dAtA[i] = 0x28
	}
	if m.DataStatus != 0 {
		i = encodeVarintBase(dAtA, i, uint64(m.DataStatus))
		i--
		dAtA[i] = 0x20
	}
	if len(m.IdentityId) > 0 {
		i -= len(m.IdentityId)
		copy(dAtA[i:], m.IdentityId)
		i = encodeVarintBase(dAtA, i, uint64(len(m.IdentityId)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.NodeId) > 0 {
		i -= len(m.NodeId)
		copy(dAtA[i:], m.NodeId)
		i = encodeVarintBase(dAtA, i, uint64(len(m.NodeId)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.NodeName) > 0 {
		i -= len(m.NodeName)
		copy(dAtA[i:], m.NodeName)
		i = encodeVarintBase(dAtA, i, uint64(len(m.NodeName)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *TaskOrganization) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TaskOrganization) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TaskOrganization) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.IdentityId) > 0 {
		i -= len(m.IdentityId)
		copy(dAtA[i:], m.IdentityId)
		i = encodeVarintBase(dAtA, i, uint64(len(m.IdentityId)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.NodeId) > 0 {
		i -= len(m.NodeId)
		copy(dAtA[i:], m.NodeId)
		i = encodeVarintBase(dAtA, i, uint64(len(m.NodeId)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.NodeName) > 0 {
		i -= len(m.NodeName)
		copy(dAtA[i:], m.NodeName)
		i = encodeVarintBase(dAtA, i, uint64(len(m.NodeName)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.PartyId) > 0 {
		i -= len(m.PartyId)
		copy(dAtA[i:], m.PartyId)
		i = encodeVarintBase(dAtA, i, uint64(len(m.PartyId)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *SimpleResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *SimpleResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *SimpleResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Msg) > 0 {
		i -= len(m.Msg)
		copy(dAtA[i:], m.Msg)
		i = encodeVarintBase(dAtA, i, uint64(len(m.Msg)))
		i--
		dAtA[i] = 0x12
	}
	if m.Status != 0 {
		i = encodeVarintBase(dAtA, i, uint64(m.Status))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TaskResourceCostDeclare) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TaskResourceCostDeclare) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TaskResourceCostDeclare) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Duration != 0 {
		i = encodeVarintBase(dAtA, i, uint64(m.Duration))
		i--
		dAtA[i] = 0x20
	}
	if m.Bandwidth != 0 {
		i = encodeVarintBase(dAtA, i, uint64(m.Bandwidth))
		i--
		dAtA[i] = 0x18
	}
	if m.Processor != 0 {
		i = encodeVarintBase(dAtA, i, uint64(m.Processor))
		i--
		dAtA[i] = 0x10
	}
	if m.Memory != 0 {
		i = encodeVarintBase(dAtA, i, uint64(m.Memory))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func encodeVarintBase(dAtA []byte, offset int, v uint64) int {
	offset -= sovBase(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *Organization) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.NodeName)
	if l > 0 {
		n += 1 + l + sovBase(uint64(l))
	}
	l = len(m.NodeId)
	if l > 0 {
		n += 1 + l + sovBase(uint64(l))
	}
	l = len(m.IdentityId)
	if l > 0 {
		n += 1 + l + sovBase(uint64(l))
	}
	if m.DataStatus != 0 {
		n += 1 + sovBase(uint64(m.DataStatus))
	}
	if m.Status != 0 {
		n += 1 + sovBase(uint64(m.Status))
	}
	if m.UpdateAt != 0 {
		n += 1 + sovBase(uint64(m.UpdateAt))
	}
	l = len(m.ImageUrl)
	if l > 0 {
		n += 1 + l + sovBase(uint64(l))
	}
	l = len(m.Details)
	if l > 0 {
		n += 1 + l + sovBase(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TaskOrganization) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.PartyId)
	if l > 0 {
		n += 1 + l + sovBase(uint64(l))
	}
	l = len(m.NodeName)
	if l > 0 {
		n += 1 + l + sovBase(uint64(l))
	}
	l = len(m.NodeId)
	if l > 0 {
		n += 1 + l + sovBase(uint64(l))
	}
	l = len(m.IdentityId)
	if l > 0 {
		n += 1 + l + sovBase(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *SimpleResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Status != 0 {
		n += 1 + sovBase(uint64(m.Status))
	}
	l = len(m.Msg)
	if l > 0 {
		n += 1 + l + sovBase(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TaskResourceCostDeclare) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Memory != 0 {
		n += 1 + sovBase(uint64(m.Memory))
	}
	if m.Processor != 0 {
		n += 1 + sovBase(uint64(m.Processor))
	}
	if m.Bandwidth != 0 {
		n += 1 + sovBase(uint64(m.Bandwidth))
	}
	if m.Duration != 0 {
		n += 1 + sovBase(uint64(m.Duration))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func sovBase(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozBase(x uint64) (n int) {
	return sovBase(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *Organization) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowBase
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Organization: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Organization: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field NodeName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBase
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthBase
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthBase
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.NodeName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field NodeId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBase
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthBase
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthBase
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.NodeId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field IdentityId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBase
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthBase
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthBase
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.IdentityId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field DataStatus", wireType)
			}
			m.DataStatus = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBase
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.DataStatus |= DataStatus(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Status", wireType)
			}
			m.Status = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBase
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Status |= CommonStatus(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field UpdateAt", wireType)
			}
			m.UpdateAt = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBase
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.UpdateAt |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ImageUrl", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBase
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthBase
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthBase
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ImageUrl = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Details", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBase
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthBase
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthBase
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Details = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipBase(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthBase
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TaskOrganization) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowBase
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TaskOrganization: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TaskOrganization: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PartyId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBase
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthBase
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthBase
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PartyId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field NodeName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBase
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthBase
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthBase
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.NodeName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field NodeId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBase
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthBase
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthBase
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.NodeId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field IdentityId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBase
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthBase
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthBase
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.IdentityId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipBase(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthBase
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *SimpleResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowBase
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: SimpleResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: SimpleResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Status", wireType)
			}
			m.Status = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBase
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Status |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Msg", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBase
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthBase
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthBase
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Msg = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipBase(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthBase
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TaskResourceCostDeclare) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowBase
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TaskResourceCostDeclare: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TaskResourceCostDeclare: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Memory", wireType)
			}
			m.Memory = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBase
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Memory |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Processor", wireType)
			}
			m.Processor = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBase
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Processor |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Bandwidth", wireType)
			}
			m.Bandwidth = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBase
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Bandwidth |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Duration", wireType)
			}
			m.Duration = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBase
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Duration |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipBase(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthBase
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipBase(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowBase
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowBase
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowBase
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthBase
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupBase
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthBase
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthBase        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowBase          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupBase = fmt.Errorf("proto: unexpected end of group")
)
