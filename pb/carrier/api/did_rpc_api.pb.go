// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: carrier/api/did_rpc_api.proto

package api

import (
	context "context"
	fmt "fmt"
	proto "github.com/gogo/protobuf/proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type CreateDIDResponse struct {
	Status               int32    `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Msg                  string   `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Did                  string   `protobuf:"bytes,3,opt,name=did,proto3" json:"did,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateDIDResponse) Reset()         { *m = CreateDIDResponse{} }
func (m *CreateDIDResponse) String() string { return proto.CompactTextString(m) }
func (*CreateDIDResponse) ProtoMessage()    {}
func (*CreateDIDResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_1996f817b25d14b3, []int{0}
}
func (m *CreateDIDResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *CreateDIDResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_CreateDIDResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *CreateDIDResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateDIDResponse.Merge(m, src)
}
func (m *CreateDIDResponse) XXX_Size() int {
	return m.Size()
}
func (m *CreateDIDResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateDIDResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateDIDResponse proto.InternalMessageInfo

func (m *CreateDIDResponse) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *CreateDIDResponse) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

func (m *CreateDIDResponse) GetDid() string {
	if m != nil {
		return m.Did
	}
	return ""
}

type CreateVCRequest struct {
	Did                  string   `protobuf:"bytes,1,opt,name=did,proto3" json:"did,omitempty"`
	Context              string   `protobuf:"bytes,2,opt,name=context,proto3" json:"context,omitempty"`
	PctId                uint64   `protobuf:"varint,3,opt,name=pct_id,json=pctId,proto3" json:"pct_id,omitempty"`
	Claim                string   `protobuf:"bytes,4,opt,name=claim,proto3" json:"claim,omitempty"`
	ExpirationDate       string   `protobuf:"bytes,5,opt,name=expirationDate,proto3" json:"expirationDate,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateVCRequest) Reset()         { *m = CreateVCRequest{} }
func (m *CreateVCRequest) String() string { return proto.CompactTextString(m) }
func (*CreateVCRequest) ProtoMessage()    {}
func (*CreateVCRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_1996f817b25d14b3, []int{1}
}
func (m *CreateVCRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *CreateVCRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_CreateVCRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *CreateVCRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateVCRequest.Merge(m, src)
}
func (m *CreateVCRequest) XXX_Size() int {
	return m.Size()
}
func (m *CreateVCRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateVCRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateVCRequest proto.InternalMessageInfo

func (m *CreateVCRequest) GetDid() string {
	if m != nil {
		return m.Did
	}
	return ""
}

func (m *CreateVCRequest) GetContext() string {
	if m != nil {
		return m.Context
	}
	return ""
}

func (m *CreateVCRequest) GetPctId() uint64 {
	if m != nil {
		return m.PctId
	}
	return 0
}

func (m *CreateVCRequest) GetClaim() string {
	if m != nil {
		return m.Claim
	}
	return ""
}

func (m *CreateVCRequest) GetExpirationDate() string {
	if m != nil {
		return m.ExpirationDate
	}
	return ""
}

type CreateVCResponse struct {
	Status               int32    `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Msg                  string   `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Vc                   string   `protobuf:"bytes,3,opt,name=vc,proto3" json:"vc,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateVCResponse) Reset()         { *m = CreateVCResponse{} }
func (m *CreateVCResponse) String() string { return proto.CompactTextString(m) }
func (*CreateVCResponse) ProtoMessage()    {}
func (*CreateVCResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_1996f817b25d14b3, []int{2}
}
func (m *CreateVCResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *CreateVCResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_CreateVCResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *CreateVCResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateVCResponse.Merge(m, src)
}
func (m *CreateVCResponse) XXX_Size() int {
	return m.Size()
}
func (m *CreateVCResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateVCResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateVCResponse proto.InternalMessageInfo

func (m *CreateVCResponse) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *CreateVCResponse) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

func (m *CreateVCResponse) GetVc() string {
	if m != nil {
		return m.Vc
	}
	return ""
}

func init() {
	proto.RegisterType((*CreateDIDResponse)(nil), "carrier.api.CreateDIDResponse")
	proto.RegisterType((*CreateVCRequest)(nil), "carrier.api.CreateVCRequest")
	proto.RegisterType((*CreateVCResponse)(nil), "carrier.api.CreateVCResponse")
}

func init() { proto.RegisterFile("carrier/api/did_rpc_api.proto", fileDescriptor_1996f817b25d14b3) }

var fileDescriptor_1996f817b25d14b3 = []byte{
	// 423 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x52, 0x5d, 0x6b, 0x13, 0x41,
	0x14, 0x65, 0xd2, 0x26, 0xda, 0x11, 0x6a, 0x1d, 0xb4, 0xac, 0xb1, 0x59, 0xca, 0x2a, 0x52, 0x0a,
	0x9d, 0x45, 0x7d, 0xcb, 0xa3, 0x59, 0xc1, 0x80, 0x20, 0xac, 0xd0, 0x07, 0x5f, 0xc2, 0x64, 0xe6,
	0xba, 0x1d, 0xcc, 0xee, 0x8c, 0x33, 0x77, 0xd7, 0xfa, 0xea, 0x4f, 0xd0, 0x3f, 0xe5, 0xa3, 0xe0,
	0x1f, 0x90, 0xa0, 0xff, 0x43, 0xf6, 0x2b, 0x16, 0x8d, 0x0f, 0xbe, 0xcd, 0xb9, 0xe7, 0x70, 0xee,
	0x9e, 0x73, 0x97, 0x4e, 0xa4, 0x70, 0x4e, 0x83, 0x8b, 0x85, 0xd5, 0xb1, 0xd2, 0x6a, 0xe1, 0xac,
	0x5c, 0x08, 0xab, 0xb9, 0x75, 0x06, 0x0d, 0xbb, 0xd1, 0xd1, 0x5c, 0x58, 0x3d, 0x3e, 0xca, 0x8c,
	0xc9, 0x56, 0xd0, 0x48, 0x45, 0x51, 0x18, 0x14, 0xa8, 0x4d, 0xe1, 0x5b, 0xe9, 0xf8, 0x5e, 0xc7,
	0x36, 0x68, 0x59, 0xbe, 0x89, 0x21, 0xb7, 0xf8, 0xa1, 0x25, 0xa3, 0x97, 0xf4, 0xd6, 0xcc, 0x81,
	0x40, 0x48, 0xe6, 0x49, 0x0a, 0xde, 0x9a, 0xc2, 0x03, 0x3b, 0xa4, 0x23, 0x8f, 0x02, 0x4b, 0x1f,
	0x90, 0x63, 0x72, 0x32, 0x4c, 0x3b, 0xc4, 0x0e, 0xe8, 0x4e, 0xee, 0xb3, 0x60, 0x70, 0x4c, 0x4e,
	0xf6, 0xd2, 0xfa, 0x59, 0x4f, 0x94, 0x56, 0xc1, 0x4e, 0x3b, 0x51, 0x5a, 0x45, 0x9f, 0x08, 0xbd,
	0xd9, 0x3a, 0x9e, 0xcf, 0x52, 0x78, 0x57, 0x82, 0xc7, 0x5e, 0x45, 0x36, 0x2a, 0x16, 0xd0, 0x6b,
	0xd2, 0x14, 0x08, 0x97, 0xd8, 0xb9, 0xf5, 0x90, 0xdd, 0xa1, 0x23, 0x2b, 0x71, 0xd1, 0x99, 0xee,
	0xa6, 0x43, 0x2b, 0x71, 0xae, 0xd8, 0x6d, 0x3a, 0x94, 0x2b, 0xa1, 0xf3, 0x60, 0xb7, 0x91, 0xb7,
	0x80, 0x3d, 0xa4, 0xfb, 0x70, 0x69, 0xb5, 0x6b, 0xf2, 0x26, 0x02, 0x21, 0x18, 0x36, 0xf4, 0x1f,
	0xd3, 0xe8, 0x05, 0x3d, 0xf8, 0xfd, 0x4d, 0xff, 0x1d, 0x72, 0x9f, 0x0e, 0x2a, 0xd9, 0x65, 0x1c,
	0x54, 0xf2, 0xf1, 0x4f, 0x42, 0x69, 0x32, 0x4f, 0x5e, 0x81, 0xab, 0xb4, 0x04, 0xa6, 0xe9, 0xde,
	0xa6, 0x42, 0x76, 0xc8, 0xdb, 0xb6, 0x79, 0xdf, 0x36, 0x7f, 0x56, 0xb7, 0x3d, 0x0e, 0xf9, 0x95,
	0x83, 0xf1, 0xbf, 0x2a, 0x8f, 0x1e, 0x7c, 0xfc, 0xf6, 0xe3, 0xf3, 0x20, 0x8c, 0xee, 0xc6, 0xfd,
	0xdd, 0xab, 0x47, 0xf5, 0xd9, 0x63, 0xd9, 0x4b, 0xa7, 0xe4, 0x94, 0xad, 0xe8, 0xf5, 0x3e, 0x07,
	0x3b, 0xda, 0xe2, 0xb8, 0xa9, 0x7c, 0x3c, 0xf9, 0x07, 0xdb, 0xad, 0xbb, 0xdf, 0xac, 0x9b, 0x44,
	0xc1, 0xf6, 0x75, 0xe7, 0xb3, 0x29, 0x39, 0x7d, 0xfa, 0xfc, 0xcb, 0x3a, 0x24, 0x5f, 0xd7, 0x21,
	0xf9, 0xbe, 0x0e, 0xc9, 0xeb, 0x69, 0xa6, 0xf1, 0xa2, 0x5c, 0x72, 0x69, 0xf2, 0x58, 0x09, 0x2c,
	0x73, 0x04, 0x79, 0xe1, 0xdb, 0xe7, 0x59, 0x01, 0xf8, 0xde, 0xb8, 0xb7, 0x67, 0xbd, 0x9b, 0x5d,
	0xc6, 0x57, 0xfe, 0xdf, 0xe5, 0xa8, 0x69, 0xe3, 0xc9, 0xaf, 0x00, 0x00, 0x00, 0xff, 0xff, 0xea,
	0x0e, 0x1d, 0x78, 0xd5, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// DIDServiceClient is the client API for DIDService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type DIDServiceClient interface {
	CreateDID(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*CreateDIDResponse, error)
	CreateVC(ctx context.Context, in *CreateVCRequest, opts ...grpc.CallOption) (*CreateVCResponse, error)
}

type dIDServiceClient struct {
	cc *grpc.ClientConn
}

func NewDIDServiceClient(cc *grpc.ClientConn) DIDServiceClient {
	return &dIDServiceClient{cc}
}

func (c *dIDServiceClient) CreateDID(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*CreateDIDResponse, error) {
	out := new(CreateDIDResponse)
	err := c.cc.Invoke(ctx, "/carrier.api.DIDService/CreateDID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dIDServiceClient) CreateVC(ctx context.Context, in *CreateVCRequest, opts ...grpc.CallOption) (*CreateVCResponse, error) {
	out := new(CreateVCResponse)
	err := c.cc.Invoke(ctx, "/carrier.api.DIDService/CreateVC", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// DIDServiceServer is the server API for DIDService service.
type DIDServiceServer interface {
	CreateDID(context.Context, *emptypb.Empty) (*CreateDIDResponse, error)
	CreateVC(context.Context, *CreateVCRequest) (*CreateVCResponse, error)
}

// UnimplementedDIDServiceServer can be embedded to have forward compatible implementations.
type UnimplementedDIDServiceServer struct {
}

func (*UnimplementedDIDServiceServer) CreateDID(ctx context.Context, req *emptypb.Empty) (*CreateDIDResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateDID not implemented")
}
func (*UnimplementedDIDServiceServer) CreateVC(ctx context.Context, req *CreateVCRequest) (*CreateVCResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateVC not implemented")
}

func RegisterDIDServiceServer(s *grpc.Server, srv DIDServiceServer) {
	s.RegisterService(&_DIDService_serviceDesc, srv)
}

func _DIDService_CreateDID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(emptypb.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DIDServiceServer).CreateDID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/carrier.api.DIDService/CreateDID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DIDServiceServer).CreateDID(ctx, req.(*emptypb.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _DIDService_CreateVC_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateVCRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DIDServiceServer).CreateVC(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/carrier.api.DIDService/CreateVC",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DIDServiceServer).CreateVC(ctx, req.(*CreateVCRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _DIDService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "carrier.api.DIDService",
	HandlerType: (*DIDServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateDID",
			Handler:    _DIDService_CreateDID_Handler,
		},
		{
			MethodName: "CreateVC",
			Handler:    _DIDService_CreateVC_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "carrier/api/did_rpc_api.proto",
}

func (m *CreateDIDResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *CreateDIDResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *CreateDIDResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Did) > 0 {
		i -= len(m.Did)
		copy(dAtA[i:], m.Did)
		i = encodeVarintDidRpcApi(dAtA, i, uint64(len(m.Did)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Msg) > 0 {
		i -= len(m.Msg)
		copy(dAtA[i:], m.Msg)
		i = encodeVarintDidRpcApi(dAtA, i, uint64(len(m.Msg)))
		i--
		dAtA[i] = 0x12
	}
	if m.Status != 0 {
		i = encodeVarintDidRpcApi(dAtA, i, uint64(m.Status))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *CreateVCRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *CreateVCRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *CreateVCRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.ExpirationDate) > 0 {
		i -= len(m.ExpirationDate)
		copy(dAtA[i:], m.ExpirationDate)
		i = encodeVarintDidRpcApi(dAtA, i, uint64(len(m.ExpirationDate)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.Claim) > 0 {
		i -= len(m.Claim)
		copy(dAtA[i:], m.Claim)
		i = encodeVarintDidRpcApi(dAtA, i, uint64(len(m.Claim)))
		i--
		dAtA[i] = 0x22
	}
	if m.PctId != 0 {
		i = encodeVarintDidRpcApi(dAtA, i, uint64(m.PctId))
		i--
		dAtA[i] = 0x18
	}
	if len(m.Context) > 0 {
		i -= len(m.Context)
		copy(dAtA[i:], m.Context)
		i = encodeVarintDidRpcApi(dAtA, i, uint64(len(m.Context)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Did) > 0 {
		i -= len(m.Did)
		copy(dAtA[i:], m.Did)
		i = encodeVarintDidRpcApi(dAtA, i, uint64(len(m.Did)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *CreateVCResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *CreateVCResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *CreateVCResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Vc) > 0 {
		i -= len(m.Vc)
		copy(dAtA[i:], m.Vc)
		i = encodeVarintDidRpcApi(dAtA, i, uint64(len(m.Vc)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Msg) > 0 {
		i -= len(m.Msg)
		copy(dAtA[i:], m.Msg)
		i = encodeVarintDidRpcApi(dAtA, i, uint64(len(m.Msg)))
		i--
		dAtA[i] = 0x12
	}
	if m.Status != 0 {
		i = encodeVarintDidRpcApi(dAtA, i, uint64(m.Status))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func encodeVarintDidRpcApi(dAtA []byte, offset int, v uint64) int {
	offset -= sovDidRpcApi(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *CreateDIDResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Status != 0 {
		n += 1 + sovDidRpcApi(uint64(m.Status))
	}
	l = len(m.Msg)
	if l > 0 {
		n += 1 + l + sovDidRpcApi(uint64(l))
	}
	l = len(m.Did)
	if l > 0 {
		n += 1 + l + sovDidRpcApi(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *CreateVCRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Did)
	if l > 0 {
		n += 1 + l + sovDidRpcApi(uint64(l))
	}
	l = len(m.Context)
	if l > 0 {
		n += 1 + l + sovDidRpcApi(uint64(l))
	}
	if m.PctId != 0 {
		n += 1 + sovDidRpcApi(uint64(m.PctId))
	}
	l = len(m.Claim)
	if l > 0 {
		n += 1 + l + sovDidRpcApi(uint64(l))
	}
	l = len(m.ExpirationDate)
	if l > 0 {
		n += 1 + l + sovDidRpcApi(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *CreateVCResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Status != 0 {
		n += 1 + sovDidRpcApi(uint64(m.Status))
	}
	l = len(m.Msg)
	if l > 0 {
		n += 1 + l + sovDidRpcApi(uint64(l))
	}
	l = len(m.Vc)
	if l > 0 {
		n += 1 + l + sovDidRpcApi(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func sovDidRpcApi(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozDidRpcApi(x uint64) (n int) {
	return sovDidRpcApi(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *CreateDIDResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDidRpcApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: CreateDIDResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: CreateDIDResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Status", wireType)
			}
			m.Status = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDidRpcApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Status |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Msg", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDidRpcApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDidRpcApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDidRpcApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Msg = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Did", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDidRpcApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDidRpcApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDidRpcApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Did = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDidRpcApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDidRpcApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *CreateVCRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDidRpcApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: CreateVCRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: CreateVCRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Did", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDidRpcApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDidRpcApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDidRpcApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Did = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Context", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDidRpcApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDidRpcApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDidRpcApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Context = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PctId", wireType)
			}
			m.PctId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDidRpcApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.PctId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Claim", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDidRpcApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDidRpcApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDidRpcApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Claim = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ExpirationDate", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDidRpcApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDidRpcApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDidRpcApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ExpirationDate = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDidRpcApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDidRpcApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *CreateVCResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDidRpcApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: CreateVCResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: CreateVCResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Status", wireType)
			}
			m.Status = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDidRpcApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Status |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Msg", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDidRpcApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDidRpcApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDidRpcApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Msg = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Vc", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDidRpcApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDidRpcApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDidRpcApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Vc = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDidRpcApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDidRpcApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipDidRpcApi(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowDidRpcApi
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowDidRpcApi
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowDidRpcApi
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthDidRpcApi
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupDidRpcApi
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthDidRpcApi
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthDidRpcApi        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowDidRpcApi          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupDidRpcApi = fmt.Errorf("proto: unexpected end of group")
)
