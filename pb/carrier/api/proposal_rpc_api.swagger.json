{
  "swagger": "2.0",
  "info": {
    "title": "carrier/api/proposal_rpc_api.proto",
    "version": "version not set"
  },
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/carrier/v1/proposal/effectProposal": {
      "post": {
        "operationId": "ProposalService_EffectProposal",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiEffectProposalResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/apiEffectProposalRequest"
            }
          }
        ],
        "tags": [
          "ProposalService"
        ]
      }
    },
    "/carrier/v1/proposal/submitProposal": {
      "post": {
        "operationId": "ProposalService_SubmitProposal",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiSubmitProposalResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/apiSubmitProposalRequest"
            }
          }
        ],
        "tags": [
          "ProposalService"
        ]
      }
    },
    "/carrier/v1/proposal/voteProposal": {
      "post": {
        "operationId": "ProposalService_VoteProposal",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiVoteProposalResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/apiVoteProposalRequest"
            }
          }
        ],
        "tags": [
          "ProposalService"
        ]
      }
    },
    "/carrier/v1/proposal/withdrawProposal": {
      "post": {
        "operationId": "ProposalService_WithdrawProposal",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiWithdrawProposalResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/apiWithdrawProposalRequest"
            }
          }
        ],
        "tags": [
          "ProposalService"
        ]
      }
    }
  },
  "definitions": {
    "apiEffectProposalRequest": {
      "type": "object",
      "properties": {
        "proposal_id": {
          "type": "string"
        }
      }
    },
    "apiEffectProposalResponse": {
      "type": "object",
      "properties": {
        "status": {
          "type": "integer",
          "format": "int32"
        },
        "msg": {
          "type": "string"
        },
        "result": {
          "type": "boolean"
        },
        "tx_info": {
          "$ref": "#/definitions/apiTxInfo"
        }
      }
    },
    "apiSubmitProposalRequest": {
      "type": "object",
      "properties": {
        "proposal_type": {
          "type": "integer",
          "format": "int32"
        },
        "proposal_url": {
          "type": "string"
        },
        "candidate_address": {
          "type": "string"
        },
        "candidate_service_url": {
          "type": "string"
        }
      }
    },
    "apiSubmitProposalResponse": {
      "type": "object",
      "properties": {
        "status": {
          "type": "integer",
          "format": "int32"
        },
        "msg": {
          "type": "string"
        },
        "proposalId": {
          "type": "string"
        },
        "tx_info": {
          "$ref": "#/definitions/apiTxInfo"
        }
      }
    },
    "apiTxInfo": {
      "type": "object",
      "properties": {
        "block_number": {
          "type": "string",
          "format": "uint64"
        },
        "tx_hash": {
          "type": "string"
        },
        "tx_index": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "apiVoteProposalRequest": {
      "type": "object",
      "properties": {
        "proposal_id": {
          "type": "string"
        }
      }
    },
    "apiVoteProposalResponse": {
      "type": "object",
      "properties": {
        "status": {
          "type": "integer",
          "format": "int32"
        },
        "msg": {
          "type": "string"
        },
        "result": {
          "type": "boolean"
        },
        "tx_info": {
          "$ref": "#/definitions/apiTxInfo"
        }
      }
    },
    "apiWithdrawProposalRequest": {
      "type": "object",
      "properties": {
        "proposal_id": {
          "type": "string"
        }
      }
    },
    "apiWithdrawProposalResponse": {
      "type": "object",
      "properties": {
        "status": {
          "type": "integer",
          "format": "int32"
        },
        "msg": {
          "type": "string"
        },
        "result": {
          "type": "boolean"
        },
        "tx_info": {
          "$ref": "#/definitions/apiTxInfo"
        }
      }
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "type_url": {
          "type": "string"
        },
        "value": {
          "type": "string",
          "format": "byte"
        }
      }
    },
    "runtimeError": {
      "type": "object",
      "properties": {
        "error": {
          "type": "string"
        },
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    }
  }
}
