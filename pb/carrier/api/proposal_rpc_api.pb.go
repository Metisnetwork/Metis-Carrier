// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: carrier/api/proposal_rpc_api.proto

package api

import (
	context "context"
	fmt "fmt"
	proto "github.com/gogo/protobuf/proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type SubmitProposalRequest struct {
	ProposalType         int32    `protobuf:"varint,1,opt,name=proposal_type,json=proposalType,proto3" json:"proposal_type,omitempty"`
	ProposalUrl          string   `protobuf:"bytes,2,opt,name=proposal_url,json=proposalUrl,proto3" json:"proposal_url,omitempty"`
	CandidateAddress     string   `protobuf:"bytes,3,opt,name=candidate_address,json=candidateAddress,proto3" json:"candidate_address,omitempty"`
	CandidateServiceUrl  string   `protobuf:"bytes,4,opt,name=candidate_service_url,json=candidateServiceUrl,proto3" json:"candidate_service_url,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SubmitProposalRequest) Reset()         { *m = SubmitProposalRequest{} }
func (m *SubmitProposalRequest) String() string { return proto.CompactTextString(m) }
func (*SubmitProposalRequest) ProtoMessage()    {}
func (*SubmitProposalRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_be05a87528352411, []int{0}
}
func (m *SubmitProposalRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *SubmitProposalRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_SubmitProposalRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *SubmitProposalRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubmitProposalRequest.Merge(m, src)
}
func (m *SubmitProposalRequest) XXX_Size() int {
	return m.Size()
}
func (m *SubmitProposalRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SubmitProposalRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SubmitProposalRequest proto.InternalMessageInfo

func (m *SubmitProposalRequest) GetProposalType() int32 {
	if m != nil {
		return m.ProposalType
	}
	return 0
}

func (m *SubmitProposalRequest) GetProposalUrl() string {
	if m != nil {
		return m.ProposalUrl
	}
	return ""
}

func (m *SubmitProposalRequest) GetCandidateAddress() string {
	if m != nil {
		return m.CandidateAddress
	}
	return ""
}

func (m *SubmitProposalRequest) GetCandidateServiceUrl() string {
	if m != nil {
		return m.CandidateServiceUrl
	}
	return ""
}

type SubmitProposalResponse struct {
	Status               int32    `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Msg                  string   `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	ProposalId           string   `protobuf:"bytes,3,opt,name=proposalId,proto3" json:"proposalId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SubmitProposalResponse) Reset()         { *m = SubmitProposalResponse{} }
func (m *SubmitProposalResponse) String() string { return proto.CompactTextString(m) }
func (*SubmitProposalResponse) ProtoMessage()    {}
func (*SubmitProposalResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_be05a87528352411, []int{1}
}
func (m *SubmitProposalResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *SubmitProposalResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_SubmitProposalResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *SubmitProposalResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubmitProposalResponse.Merge(m, src)
}
func (m *SubmitProposalResponse) XXX_Size() int {
	return m.Size()
}
func (m *SubmitProposalResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SubmitProposalResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SubmitProposalResponse proto.InternalMessageInfo

func (m *SubmitProposalResponse) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *SubmitProposalResponse) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

func (m *SubmitProposalResponse) GetProposalId() string {
	if m != nil {
		return m.ProposalId
	}
	return ""
}

type WithdrawProposalRequest struct {
	ProposalId           string   `protobuf:"bytes,1,opt,name=proposal_id,json=proposalId,proto3" json:"proposal_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WithdrawProposalRequest) Reset()         { *m = WithdrawProposalRequest{} }
func (m *WithdrawProposalRequest) String() string { return proto.CompactTextString(m) }
func (*WithdrawProposalRequest) ProtoMessage()    {}
func (*WithdrawProposalRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_be05a87528352411, []int{2}
}
func (m *WithdrawProposalRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *WithdrawProposalRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_WithdrawProposalRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *WithdrawProposalRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WithdrawProposalRequest.Merge(m, src)
}
func (m *WithdrawProposalRequest) XXX_Size() int {
	return m.Size()
}
func (m *WithdrawProposalRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_WithdrawProposalRequest.DiscardUnknown(m)
}

var xxx_messageInfo_WithdrawProposalRequest proto.InternalMessageInfo

func (m *WithdrawProposalRequest) GetProposalId() string {
	if m != nil {
		return m.ProposalId
	}
	return ""
}

type WithdrawProposalResponse struct {
	Status               int32    `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Msg                  string   `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Result               bool     `protobuf:"varint,3,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WithdrawProposalResponse) Reset()         { *m = WithdrawProposalResponse{} }
func (m *WithdrawProposalResponse) String() string { return proto.CompactTextString(m) }
func (*WithdrawProposalResponse) ProtoMessage()    {}
func (*WithdrawProposalResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_be05a87528352411, []int{3}
}
func (m *WithdrawProposalResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *WithdrawProposalResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_WithdrawProposalResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *WithdrawProposalResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WithdrawProposalResponse.Merge(m, src)
}
func (m *WithdrawProposalResponse) XXX_Size() int {
	return m.Size()
}
func (m *WithdrawProposalResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_WithdrawProposalResponse.DiscardUnknown(m)
}

var xxx_messageInfo_WithdrawProposalResponse proto.InternalMessageInfo

func (m *WithdrawProposalResponse) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *WithdrawProposalResponse) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

func (m *WithdrawProposalResponse) GetResult() bool {
	if m != nil {
		return m.Result
	}
	return false
}

type VoteProposalRequest struct {
	ProposalId           string   `protobuf:"bytes,1,opt,name=proposal_id,json=proposalId,proto3" json:"proposal_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VoteProposalRequest) Reset()         { *m = VoteProposalRequest{} }
func (m *VoteProposalRequest) String() string { return proto.CompactTextString(m) }
func (*VoteProposalRequest) ProtoMessage()    {}
func (*VoteProposalRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_be05a87528352411, []int{4}
}
func (m *VoteProposalRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *VoteProposalRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_VoteProposalRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *VoteProposalRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VoteProposalRequest.Merge(m, src)
}
func (m *VoteProposalRequest) XXX_Size() int {
	return m.Size()
}
func (m *VoteProposalRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_VoteProposalRequest.DiscardUnknown(m)
}

var xxx_messageInfo_VoteProposalRequest proto.InternalMessageInfo

func (m *VoteProposalRequest) GetProposalId() string {
	if m != nil {
		return m.ProposalId
	}
	return ""
}

type VoteProposalResponse struct {
	Status               int32    `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Msg                  string   `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Result               bool     `protobuf:"varint,3,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VoteProposalResponse) Reset()         { *m = VoteProposalResponse{} }
func (m *VoteProposalResponse) String() string { return proto.CompactTextString(m) }
func (*VoteProposalResponse) ProtoMessage()    {}
func (*VoteProposalResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_be05a87528352411, []int{5}
}
func (m *VoteProposalResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *VoteProposalResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_VoteProposalResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *VoteProposalResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VoteProposalResponse.Merge(m, src)
}
func (m *VoteProposalResponse) XXX_Size() int {
	return m.Size()
}
func (m *VoteProposalResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_VoteProposalResponse.DiscardUnknown(m)
}

var xxx_messageInfo_VoteProposalResponse proto.InternalMessageInfo

func (m *VoteProposalResponse) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *VoteProposalResponse) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

func (m *VoteProposalResponse) GetResult() bool {
	if m != nil {
		return m.Result
	}
	return false
}

type EffectProposalRequest struct {
	ProposalId           string   `protobuf:"bytes,1,opt,name=proposal_id,json=proposalId,proto3" json:"proposal_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EffectProposalRequest) Reset()         { *m = EffectProposalRequest{} }
func (m *EffectProposalRequest) String() string { return proto.CompactTextString(m) }
func (*EffectProposalRequest) ProtoMessage()    {}
func (*EffectProposalRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_be05a87528352411, []int{6}
}
func (m *EffectProposalRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *EffectProposalRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_EffectProposalRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *EffectProposalRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EffectProposalRequest.Merge(m, src)
}
func (m *EffectProposalRequest) XXX_Size() int {
	return m.Size()
}
func (m *EffectProposalRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_EffectProposalRequest.DiscardUnknown(m)
}

var xxx_messageInfo_EffectProposalRequest proto.InternalMessageInfo

func (m *EffectProposalRequest) GetProposalId() string {
	if m != nil {
		return m.ProposalId
	}
	return ""
}

type EffectProposalResponse struct {
	Status               int32    `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Msg                  string   `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Result               bool     `protobuf:"varint,3,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EffectProposalResponse) Reset()         { *m = EffectProposalResponse{} }
func (m *EffectProposalResponse) String() string { return proto.CompactTextString(m) }
func (*EffectProposalResponse) ProtoMessage()    {}
func (*EffectProposalResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_be05a87528352411, []int{7}
}
func (m *EffectProposalResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *EffectProposalResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_EffectProposalResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *EffectProposalResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EffectProposalResponse.Merge(m, src)
}
func (m *EffectProposalResponse) XXX_Size() int {
	return m.Size()
}
func (m *EffectProposalResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_EffectProposalResponse.DiscardUnknown(m)
}

var xxx_messageInfo_EffectProposalResponse proto.InternalMessageInfo

func (m *EffectProposalResponse) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *EffectProposalResponse) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

func (m *EffectProposalResponse) GetResult() bool {
	if m != nil {
		return m.Result
	}
	return false
}

func init() {
	proto.RegisterType((*SubmitProposalRequest)(nil), "carrier.api.SubmitProposalRequest")
	proto.RegisterType((*SubmitProposalResponse)(nil), "carrier.api.SubmitProposalResponse")
	proto.RegisterType((*WithdrawProposalRequest)(nil), "carrier.api.WithdrawProposalRequest")
	proto.RegisterType((*WithdrawProposalResponse)(nil), "carrier.api.WithdrawProposalResponse")
	proto.RegisterType((*VoteProposalRequest)(nil), "carrier.api.VoteProposalRequest")
	proto.RegisterType((*VoteProposalResponse)(nil), "carrier.api.VoteProposalResponse")
	proto.RegisterType((*EffectProposalRequest)(nil), "carrier.api.EffectProposalRequest")
	proto.RegisterType((*EffectProposalResponse)(nil), "carrier.api.EffectProposalResponse")
}

func init() {
	proto.RegisterFile("carrier/api/proposal_rpc_api.proto", fileDescriptor_be05a87528352411)
}

var fileDescriptor_be05a87528352411 = []byte{
	// 543 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x94, 0x41, 0x6f, 0xd3, 0x30,
	0x14, 0xc7, 0xe5, 0x6d, 0x54, 0xf0, 0x36, 0xa0, 0x78, 0xb4, 0x54, 0x15, 0x2a, 0x6d, 0xca, 0x50,
	0x55, 0x58, 0x02, 0x43, 0x42, 0xa8, 0x37, 0x90, 0x90, 0xe0, 0x86, 0x3a, 0x06, 0x68, 0x42, 0xaa,
	0xdc, 0xc4, 0x6b, 0x2d, 0xd2, 0xd8, 0xd8, 0x4e, 0xab, 0x1d, 0xe1, 0xc6, 0x11, 0xf1, 0x85, 0xe0,
	0xc6, 0x11, 0x89, 0x2f, 0x80, 0x2a, 0x3e, 0x08, 0x6a, 0xea, 0x84, 0x24, 0x64, 0x9b, 0x2a, 0xed,
	0x16, 0xdb, 0xff, 0xff, 0xf3, 0x2f, 0x79, 0xff, 0x17, 0xb0, 0x5c, 0x22, 0x25, 0xa3, 0xd2, 0x21,
	0x82, 0x39, 0x42, 0x72, 0xc1, 0x15, 0xf1, 0x07, 0x52, 0xb8, 0x03, 0x22, 0x98, 0x2d, 0x24, 0xd7,
	0x1c, 0x6f, 0x1a, 0x8d, 0x4d, 0x04, 0xab, 0xdf, 0x1c, 0x71, 0x3e, 0xf2, 0x69, 0xa4, 0x27, 0x41,
	0xc0, 0x35, 0xd1, 0x8c, 0x07, 0x6a, 0x29, 0xb5, 0xbe, 0x21, 0xa8, 0xec, 0x87, 0xc3, 0x09, 0xd3,
	0x2f, 0x4d, 0xad, 0x3e, 0xfd, 0x10, 0x52, 0xa5, 0x71, 0x1b, 0x2e, 0x27, 0xe5, 0xf5, 0xb1, 0xa0,
	0x35, 0xd4, 0x44, 0x9d, 0x0b, 0xfd, 0xad, 0x78, 0xf3, 0xd5, 0xb1, 0xa0, 0xb8, 0x05, 0xc9, 0x7a,
	0x10, 0x4a, 0xbf, 0xb6, 0xd6, 0x44, 0x9d, 0x4b, 0xfd, 0xcd, 0x78, 0xef, 0x40, 0xfa, 0xf8, 0x2e,
	0x5c, 0x73, 0x49, 0xe0, 0x31, 0x8f, 0x68, 0x3a, 0x20, 0x9e, 0x27, 0xa9, 0x52, 0xb5, 0xf5, 0x48,
	0x57, 0x4e, 0x0e, 0x9e, 0x2c, 0xf7, 0xf1, 0x1e, 0x54, 0xfe, 0x89, 0x15, 0x95, 0x53, 0xe6, 0xd2,
	0xa8, 0xf0, 0x46, 0x64, 0xd8, 0x4e, 0x0e, 0xf7, 0x97, 0x67, 0x07, 0xd2, 0xb7, 0x86, 0x50, 0xcd,
	0xbf, 0x81, 0x12, 0x3c, 0x50, 0x14, 0x57, 0xa1, 0xa4, 0x34, 0xd1, 0xa1, 0x32, 0xec, 0x66, 0x85,
	0xcb, 0xb0, 0x3e, 0x51, 0x23, 0x03, 0xbb, 0x78, 0xc4, 0x0d, 0x80, 0x98, 0xf9, 0x85, 0x67, 0xe8,
	0x52, 0x3b, 0x56, 0x0f, 0x6e, 0xbc, 0x61, 0x7a, 0xec, 0x49, 0x32, 0xcb, 0x7f, 0xa7, 0x5b, 0x90,
	0xbc, 0xee, 0x80, 0x79, 0xd1, 0x4d, 0x59, 0xef, 0x3b, 0xa8, 0xfd, 0xef, 0x5d, 0x99, 0xb0, 0x0a,
	0x25, 0x49, 0x55, 0xe8, 0xeb, 0x88, 0xee, 0x62, 0xdf, 0xac, 0xac, 0x47, 0xb0, 0xfd, 0x9a, 0x6b,
	0xba, 0x32, 0xd5, 0x5b, 0xb8, 0x9e, 0xf5, 0x9d, 0x1b, 0xd1, 0x63, 0xa8, 0x3c, 0x3b, 0x3a, 0xa2,
	0xae, 0x5e, 0x99, 0xe9, 0x10, 0xaa, 0x79, 0xe7, 0x79, 0x51, 0xed, 0x7d, 0xdf, 0x80, 0xab, 0x71,
	0x59, 0x13, 0x1e, 0xfc, 0x19, 0xc1, 0x95, 0x6c, 0x74, 0xb0, 0x65, 0xa7, 0x66, 0xc7, 0x2e, 0x9c,
	0x8c, 0x7a, 0xfb, 0x54, 0xcd, 0x92, 0xd8, 0xb2, 0x3f, 0xfd, 0xfa, 0xf3, 0x75, 0xad, 0x63, 0xb5,
	0x9d, 0x78, 0x60, 0xa7, 0x0f, 0x92, 0x79, 0x75, 0x54, 0xc6, 0xd4, 0x43, 0x5d, 0xfc, 0x05, 0x41,
	0x39, 0x1f, 0x13, 0x7c, 0x3b, 0x73, 0xd3, 0x09, 0x09, 0xac, 0xef, 0x9c, 0xa1, 0x32, 0x44, 0xf7,
	0x23, 0xa2, 0xae, 0xb5, 0x53, 0x48, 0x34, 0xcb, 0xd9, 0x16, 0x4c, 0x1f, 0x11, 0x6c, 0xa5, 0x43,
	0x82, 0x9b, 0x99, 0x9b, 0x0a, 0x72, 0x57, 0x6f, 0x9d, 0xa2, 0x30, 0x1c, 0xf7, 0x22, 0x8e, 0x3b,
	0x56, 0xab, 0x90, 0x63, 0x9a, 0xb2, 0x2c, 0x18, 0x16, 0x3d, 0xca, 0x86, 0x22, 0xd7, 0xa3, 0xc2,
	0xac, 0xe5, 0x7a, 0x54, 0x9c, 0xaa, 0x33, 0x7a, 0x44, 0x33, 0xa6, 0x1e, 0xea, 0x3e, 0x7d, 0xfe,
	0x63, 0xde, 0x40, 0x3f, 0xe7, 0x0d, 0xf4, 0x7b, 0xde, 0x40, 0x87, 0xbd, 0x11, 0xd3, 0xe3, 0x70,
	0x68, 0xbb, 0x7c, 0xe2, 0x78, 0x44, 0x87, 0x13, 0x4d, 0xdd, 0xb1, 0x5a, 0x3e, 0xee, 0x06, 0x54,
	0xcf, 0xb8, 0x7c, 0xbf, 0x1b, 0x17, 0x16, 0x43, 0x27, 0xf5, 0xe3, 0x1e, 0x96, 0xa2, 0xbf, 0xef,
	0xc3, 0xbf, 0x01, 0x00, 0x00, 0xff, 0xff, 0x2a, 0x2f, 0xfc, 0x33, 0xce, 0x05, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ProposalServiceClient is the client API for ProposalService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ProposalServiceClient interface {
	SubmitProposal(ctx context.Context, in *SubmitProposalRequest, opts ...grpc.CallOption) (*SubmitProposalResponse, error)
	WithdrawProposal(ctx context.Context, in *WithdrawProposalRequest, opts ...grpc.CallOption) (*WithdrawProposalResponse, error)
	VoteProposal(ctx context.Context, in *VoteProposalRequest, opts ...grpc.CallOption) (*VoteProposalResponse, error)
	EffectProposal(ctx context.Context, in *EffectProposalRequest, opts ...grpc.CallOption) (*EffectProposalResponse, error)
}

type proposalServiceClient struct {
	cc *grpc.ClientConn
}

func NewProposalServiceClient(cc *grpc.ClientConn) ProposalServiceClient {
	return &proposalServiceClient{cc}
}

func (c *proposalServiceClient) SubmitProposal(ctx context.Context, in *SubmitProposalRequest, opts ...grpc.CallOption) (*SubmitProposalResponse, error) {
	out := new(SubmitProposalResponse)
	err := c.cc.Invoke(ctx, "/carrier.api.ProposalService/SubmitProposal", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *proposalServiceClient) WithdrawProposal(ctx context.Context, in *WithdrawProposalRequest, opts ...grpc.CallOption) (*WithdrawProposalResponse, error) {
	out := new(WithdrawProposalResponse)
	err := c.cc.Invoke(ctx, "/carrier.api.ProposalService/WithdrawProposal", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *proposalServiceClient) VoteProposal(ctx context.Context, in *VoteProposalRequest, opts ...grpc.CallOption) (*VoteProposalResponse, error) {
	out := new(VoteProposalResponse)
	err := c.cc.Invoke(ctx, "/carrier.api.ProposalService/VoteProposal", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *proposalServiceClient) EffectProposal(ctx context.Context, in *EffectProposalRequest, opts ...grpc.CallOption) (*EffectProposalResponse, error) {
	out := new(EffectProposalResponse)
	err := c.cc.Invoke(ctx, "/carrier.api.ProposalService/EffectProposal", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ProposalServiceServer is the server API for ProposalService service.
type ProposalServiceServer interface {
	SubmitProposal(context.Context, *SubmitProposalRequest) (*SubmitProposalResponse, error)
	WithdrawProposal(context.Context, *WithdrawProposalRequest) (*WithdrawProposalResponse, error)
	VoteProposal(context.Context, *VoteProposalRequest) (*VoteProposalResponse, error)
	EffectProposal(context.Context, *EffectProposalRequest) (*EffectProposalResponse, error)
}

// UnimplementedProposalServiceServer can be embedded to have forward compatible implementations.
type UnimplementedProposalServiceServer struct {
}

func (*UnimplementedProposalServiceServer) SubmitProposal(ctx context.Context, req *SubmitProposalRequest) (*SubmitProposalResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SubmitProposal not implemented")
}
func (*UnimplementedProposalServiceServer) WithdrawProposal(ctx context.Context, req *WithdrawProposalRequest) (*WithdrawProposalResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method WithdrawProposal not implemented")
}
func (*UnimplementedProposalServiceServer) VoteProposal(ctx context.Context, req *VoteProposalRequest) (*VoteProposalResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method VoteProposal not implemented")
}
func (*UnimplementedProposalServiceServer) EffectProposal(ctx context.Context, req *EffectProposalRequest) (*EffectProposalResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method EffectProposal not implemented")
}

func RegisterProposalServiceServer(s *grpc.Server, srv ProposalServiceServer) {
	s.RegisterService(&_ProposalService_serviceDesc, srv)
}

func _ProposalService_SubmitProposal_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SubmitProposalRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProposalServiceServer).SubmitProposal(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/carrier.api.ProposalService/SubmitProposal",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProposalServiceServer).SubmitProposal(ctx, req.(*SubmitProposalRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProposalService_WithdrawProposal_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(WithdrawProposalRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProposalServiceServer).WithdrawProposal(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/carrier.api.ProposalService/WithdrawProposal",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProposalServiceServer).WithdrawProposal(ctx, req.(*WithdrawProposalRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProposalService_VoteProposal_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(VoteProposalRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProposalServiceServer).VoteProposal(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/carrier.api.ProposalService/VoteProposal",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProposalServiceServer).VoteProposal(ctx, req.(*VoteProposalRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProposalService_EffectProposal_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EffectProposalRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProposalServiceServer).EffectProposal(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/carrier.api.ProposalService/EffectProposal",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProposalServiceServer).EffectProposal(ctx, req.(*EffectProposalRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ProposalService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "carrier.api.ProposalService",
	HandlerType: (*ProposalServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SubmitProposal",
			Handler:    _ProposalService_SubmitProposal_Handler,
		},
		{
			MethodName: "WithdrawProposal",
			Handler:    _ProposalService_WithdrawProposal_Handler,
		},
		{
			MethodName: "VoteProposal",
			Handler:    _ProposalService_VoteProposal_Handler,
		},
		{
			MethodName: "EffectProposal",
			Handler:    _ProposalService_EffectProposal_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "carrier/api/proposal_rpc_api.proto",
}

func (m *SubmitProposalRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *SubmitProposalRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *SubmitProposalRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.CandidateServiceUrl) > 0 {
		i -= len(m.CandidateServiceUrl)
		copy(dAtA[i:], m.CandidateServiceUrl)
		i = encodeVarintProposalRpcApi(dAtA, i, uint64(len(m.CandidateServiceUrl)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.CandidateAddress) > 0 {
		i -= len(m.CandidateAddress)
		copy(dAtA[i:], m.CandidateAddress)
		i = encodeVarintProposalRpcApi(dAtA, i, uint64(len(m.CandidateAddress)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.ProposalUrl) > 0 {
		i -= len(m.ProposalUrl)
		copy(dAtA[i:], m.ProposalUrl)
		i = encodeVarintProposalRpcApi(dAtA, i, uint64(len(m.ProposalUrl)))
		i--
		dAtA[i] = 0x12
	}
	if m.ProposalType != 0 {
		i = encodeVarintProposalRpcApi(dAtA, i, uint64(m.ProposalType))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *SubmitProposalResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *SubmitProposalResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *SubmitProposalResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.ProposalId) > 0 {
		i -= len(m.ProposalId)
		copy(dAtA[i:], m.ProposalId)
		i = encodeVarintProposalRpcApi(dAtA, i, uint64(len(m.ProposalId)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Msg) > 0 {
		i -= len(m.Msg)
		copy(dAtA[i:], m.Msg)
		i = encodeVarintProposalRpcApi(dAtA, i, uint64(len(m.Msg)))
		i--
		dAtA[i] = 0x12
	}
	if m.Status != 0 {
		i = encodeVarintProposalRpcApi(dAtA, i, uint64(m.Status))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *WithdrawProposalRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *WithdrawProposalRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *WithdrawProposalRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.ProposalId) > 0 {
		i -= len(m.ProposalId)
		copy(dAtA[i:], m.ProposalId)
		i = encodeVarintProposalRpcApi(dAtA, i, uint64(len(m.ProposalId)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *WithdrawProposalResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *WithdrawProposalResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *WithdrawProposalResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Result {
		i--
		if m.Result {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x18
	}
	if len(m.Msg) > 0 {
		i -= len(m.Msg)
		copy(dAtA[i:], m.Msg)
		i = encodeVarintProposalRpcApi(dAtA, i, uint64(len(m.Msg)))
		i--
		dAtA[i] = 0x12
	}
	if m.Status != 0 {
		i = encodeVarintProposalRpcApi(dAtA, i, uint64(m.Status))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *VoteProposalRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *VoteProposalRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *VoteProposalRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.ProposalId) > 0 {
		i -= len(m.ProposalId)
		copy(dAtA[i:], m.ProposalId)
		i = encodeVarintProposalRpcApi(dAtA, i, uint64(len(m.ProposalId)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *VoteProposalResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *VoteProposalResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *VoteProposalResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Result {
		i--
		if m.Result {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x18
	}
	if len(m.Msg) > 0 {
		i -= len(m.Msg)
		copy(dAtA[i:], m.Msg)
		i = encodeVarintProposalRpcApi(dAtA, i, uint64(len(m.Msg)))
		i--
		dAtA[i] = 0x12
	}
	if m.Status != 0 {
		i = encodeVarintProposalRpcApi(dAtA, i, uint64(m.Status))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *EffectProposalRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *EffectProposalRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *EffectProposalRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.ProposalId) > 0 {
		i -= len(m.ProposalId)
		copy(dAtA[i:], m.ProposalId)
		i = encodeVarintProposalRpcApi(dAtA, i, uint64(len(m.ProposalId)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *EffectProposalResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *EffectProposalResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *EffectProposalResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Result {
		i--
		if m.Result {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x18
	}
	if len(m.Msg) > 0 {
		i -= len(m.Msg)
		copy(dAtA[i:], m.Msg)
		i = encodeVarintProposalRpcApi(dAtA, i, uint64(len(m.Msg)))
		i--
		dAtA[i] = 0x12
	}
	if m.Status != 0 {
		i = encodeVarintProposalRpcApi(dAtA, i, uint64(m.Status))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func encodeVarintProposalRpcApi(dAtA []byte, offset int, v uint64) int {
	offset -= sovProposalRpcApi(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *SubmitProposalRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.ProposalType != 0 {
		n += 1 + sovProposalRpcApi(uint64(m.ProposalType))
	}
	l = len(m.ProposalUrl)
	if l > 0 {
		n += 1 + l + sovProposalRpcApi(uint64(l))
	}
	l = len(m.CandidateAddress)
	if l > 0 {
		n += 1 + l + sovProposalRpcApi(uint64(l))
	}
	l = len(m.CandidateServiceUrl)
	if l > 0 {
		n += 1 + l + sovProposalRpcApi(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *SubmitProposalResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Status != 0 {
		n += 1 + sovProposalRpcApi(uint64(m.Status))
	}
	l = len(m.Msg)
	if l > 0 {
		n += 1 + l + sovProposalRpcApi(uint64(l))
	}
	l = len(m.ProposalId)
	if l > 0 {
		n += 1 + l + sovProposalRpcApi(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *WithdrawProposalRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.ProposalId)
	if l > 0 {
		n += 1 + l + sovProposalRpcApi(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *WithdrawProposalResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Status != 0 {
		n += 1 + sovProposalRpcApi(uint64(m.Status))
	}
	l = len(m.Msg)
	if l > 0 {
		n += 1 + l + sovProposalRpcApi(uint64(l))
	}
	if m.Result {
		n += 2
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *VoteProposalRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.ProposalId)
	if l > 0 {
		n += 1 + l + sovProposalRpcApi(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *VoteProposalResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Status != 0 {
		n += 1 + sovProposalRpcApi(uint64(m.Status))
	}
	l = len(m.Msg)
	if l > 0 {
		n += 1 + l + sovProposalRpcApi(uint64(l))
	}
	if m.Result {
		n += 2
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *EffectProposalRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.ProposalId)
	if l > 0 {
		n += 1 + l + sovProposalRpcApi(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *EffectProposalResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Status != 0 {
		n += 1 + sovProposalRpcApi(uint64(m.Status))
	}
	l = len(m.Msg)
	if l > 0 {
		n += 1 + l + sovProposalRpcApi(uint64(l))
	}
	if m.Result {
		n += 2
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func sovProposalRpcApi(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozProposalRpcApi(x uint64) (n int) {
	return sovProposalRpcApi(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *SubmitProposalRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProposalRpcApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: SubmitProposalRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: SubmitProposalRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ProposalType", wireType)
			}
			m.ProposalType = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProposalRpcApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ProposalType |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ProposalUrl", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProposalRpcApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthProposalRpcApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthProposalRpcApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ProposalUrl = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CandidateAddress", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProposalRpcApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthProposalRpcApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthProposalRpcApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CandidateAddress = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CandidateServiceUrl", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProposalRpcApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthProposalRpcApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthProposalRpcApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CandidateServiceUrl = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipProposalRpcApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthProposalRpcApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *SubmitProposalResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProposalRpcApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: SubmitProposalResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: SubmitProposalResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Status", wireType)
			}
			m.Status = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProposalRpcApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Status |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Msg", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProposalRpcApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthProposalRpcApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthProposalRpcApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Msg = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ProposalId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProposalRpcApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthProposalRpcApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthProposalRpcApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ProposalId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipProposalRpcApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthProposalRpcApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *WithdrawProposalRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProposalRpcApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: WithdrawProposalRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: WithdrawProposalRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ProposalId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProposalRpcApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthProposalRpcApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthProposalRpcApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ProposalId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipProposalRpcApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthProposalRpcApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *WithdrawProposalResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProposalRpcApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: WithdrawProposalResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: WithdrawProposalResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Status", wireType)
			}
			m.Status = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProposalRpcApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Status |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Msg", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProposalRpcApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthProposalRpcApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthProposalRpcApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Msg = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Result", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProposalRpcApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Result = bool(v != 0)
		default:
			iNdEx = preIndex
			skippy, err := skipProposalRpcApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthProposalRpcApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *VoteProposalRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProposalRpcApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: VoteProposalRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: VoteProposalRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ProposalId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProposalRpcApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthProposalRpcApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthProposalRpcApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ProposalId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipProposalRpcApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthProposalRpcApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *VoteProposalResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProposalRpcApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: VoteProposalResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: VoteProposalResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Status", wireType)
			}
			m.Status = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProposalRpcApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Status |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Msg", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProposalRpcApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthProposalRpcApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthProposalRpcApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Msg = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Result", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProposalRpcApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Result = bool(v != 0)
		default:
			iNdEx = preIndex
			skippy, err := skipProposalRpcApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthProposalRpcApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *EffectProposalRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProposalRpcApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: EffectProposalRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: EffectProposalRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ProposalId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProposalRpcApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthProposalRpcApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthProposalRpcApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ProposalId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipProposalRpcApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthProposalRpcApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *EffectProposalResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProposalRpcApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: EffectProposalResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: EffectProposalResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Status", wireType)
			}
			m.Status = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProposalRpcApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Status |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Msg", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProposalRpcApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthProposalRpcApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthProposalRpcApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Msg = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Result", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProposalRpcApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Result = bool(v != 0)
		default:
			iNdEx = preIndex
			skippy, err := skipProposalRpcApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthProposalRpcApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipProposalRpcApi(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowProposalRpcApi
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowProposalRpcApi
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowProposalRpcApi
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthProposalRpcApi
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupProposalRpcApi
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthProposalRpcApi
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthProposalRpcApi        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowProposalRpcApi          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupProposalRpcApi = fmt.Errorf("proto: unexpected end of group")
)
