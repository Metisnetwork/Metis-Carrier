// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: common/constant/carrier_enum.proto

package constant

import (
	fmt "fmt"
	proto "github.com/gogo/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

// add by 0.5.0
type IdentityType int32

const (
	IdentityType_Identity_Unknown IdentityType = 0
	IdentityType_Identity_DID     IdentityType = 1
)

var IdentityType_name = map[int32]string{
	0: "Identity_Unknown",
	1: "Identity_DID",
}

var IdentityType_value = map[string]int32{
	"Identity_Unknown": 0,
	"Identity_DID":     1,
}

func (x IdentityType) String() string {
	return proto.EnumName(IdentityType_name, int32(x))
}

func (IdentityType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_3f3c955a1ae0248f, []int{0}
}

type UserType int32

const (
	UserType_User_Unknown UserType = 0
	UserType_User_1       UserType = 1
	UserType_User_2       UserType = 2
	UserType_User_3       UserType = 3
)

var UserType_name = map[int32]string{
	0: "User_Unknown",
	1: "User_1",
	2: "User_2",
	3: "User_3",
}

var UserType_value = map[string]int32{
	"User_Unknown": 0,
	"User_1":       1,
	"User_2":       2,
	"User_3":       3,
}

func (x UserType) String() string {
	return proto.EnumName(UserType_name, int32(x))
}

func (UserType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_3f3c955a1ae0248f, []int{1}
}

// the status of data for local storage, 1 means valid, 2 means invalid
type DataStatus int32

const (
	DataStatus_DataStatus_Unknown DataStatus = 0
	DataStatus_DataStatus_Valid   DataStatus = 1
	DataStatus_DataStatus_Invalid DataStatus = 2
)

var DataStatus_name = map[int32]string{
	0: "DataStatus_Unknown",
	1: "DataStatus_Valid",
	2: "DataStatus_Invalid",
}

var DataStatus_value = map[string]int32{
	"DataStatus_Unknown": 0,
	"DataStatus_Valid":   1,
	"DataStatus_Invalid": 2,
}

func (x DataStatus) String() string {
	return proto.EnumName(DataStatus_name, int32(x))
}

func (DataStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_3f3c955a1ae0248f, []int{2}
}

// the status of data for datacenter, 1 means valid, 2 means invalid
type CommonStatus int32

const (
	CommonStatus_CommonStatus_Unknown CommonStatus = 0
	CommonStatus_CommonStatus_Valid   CommonStatus = 1
	CommonStatus_CommonStatus_Invalid CommonStatus = 2
)

var CommonStatus_name = map[int32]string{
	0: "CommonStatus_Unknown",
	1: "CommonStatus_Valid",
	2: "CommonStatus_Invalid",
}

var CommonStatus_value = map[string]int32{
	"CommonStatus_Unknown": 0,
	"CommonStatus_Valid":   1,
	"CommonStatus_Invalid": 2,
}

func (x CommonStatus) String() string {
	return proto.EnumName(CommonStatus_name, int32(x))
}

func (CommonStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_3f3c955a1ae0248f, []int{3}
}

type AuditMetadataOption int32

const (
	AuditMetadataOption_Audit_Pending AuditMetadataOption = 0
	AuditMetadataOption_Audit_Passed  AuditMetadataOption = 1
	AuditMetadataOption_Audit_Refused AuditMetadataOption = 2
)

var AuditMetadataOption_name = map[int32]string{
	0: "Audit_Pending",
	1: "Audit_Passed",
	2: "Audit_Refused",
}

var AuditMetadataOption_value = map[string]int32{
	"Audit_Pending": 0,
	"Audit_Passed":  1,
	"Audit_Refused": 2,
}

func (x AuditMetadataOption) String() string {
	return proto.EnumName(AuditMetadataOption_name, int32(x))
}

func (AuditMetadataOption) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_3f3c955a1ae0248f, []int{4}
}

// 元数据类型
type MetadataType int32

const (
	MetadataType_MetadataType_Unknown    MetadataType = 0
	MetadataType_MetadataType_DataFile   MetadataType = 1
	MetadataType_MetadataType_ModuleFile MetadataType = 2
)

var MetadataType_name = map[int32]string{
	0: "MetadataType_Unknown",
	1: "MetadataType_DataFile",
	2: "MetadataType_ModuleFile",
}

var MetadataType_value = map[string]int32{
	"MetadataType_Unknown":    0,
	"MetadataType_DataFile":   1,
	"MetadataType_ModuleFile": 2,
}

func (x MetadataType) String() string {
	return proto.EnumName(MetadataType_name, int32(x))
}

func (MetadataType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_3f3c955a1ae0248f, []int{5}
}

// 数据的位置 (本地、远端、云等)
type DataLocationType int32

const (
	DataLocationType_DataLocationType_Unknown DataLocationType = 0
	DataLocationType_DataLocationType_Local   DataLocationType = 1
	DataLocationType_DataLocationType_URL     DataLocationType = 2
)

var DataLocationType_name = map[int32]string{
	0: "DataLocationType_Unknown",
	1: "DataLocationType_Local",
	2: "DataLocationType_URL",
}

var DataLocationType_value = map[string]int32{
	"DataLocationType_Unknown": 0,
	"DataLocationType_Local":   1,
	"DataLocationType_URL":     2,
}

func (x DataLocationType) String() string {
	return proto.EnumName(DataLocationType_name, int32(x))
}

func (DataLocationType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_3f3c955a1ae0248f, []int{6}
}

// 原始数据类型 (文件类型)
type OrigindataType int32

const (
	OrigindataType_OrigindataType_Unknown OrigindataType = 0
	OrigindataType_OrigindataType_CSV     OrigindataType = 1
	OrigindataType_OrigindataType_DIR     OrigindataType = 2
	OrigindataType_OrigindataType_BINARY  OrigindataType = 3
	OrigindataType_OrigindataType_XLS     OrigindataType = 4
	OrigindataType_OrigindataType_XLSX    OrigindataType = 5
	OrigindataType_OrigindataType_TXT     OrigindataType = 6
	OrigindataType_OrigindataType_JSON    OrigindataType = 7
)

var OrigindataType_name = map[int32]string{
	0: "OrigindataType_Unknown",
	1: "OrigindataType_CSV",
	2: "OrigindataType_DIR",
	3: "OrigindataType_BINARY",
	4: "OrigindataType_XLS",
	5: "OrigindataType_XLSX",
	6: "OrigindataType_TXT",
	7: "OrigindataType_JSON",
}

var OrigindataType_value = map[string]int32{
	"OrigindataType_Unknown": 0,
	"OrigindataType_CSV":     1,
	"OrigindataType_DIR":     2,
	"OrigindataType_BINARY":  3,
	"OrigindataType_XLS":     4,
	"OrigindataType_XLSX":    5,
	"OrigindataType_TXT":     6,
	"OrigindataType_JSON":    7,
}

func (x OrigindataType) String() string {
	return proto.EnumName(OrigindataType_name, int32(x))
}

func (OrigindataType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_3f3c955a1ae0248f, []int{7}
}

// 元数据的状态 (0: 未知; 1: 还未发布的新表; 2: 已发布的表; 3: 已撤销的表)
type MetadataState int32

const (
	MetadataState_MetadataState_Unknown  MetadataState = 0
	MetadataState_MetadataState_Created  MetadataState = 1
	MetadataState_MetadataState_Released MetadataState = 2
	MetadataState_MetadataState_Revoked  MetadataState = 3
)

var MetadataState_name = map[int32]string{
	0: "MetadataState_Unknown",
	1: "MetadataState_Created",
	2: "MetadataState_Released",
	3: "MetadataState_Revoked",
}

var MetadataState_value = map[string]int32{
	"MetadataState_Unknown":  0,
	"MetadataState_Created":  1,
	"MetadataState_Released": 2,
	"MetadataState_Revoked":  3,
}

func (x MetadataState) String() string {
	return proto.EnumName(MetadataState_name, int32(x))
}

func (MetadataState) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_3f3c955a1ae0248f, []int{8}
}

// 元数据的使用方式类型枚举 (0: 未定义; 1: 按照时间段来使用; 2: 按照次数来使用)
type MetadataUsageType int32

const (
	MetadataUsageType_Usage_Unknown MetadataUsageType = 0
	MetadataUsageType_Usage_Period  MetadataUsageType = 1
	MetadataUsageType_Usage_Times   MetadataUsageType = 2
)

var MetadataUsageType_name = map[int32]string{
	0: "Usage_Unknown",
	1: "Usage_Period",
	2: "Usage_Times",
}

var MetadataUsageType_value = map[string]int32{
	"Usage_Unknown": 0,
	"Usage_Period":  1,
	"Usage_Times":   2,
}

func (x MetadataUsageType) String() string {
	return proto.EnumName(MetadataUsageType_name, int32(x))
}

func (MetadataUsageType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_3f3c955a1ae0248f, []int{9}
}

// 算力的状态 (0: 未知; 1: 还未发布的算力; 2: 已发布的算力(算力未被占用); 3: 已发布的算力(算力正在被占用); 4: 已撤销的算力)
type PowerState int32

const (
	PowerState_PowerState_Unknown    PowerState = 0
	PowerState_PowerState_Created    PowerState = 1
	PowerState_PowerState_Released   PowerState = 2
	PowerState_PowerState_Occupation PowerState = 3
	PowerState_PowerState_Revoked    PowerState = 4
)

var PowerState_name = map[int32]string{
	0: "PowerState_Unknown",
	1: "PowerState_Created",
	2: "PowerState_Released",
	3: "PowerState_Occupation",
	4: "PowerState_Revoked",
}

var PowerState_value = map[string]int32{
	"PowerState_Unknown":    0,
	"PowerState_Created":    1,
	"PowerState_Released":   2,
	"PowerState_Occupation": 3,
	"PowerState_Revoked":    4,
}

func (x PowerState) String() string {
	return proto.EnumName(PowerState_name, int32(x))
}

func (PowerState) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_3f3c955a1ae0248f, []int{10}
}

// 本组织在task中的角色
type TaskRole int32

const (
	TaskRole_TaskRole_Unknown       TaskRole = 0
	TaskRole_TaskRole_Sender        TaskRole = 1
	TaskRole_TaskRole_DataSupplier  TaskRole = 2
	TaskRole_TaskRole_PowerSupplier TaskRole = 3
	TaskRole_TaskRole_Receiver      TaskRole = 4
	TaskRole_TaskRole_AlgoSupplier  TaskRole = 5
)

var TaskRole_name = map[int32]string{
	0: "TaskRole_Unknown",
	1: "TaskRole_Sender",
	2: "TaskRole_DataSupplier",
	3: "TaskRole_PowerSupplier",
	4: "TaskRole_Receiver",
	5: "TaskRole_AlgoSupplier",
}

var TaskRole_value = map[string]int32{
	"TaskRole_Unknown":       0,
	"TaskRole_Sender":        1,
	"TaskRole_DataSupplier":  2,
	"TaskRole_PowerSupplier": 3,
	"TaskRole_Receiver":      4,
	"TaskRole_AlgoSupplier":  5,
}

func (x TaskRole) String() string {
	return proto.EnumName(TaskRole_name, int32(x))
}

func (TaskRole) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_3f3c955a1ae0248f, []int{11}
}

// task的状态
type TaskState int32

const (
	TaskState_TaskState_Unknown TaskState = 0
	TaskState_TaskState_Pending TaskState = 1
	TaskState_TaskState_Running TaskState = 2
	TaskState_TaskState_Failed  TaskState = 3
	TaskState_TaskState_Succeed TaskState = 4
)

var TaskState_name = map[int32]string{
	0: "TaskState_Unknown",
	1: "TaskState_Pending",
	2: "TaskState_Running",
	3: "TaskState_Failed",
	4: "TaskState_Succeed",
}

var TaskState_value = map[string]int32{
	"TaskState_Unknown": 0,
	"TaskState_Pending": 1,
	"TaskState_Running": 2,
	"TaskState_Failed":  3,
	"TaskState_Succeed": 4,
}

func (x TaskState) String() string {
	return proto.EnumName(TaskState_name, int32(x))
}

func (TaskState) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_3f3c955a1ae0248f, []int{12}
}

// 数据授权信息的状态 (0: 未知; 1: 还未发布的数据授权; 2: 已发布的数据授权; 3: 已撤销的数据授权 <失效前主动撤回的>; 4: 已经失效的数据授权 <过期or达到使用上限的or被拒绝的>;)
type MetadataAuthorityState int32

const (
	MetadataAuthorityState_MAState_Unknown  MetadataAuthorityState = 0
	MetadataAuthorityState_MAState_Created  MetadataAuthorityState = 1
	MetadataAuthorityState_MAState_Released MetadataAuthorityState = 2
	MetadataAuthorityState_MAState_Revoked  MetadataAuthorityState = 3
	MetadataAuthorityState_MAState_Invalid  MetadataAuthorityState = 4
)

var MetadataAuthorityState_name = map[int32]string{
	0: "MAState_Unknown",
	1: "MAState_Created",
	2: "MAState_Released",
	3: "MAState_Revoked",
	4: "MAState_Invalid",
}

var MetadataAuthorityState_value = map[string]int32{
	"MAState_Unknown":  0,
	"MAState_Created":  1,
	"MAState_Released": 2,
	"MAState_Revoked":  3,
	"MAState_Invalid":  4,
}

func (x MetadataAuthorityState) String() string {
	return proto.EnumName(MetadataAuthorityState_name, int32(x))
}

func (MetadataAuthorityState) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_3f3c955a1ae0248f, []int{13}
}

func init() {
	proto.RegisterEnum("common.constant.IdentityType", IdentityType_name, IdentityType_value)
	proto.RegisterEnum("common.constant.UserType", UserType_name, UserType_value)
	proto.RegisterEnum("common.constant.DataStatus", DataStatus_name, DataStatus_value)
	proto.RegisterEnum("common.constant.CommonStatus", CommonStatus_name, CommonStatus_value)
	proto.RegisterEnum("common.constant.AuditMetadataOption", AuditMetadataOption_name, AuditMetadataOption_value)
	proto.RegisterEnum("common.constant.MetadataType", MetadataType_name, MetadataType_value)
	proto.RegisterEnum("common.constant.DataLocationType", DataLocationType_name, DataLocationType_value)
	proto.RegisterEnum("common.constant.OrigindataType", OrigindataType_name, OrigindataType_value)
	proto.RegisterEnum("common.constant.MetadataState", MetadataState_name, MetadataState_value)
	proto.RegisterEnum("common.constant.MetadataUsageType", MetadataUsageType_name, MetadataUsageType_value)
	proto.RegisterEnum("common.constant.PowerState", PowerState_name, PowerState_value)
	proto.RegisterEnum("common.constant.TaskRole", TaskRole_name, TaskRole_value)
	proto.RegisterEnum("common.constant.TaskState", TaskState_name, TaskState_value)
	proto.RegisterEnum("common.constant.MetadataAuthorityState", MetadataAuthorityState_name, MetadataAuthorityState_value)
}

func init() {
	proto.RegisterFile("common/constant/carrier_enum.proto", fileDescriptor_3f3c955a1ae0248f)
}

var fileDescriptor_3f3c955a1ae0248f = []byte{
	// 728 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x95, 0x41, 0x4f, 0xeb, 0x46,
	0x10, 0xc7, 0x6b, 0x27, 0x50, 0x3a, 0x0d, 0xcd, 0xc6, 0x09, 0x81, 0xd2, 0x8a, 0x43, 0x8f, 0x96,
	0x20, 0x6a, 0x91, 0x7a, 0xac, 0x1a, 0x88, 0x90, 0x52, 0x25, 0x04, 0x39, 0x01, 0x51, 0x2e, 0xe9,
	0x62, 0x0f, 0x61, 0x15, 0x67, 0x37, 0xb2, 0xd7, 0x20, 0xa4, 0xf6, 0xd2, 0x53, 0x3f, 0x45, 0x3f,
	0xcf, 0x3b, 0xbe, 0xeb, 0xbb, 0x3d, 0xf1, 0x49, 0x9e, 0xbc, 0x1b, 0x3b, 0x6b, 0x27, 0xb7, 0x9d,
	0xdf, 0x7f, 0x66, 0x76, 0x67, 0x66, 0xed, 0x85, 0x9f, 0x7c, 0xb1, 0x58, 0x08, 0xde, 0xf1, 0x05,
	0x8f, 0x25, 0xe5, 0xb2, 0xe3, 0xd3, 0x28, 0x62, 0x18, 0x4d, 0x91, 0x27, 0x8b, 0xb3, 0x65, 0x24,
	0xa4, 0x70, 0xea, 0xda, 0xe7, 0x2c, 0xf3, 0x71, 0x7f, 0x85, 0x5a, 0x3f, 0x40, 0x2e, 0x99, 0x7c,
	0x9b, 0xbc, 0x2d, 0xd1, 0x69, 0x01, 0xc9, 0xec, 0xe9, 0x2d, 0x9f, 0x73, 0xf1, 0xca, 0xc9, 0x57,
	0x0e, 0x59, 0x7b, 0x4d, 0x7b, 0xfd, 0x1e, 0xb1, 0xdc, 0xdf, 0x61, 0xef, 0x36, 0xc6, 0x48, 0xc5,
	0x10, 0xa8, 0xa5, 0x6b, 0xc3, 0x1f, 0x60, 0x57, 0x91, 0x9f, 0x89, 0x95, 0xaf, 0x7f, 0x21, 0x76,
	0xbe, 0x3e, 0x27, 0x15, 0xd7, 0x03, 0xe8, 0x51, 0x49, 0xc7, 0x92, 0xca, 0x24, 0x76, 0xda, 0xe0,
	0xac, 0x2d, 0x23, 0x53, 0x0b, 0x88, 0xc1, 0xef, 0x68, 0xc8, 0x02, 0x62, 0x95, 0xbc, 0xfb, 0xfc,
	0x45, 0x71, 0xdb, 0x7d, 0x80, 0xda, 0xa5, 0x2a, 0x70, 0x95, 0xf5, 0x08, 0x5a, 0xa6, 0x6d, 0xe4,
	0x6d, 0x83, 0x53, 0x50, 0xb2, 0xcc, 0xe5, 0x88, 0x75, 0xee, 0x21, 0x34, 0xbb, 0x49, 0xc0, 0xe4,
	0x10, 0x25, 0x0d, 0xa8, 0xa4, 0xa3, 0xa5, 0x64, 0x82, 0x3b, 0x0d, 0xd8, 0x57, 0x78, 0x7a, 0x83,
	0x3c, 0x60, 0x7c, 0xa6, 0xbb, 0xb5, 0x42, 0x34, 0x8e, 0x31, 0xcd, 0x9a, 0x3b, 0x79, 0xf8, 0x94,
	0xa4, 0xc8, 0x76, 0xff, 0x82, 0x5a, 0x96, 0x49, 0x35, 0xf1, 0x08, 0x5a, 0xa6, 0x6d, 0x1c, 0xf5,
	0x7b, 0x38, 0x28, 0x28, 0x69, 0xe5, 0x57, 0x2c, 0x44, 0x62, 0x39, 0x3f, 0xc0, 0x61, 0x41, 0x1a,
	0x8a, 0x20, 0x09, 0x51, 0x89, 0xb6, 0xfb, 0xa4, 0x5b, 0x37, 0x10, 0x3e, 0x4d, 0x4f, 0xaa, 0x76,
	0xf9, 0x11, 0x8e, 0xca, 0xcc, 0xd8, 0xe9, 0x18, 0xda, 0x1b, 0x6a, 0x6a, 0x84, 0xba, 0x31, 0x9b,
	0x91, 0xde, 0x80, 0xd8, 0xee, 0x27, 0x0b, 0xbe, 0x1b, 0x45, 0x6c, 0xc6, 0x78, 0x5e, 0xcc, 0x31,
	0xb4, 0x8b, 0xa4, 0xd8, 0xf9, 0x92, 0x76, 0x39, 0xbe, 0xd3, 0x33, 0x2d, 0xf1, 0x5e, 0xdf, 0x23,
	0x76, 0x5a, 0x7e, 0x89, 0x5f, 0xf4, 0xaf, 0xbb, 0xde, 0x9f, 0xa4, 0xb2, 0x25, 0xe4, 0x7e, 0x30,
	0x26, 0x55, 0xe7, 0x10, 0x9a, 0x9b, 0xfc, 0x9e, 0xec, 0x6c, 0x09, 0x98, 0xdc, 0x4f, 0xc8, 0xee,
	0x96, 0x80, 0x3f, 0xc6, 0xa3, 0x6b, 0xf2, 0xb5, 0xfb, 0x37, 0xec, 0x67, 0x0d, 0x4e, 0x2f, 0x04,
	0x9a, 0xc3, 0x50, 0x60, 0xfb, 0x9c, 0xb4, 0x74, 0x19, 0x21, 0x95, 0x6a, 0xfe, 0xc7, 0xd0, 0x2e,
	0x4a, 0x1e, 0x86, 0x48, 0xd5, 0x45, 0xd8, 0x0c, 0xf3, 0xf0, 0x45, 0xcc, 0x31, 0x20, 0x15, 0xb7,
	0x0f, 0x8d, 0x4c, 0xba, 0x8d, 0xe9, 0x0c, 0x55, 0x6f, 0x1b, 0xb0, 0xaf, 0x8c, 0xe2, 0xe7, 0xa9,
	0xd1, 0x0d, 0x46, 0x4c, 0xa4, 0x1b, 0xd6, 0xe1, 0x5b, 0x4d, 0x26, 0x6c, 0x81, 0x31, 0xb1, 0xdd,
	0xff, 0x2c, 0x80, 0x1b, 0xf1, 0x8a, 0x91, 0x2e, 0xa3, 0x0d, 0xce, 0xda, 0x2a, 0x0e, 0xc7, 0xe0,
	0xeb, 0x02, 0x0e, 0xa1, 0x69, 0xf0, 0xe2, 0xe9, 0x0d, 0x61, 0xe4, 0xfb, 0xc9, 0x52, 0xdd, 0x0f,
	0x3d, 0x9d, 0x42, 0x8c, 0xae, 0xaa, 0xea, 0xfe, 0x6f, 0xc1, 0xde, 0x84, 0xc6, 0x73, 0x4f, 0x84,
	0xea, 0x7f, 0x93, 0xad, 0x8d, 0x63, 0x34, 0xa1, 0x9e, 0xd3, 0x31, 0xf2, 0x00, 0x23, 0x62, 0xa5,
	0x5b, 0xe5, 0x50, 0x7d, 0xfd, 0xc9, 0x72, 0x19, 0x32, 0x8c, 0x88, 0x9d, 0xf6, 0x37, 0x97, 0xf4,
	0x9e, 0x99, 0x56, 0x71, 0x0e, 0xa0, 0x91, 0x6b, 0x1e, 0xfa, 0xc8, 0x5e, 0x30, 0x22, 0xd5, 0x42,
	0xb6, 0x6e, 0x38, 0x13, 0x79, 0xc4, 0x8e, 0xfb, 0x0f, 0x7c, 0x93, 0x4a, 0xba, 0x53, 0xab, 0xf0,
	0x72, 0xa3, 0x0a, 0x38, 0xfb, 0xf4, 0xad, 0x22, 0xf6, 0x12, 0xce, 0x53, 0x6c, 0x67, 0x55, 0x6a,
	0x7c, 0x45, 0x59, 0x98, 0x8e, 0xb7, 0xe8, 0x3c, 0x4e, 0x7c, 0x1f, 0x55, 0x7f, 0xfe, 0xb5, 0xd6,
	0xb7, 0xa5, 0x9b, 0xc8, 0x67, 0x11, 0x31, 0xf9, 0xa6, 0x0f, 0xd3, 0x84, 0xfa, 0xb0, 0x5b, 0x3e,
	0x8a, 0x01, 0xd7, 0x03, 0x6b, 0x01, 0xc9, 0xa0, 0x31, 0x2d, 0xc3, 0x35, 0xbf, 0x65, 0x26, 0xcc,
	0xfe, 0x76, 0xd5, 0x8b, 0xc1, 0x87, 0xf7, 0x13, 0xeb, 0xe3, 0xfb, 0x89, 0xf5, 0xf9, 0xfd, 0xc4,
	0x7a, 0xf8, 0x6d, 0xc6, 0xe4, 0x73, 0xf2, 0x78, 0xe6, 0x8b, 0x45, 0x27, 0xa0, 0x32, 0x59, 0x48,
	0xf4, 0x9f, 0x63, 0xbd, 0x3c, 0xe5, 0x28, 0x5f, 0x45, 0x34, 0x3f, 0x5d, 0x3d, 0x37, 0x9d, 0xe5,
	0x63, 0xa7, 0xf4, 0x12, 0x3d, 0xee, 0xaa, 0xd7, 0xe7, 0xfc, 0x4b, 0x00, 0x00, 0x00, 0xff, 0xff,
	0x68, 0x59, 0xc1, 0x9d, 0xa3, 0x06, 0x00, 0x00,
}
