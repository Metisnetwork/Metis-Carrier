syntax = "proto3";

package rpcapi;

option go_package = "github.com/RosettaFlow/Carrier-Go/lib/api";

import "lib/common/base.proto";
import "lib/types/metadata.proto";
import "google/api/annotations.proto";

//  ------------------------  metadata  ------------------------
message GetMetaDataDetailRequest {
  string identity_id = 1;
  string meta_data_id = 2;
}

message GetMetaDataDetailResponse {
  Organization             owner = 1;              // 元数据的拥有者
  MetaDataDetail           information = 2;        // 元文件详情主体
}

message PublishMetaDataRequest {
  MetaDataDetail        information = 1;                    // 元数据详情
}

message PublishMetaDataResponse {
  int32  status = 1;                         // 响应码
  string msg = 2;                            // 错误信息
  string meta_data_id = 3;                   // 元数据id
}

message RevokeMetaDataRequest {
  string                   meta_data_id = 1;
}

message GetMetaDataDetailListResponse {
  int32                              status = 1;                         // 响应码
  string                             msg = 2;                         // 错误信息
  repeated GetMetaDataDetailResponse meta_data_list = 3;                      // 元数据列表
}

message GetMetaDataDetailListByOwnerRequest {
  string identity_id = 1;
}

// ## 元数据 相关接口
service MetaDataService {

  // 查看单个元数据详情 (包含 列字段描述)
  rpc GetMetaDataDetail (GetMetaDataDetailRequest) returns (GetMetaDataDetailResponse) {
    option (google.api.http) = {
      post: "/carrier/v1/metadata/detail"
      body: "*"
    };
  }

  // 查看全网元数据列表
  rpc GetMetaDataDetailList (EmptyGetParams) returns (GetMetaDataDetailListResponse) {
    option (google.api.http) = {
      post: "/carrier/v1/metadata/list"
      body: "*"
    };
  }

  // 查看某个组织元数据列表
  rpc GetMetaDataDetailListByOwner (GetMetaDataDetailListByOwnerRequest) returns (GetMetaDataDetailListResponse) {
    option (google.api.http) = {
      post: "/carrier/v1/metadata/listByOwner"
      body: "*"
    };
  }

  // 发布元数据  (新增和编辑 都是发布新的元数据) <底层根据 原始数据Id -- OriginId 来关联 新的MetaDataId>
  rpc PublishMetaData (PublishMetaDataRequest) returns (PublishMetaDataResponse) {
    option (google.api.http) = {
      post: "/carrier/v1/metadata/publish"
      body: "*"
    };
  }
  // 撤销元数据 (从底层网络撤销)
  rpc RevokeMetaData (RevokeMetaDataRequest) returns (SimpleResponse) {
    option (google.api.http) = {
      post: "/carrier/v1/metadata/revoke"
      body: "*"
    };
  }

  // 分页拉取摘要列表
  // 分页拉取详情列表
}
