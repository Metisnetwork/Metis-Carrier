syntax = "proto3";

package rpcapi;

option go_package = "github.com/RosettaFlow/Carrier-Go/lib/api";

import "lib/common/base.proto";
import "lib/common/data.proto";
import "lib/types/taskdata.proto";
import "lib/types/resourcedata.proto";
import "google/api/annotations.proto";
import "google/protobuf/empty.proto";

// 定义：任务详情（仅用户与前端交互展示使用）
message TaskDetailShow {
    string                                 task_id        = 1;                         // 任务Id
    string                                 task_name      = 2;                       // 任务名称
    api.protobuf.TaskOrganization          owner          = 3;                           // 任务发起发
    api.protobuf.TaskOrganization          algo_supplier  = 4;                   // 算法提供方 (目前就是和 任务发起方是同一个 ...)
    repeated TaskDataSupplierShow          data_supplier  = 5;                   // 数据提供方
    repeated TaskPowerSupplierShow         power_supplier = 6;                  // 算力提供方
    repeated api.protobuf.TaskOrganization receivers      = 7;                       // 任务结果方
    uint64                                 create_at      = 8;                       // 任务发起时间
    uint64                                 start_at       = 9;                        // 任务启动时间
    uint64                                 end_at         = 10;                         // 任务结束时间
    string                                 state          = 11;                          // 任务的状态 (pending: 等在中; running: 计算中; failed: 失败; success: 成功)
    api.protobuf.TaskResourceCostDeclare   operation_cost = 12;                 // 任务所需资源声明
}

// 定义：任务数据提供方（仅用于web页面交互使用）
message TaskDataSupplierShow {
    api.protobuf.TaskOrganization member_info    = 1;                              // 身份信息
    string                        meta_data_id   = 2;                             // 元数据Id
    string                        meta_data_name = 3;                           // 元数据名称
}

// 定义：算力提供方（仅用于web页面交互使用）
message TaskPowerSupplierShow {
    api.protobuf.TaskOrganization member_info = 1;                         // 身份信息
    types.ResourceUsageOverview   power_info  = 2;                          // 算力使用情况
}

// 定义：任务事件（仅用于web页面交互使用）
message TaskEventShow {
    string                    type      = 1;                        // 事件类型码
    string                    task_id   = 2;                     // 事件对应的任务id
    api.protobuf.Organization owner     = 3;                       // 产生事件的节点身份
    string                    content   = 4;                     // 事件内容
    uint64                    create_at = 5;                   // 事件产生时间
}

message GetTaskDetailResponse {
    TaskDetailShow information = 1;             // 任务详情
    string         role        = 2;                    // 我在任务中的角色 (owner: 任务发起方; dataSupplier: 数据提供方: powerSupplier: 算力提供方; receiver: 结果接收方)
}

message GetTaskDetailListResponse {
    int32                          status    = 1;                 // 响应码
    string                         msg       = 2;                    // 错误信息
    repeated GetTaskDetailResponse task_list = 3;              // 任务详情列表
}

message GetTaskEventListRequest {
    string task_id = 1;
}

message GetTaskEventListByTaskIdsRequest {
    repeated string task_ids = 1;
}

message GetTaskEventListResponse {
    int32                  status          = 1;                      // 响应码
    string                 msg             = 2;                         // 错误信息
    repeated TaskEventShow task_event_list = 3;             // 任务事件列表
}

message PublishTaskDeclareRequest {
    string                               task_name              = 1;                        //  任务名称
    string                               user                   = 2;                             //  发起任务的用户的信息 (task是属于用户的)
    api.protobuf.UserType                user_type              = 3;                        //  用户类型 (0: 未定义; 1: 以太坊地址; 2: Alaya地址; 3: PlatON地址)
    api.protobuf.TaskOrganization        sender                 = 4;                           //  任务发起者 组织信息
    repeated TaskDataSupplierDeclare     data_supplier          = 5;                    //  任务的数据提供方, 包含发起者和参与方
    repeated string                      power_party_ids        = 6;                  //  算力提供方未来要用的 标签
    repeated types.TaskResultReceiver    receivers              = 7;                        //  任务结果接受者
    api.protobuf.TaskResourceCostDeclare operation_cost         = 8;                   //  任务所需资源声明
    string                               calculate_contractcode = 9;           //  计算合约
    string                               datasplit_contractcode = 10;          //  数据分片合约
    string                               contract_extra_params  = 11;           //  合约调用的额外可变入参 (json 字符串, 根据算法来)
    bytes                                sign                   = 12;                            //  发起任务的账户的签名
}

// 任务数据供应者信息 (任务详情定义用)
message TaskDataSupplierDeclare {
    api.protobuf.TaskOrganization member_info    = 1;                         // 身份信息
    TaskMetaDataDeclare           meta_data_info = 2;                      // 任务使用的元数据信息
}

message TaskMetaDataDeclare {
    string          meta_data_id      = 1;                                 // 元数据id
    repeated uint64 column_index_list = 2;                            // 该任务使用原始数据的第几列
}

message PublishTaskDeclareResponse {
    int32  status  = 1;                      // 响应码
    string msg     = 2;                         // 错误信息
    string task_id = 3;                     // 任务id
}

message TerminateTaskRequest {
    string                user      = 1;                             //  发起任务的用户的信息 (task是属于用户的)
    api.protobuf.UserType user_type = 2;                        //  用户类型 (0: 未定义; 1: 以太坊地址; 2: Alaya地址; 3: PlatON地址)
    string                task_id   = 3;                          //  任务id
    bytes                 sign      = 12;                            //  发起任务的账户的签名
}

// ## 任务 相关接口
service TaskService {

  // 查看全部任务详情列表
  rpc GetTaskDetailList (google.protobuf.Empty) returns (GetTaskDetailListResponse) {
    option (google.api.http) = {
      post: "/carrier/v1/task/list"
      body: "*"
    };
  }

  // 查看某个任务的全部事件列表
  rpc GetTaskEventList (GetTaskEventListRequest) returns (GetTaskEventListResponse) {
    option (google.api.http) = {
      post: "/carrier/v1/task/eventList"
      body: "*"
    };
  }

  // 查看某个任务的全部事件列表
  rpc GetTaskEventListByTaskIds (GetTaskEventListByTaskIdsRequest) returns (GetTaskEventListResponse) {
    option (google.api.http) = {
      post: "/carrier/v1/task/eventListByTaskIds"
      body: "*"
    };
  }

  // 发布任务
  rpc PublishTaskDeclare (PublishTaskDeclareRequest) returns (PublishTaskDeclareResponse) {
    option (google.api.http) = {
      post: "/carrier/v1/task/publish"
      body: "*"
    };
  }

  // 终止任务
  rpc TerminateTask (TerminateTaskRequest) returns (api.protobuf.SimpleResponse) {
    option (google.api.http) = {
      post: "/carrier/v1/task/terminate"
      body: "*"
    };
  }

}


