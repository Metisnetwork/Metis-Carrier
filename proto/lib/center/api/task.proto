syntax = "proto3";

package api;

option go_package = "github.com/RosettaFlow/Carrier-Go/lib/center/api";

import "lib/common/base.proto";
import "lib/types/taskdata.proto";
import "google/protobuf/empty.proto";
import "lib/center/api/metadata.proto";

message TaskListByIdentityRequest {
    string identity_id      = 1;
    uint64 last_update_time = 2;
}

message TaskListRequest {
    uint64 last_update_time = 1;
}

message TaskListResponse {
  // 任务摘要列表
    repeated types.TaskDetail task_list = 1;
}

// 任务详情请求参数
message DetailTaskRequest {
  // 任务ID，必选参数
    string task_id = 1;
}

message TaskEventRequest {
    string task_id = 1;
}

message TaskEventResponse {
  // 错误码，0 成功，1 异常
    int32 status = 1;
  // 错误信息
    string msg = 2;
  // 事件列表
    repeated types.TaskEvent task_event_list = 3;
}

// TaskService defines the interface to interact with the central data service.
service TaskService {

  // 存储任务
  rpc SaveTask(types.TaskDetail) returns (api.protobuf.SimpleResponse);

  // 查询任务详情（任务ID、节点ID、参与方标识）
  rpc GetDetailTask(DetailTaskRequest) returns (types.TaskDetail);

  // 查询任务列表
  rpc ListTask(TaskListRequest) returns (TaskListResponse);

  // 根据组织身份查询任务列表
  rpc ListTaskByIdentity(TaskListByIdentityRequest) returns (TaskListResponse);

  // 查询任务的事件列表
  rpc ListTaskEvent(TaskEventRequest) returns (TaskEventResponse);

}
