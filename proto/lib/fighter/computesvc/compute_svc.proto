syntax = "proto3";
package computesvc;
option go_package = "github.com/Metisnetwork/Metis-Carrier/lib/fighter/computesvc";

import "google/protobuf/empty.proto";
import "google/api/annotations.proto";
import "lib/fighter/common/common.proto";

service ComputeProvider {
   rpc GetStatus(google.protobuf.Empty) returns (GetStatusReply) {
         option(google.api.http) = {
            get: "/compute/getStatus"
        };
  }
  rpc GetTaskDetails(GetTaskDetailsReq) returns (GetTaskDetailsReply) {
        option(google.api.http) = {
            post: "/compute/getTaskDetails"
            body: "*"
        };
  }

  rpc UploadShard(stream UploadShardReq) returns (UploadShardReply) {}

  rpc HandleTaskReadyGo(common.TaskReadyGoReq) returns (common.TaskReadyGoReply) {
        option(google.api.http) = {
        post: "/compute/handleTaskReadyGo"
        body: "*"
    };
  }

  rpc HandleCancelTask(common.TaskCancelReq) returns (common.TaskCancelReply) {
        option(google.api.http) = {
        post: "/compute/handleCancelTask"
        body: "*"
    };
  }
}

message UploadShardReq {
  message Info {
    string task_id = 1;
    string data_id = 2;
  }
  oneof data {
    Info meta = 1;
    bytes content = 2;
  }
}

message UploadShardReply {
  bool ok = 1;
  string msg = 2;
}

message GetStatusReply {
  uint32 total_cpu = 1;
  uint32 used_cpu = 2;
  uint32 idle_cpu = 3;
  uint64 total_memory = 4;
  uint64 used_memory = 5;
  uint64 idle_memory = 6;
  uint64 total_disk = 7;
  uint64 used_disk = 8;
  uint64 idle_disk = 9;
  uint64 total_bandwidth = 10;
  uint64 used_bandwidth = 11;
  uint64 idle_bandwidth = 12;
}

message GetTaskDetailsReq {
  repeated string task_ids = 1;
}

message GetTaskDetailsReply {
  message Detail {
    string task_id = 1;
    string task_name = 2;
    string contract_id = 3;
    int64 elapsed_time = 4;
    int64 remain_time = 5;
    string progress = 6;
    string phase = 7;
  }
  repeated Detail task_details = 1;
}
