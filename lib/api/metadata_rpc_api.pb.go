// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: lib/api/metadata_rpc_api.proto

package api

import (
	context "context"
	fmt "fmt"
	common "github.com/RosettaFlow/Carrier-Go/lib/common"
	types "github.com/RosettaFlow/Carrier-Go/lib/types"
	proto "github.com/gogo/protobuf/proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	_ "google.golang.org/protobuf/types/known/emptypb"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

// (全网) 单个元数据详情 resp
type GetGlobalMetadataDetailResponse struct {
	Owner                *common.Organization  `protobuf:"bytes,1,opt,name=owner,proto3" json:"owner,omitempty"`
	Information          *types.MetadataDetail `protobuf:"bytes,2,opt,name=information,proto3" json:"information,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *GetGlobalMetadataDetailResponse) Reset()         { *m = GetGlobalMetadataDetailResponse{} }
func (m *GetGlobalMetadataDetailResponse) String() string { return proto.CompactTextString(m) }
func (*GetGlobalMetadataDetailResponse) ProtoMessage()    {}
func (*GetGlobalMetadataDetailResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ac620a9256b640e4, []int{0}
}
func (m *GetGlobalMetadataDetailResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GetGlobalMetadataDetailResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GetGlobalMetadataDetailResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GetGlobalMetadataDetailResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetGlobalMetadataDetailResponse.Merge(m, src)
}
func (m *GetGlobalMetadataDetailResponse) XXX_Size() int {
	return m.Size()
}
func (m *GetGlobalMetadataDetailResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetGlobalMetadataDetailResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetGlobalMetadataDetailResponse proto.InternalMessageInfo

func (m *GetGlobalMetadataDetailResponse) GetOwner() *common.Organization {
	if m != nil {
		return m.Owner
	}
	return nil
}

func (m *GetGlobalMetadataDetailResponse) GetInformation() *types.MetadataDetail {
	if m != nil {
		return m.Information
	}
	return nil
}

type GetGlobalMetadataDetailListRequest struct {
	LastUpdated          uint64   `protobuf:"varint,1,opt,name=last_updated,json=lastUpdated,proto3" json:"last_updated,omitempty"`
	PageSize             uint64   `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetGlobalMetadataDetailListRequest) Reset()         { *m = GetGlobalMetadataDetailListRequest{} }
func (m *GetGlobalMetadataDetailListRequest) String() string { return proto.CompactTextString(m) }
func (*GetGlobalMetadataDetailListRequest) ProtoMessage()    {}
func (*GetGlobalMetadataDetailListRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ac620a9256b640e4, []int{1}
}
func (m *GetGlobalMetadataDetailListRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GetGlobalMetadataDetailListRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GetGlobalMetadataDetailListRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GetGlobalMetadataDetailListRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetGlobalMetadataDetailListRequest.Merge(m, src)
}
func (m *GetGlobalMetadataDetailListRequest) XXX_Size() int {
	return m.Size()
}
func (m *GetGlobalMetadataDetailListRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetGlobalMetadataDetailListRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetGlobalMetadataDetailListRequest proto.InternalMessageInfo

func (m *GetGlobalMetadataDetailListRequest) GetLastUpdated() uint64 {
	if m != nil {
		return m.LastUpdated
	}
	return 0
}

func (m *GetGlobalMetadataDetailListRequest) GetPageSize() uint64 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

// 查看 全网元数据列表  resp
type GetGlobalMetadataDetailListResponse struct {
	Status               int32                              `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Msg                  string                             `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	MetadataList         []*GetGlobalMetadataDetailResponse `protobuf:"bytes,3,rep,name=metadata_list,json=metadataList,proto3" json:"metadata_list,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                           `json:"-"`
	XXX_unrecognized     []byte                             `json:"-"`
	XXX_sizecache        int32                              `json:"-"`
}

func (m *GetGlobalMetadataDetailListResponse) Reset()         { *m = GetGlobalMetadataDetailListResponse{} }
func (m *GetGlobalMetadataDetailListResponse) String() string { return proto.CompactTextString(m) }
func (*GetGlobalMetadataDetailListResponse) ProtoMessage()    {}
func (*GetGlobalMetadataDetailListResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ac620a9256b640e4, []int{2}
}
func (m *GetGlobalMetadataDetailListResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GetGlobalMetadataDetailListResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GetGlobalMetadataDetailListResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GetGlobalMetadataDetailListResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetGlobalMetadataDetailListResponse.Merge(m, src)
}
func (m *GetGlobalMetadataDetailListResponse) XXX_Size() int {
	return m.Size()
}
func (m *GetGlobalMetadataDetailListResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetGlobalMetadataDetailListResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetGlobalMetadataDetailListResponse proto.InternalMessageInfo

func (m *GetGlobalMetadataDetailListResponse) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *GetGlobalMetadataDetailListResponse) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

func (m *GetGlobalMetadataDetailListResponse) GetMetadataList() []*GetGlobalMetadataDetailResponse {
	if m != nil {
		return m.MetadataList
	}
	return nil
}

// (本组织) 单个元数据详情 resp
type GetLocalMetadataDetailResponse struct {
	Owner                *common.Organization  `protobuf:"bytes,1,opt,name=owner,proto3" json:"owner,omitempty"`
	Information          *types.MetadataDetail `protobuf:"bytes,2,opt,name=information,proto3" json:"information,omitempty"`
	IsInternal           bool                  `protobuf:"varint,3,opt,name=is_internal,json=isInternal,proto3" json:"is_internal,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *GetLocalMetadataDetailResponse) Reset()         { *m = GetLocalMetadataDetailResponse{} }
func (m *GetLocalMetadataDetailResponse) String() string { return proto.CompactTextString(m) }
func (*GetLocalMetadataDetailResponse) ProtoMessage()    {}
func (*GetLocalMetadataDetailResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ac620a9256b640e4, []int{3}
}
func (m *GetLocalMetadataDetailResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GetLocalMetadataDetailResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GetLocalMetadataDetailResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GetLocalMetadataDetailResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetLocalMetadataDetailResponse.Merge(m, src)
}
func (m *GetLocalMetadataDetailResponse) XXX_Size() int {
	return m.Size()
}
func (m *GetLocalMetadataDetailResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetLocalMetadataDetailResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetLocalMetadataDetailResponse proto.InternalMessageInfo

func (m *GetLocalMetadataDetailResponse) GetOwner() *common.Organization {
	if m != nil {
		return m.Owner
	}
	return nil
}

func (m *GetLocalMetadataDetailResponse) GetInformation() *types.MetadataDetail {
	if m != nil {
		return m.Information
	}
	return nil
}

func (m *GetLocalMetadataDetailResponse) GetIsInternal() bool {
	if m != nil {
		return m.IsInternal
	}
	return false
}

type GetLocalMetadataDetailListRequest struct {
	LastUpdated          uint64   `protobuf:"varint,1,opt,name=last_updated,json=lastUpdated,proto3" json:"last_updated,omitempty"`
	PageSize             uint64   `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetLocalMetadataDetailListRequest) Reset()         { *m = GetLocalMetadataDetailListRequest{} }
func (m *GetLocalMetadataDetailListRequest) String() string { return proto.CompactTextString(m) }
func (*GetLocalMetadataDetailListRequest) ProtoMessage()    {}
func (*GetLocalMetadataDetailListRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ac620a9256b640e4, []int{4}
}
func (m *GetLocalMetadataDetailListRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GetLocalMetadataDetailListRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GetLocalMetadataDetailListRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GetLocalMetadataDetailListRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetLocalMetadataDetailListRequest.Merge(m, src)
}
func (m *GetLocalMetadataDetailListRequest) XXX_Size() int {
	return m.Size()
}
func (m *GetLocalMetadataDetailListRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetLocalMetadataDetailListRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetLocalMetadataDetailListRequest proto.InternalMessageInfo

func (m *GetLocalMetadataDetailListRequest) GetLastUpdated() uint64 {
	if m != nil {
		return m.LastUpdated
	}
	return 0
}

func (m *GetLocalMetadataDetailListRequest) GetPageSize() uint64 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

// 查看 本组织元数据列表  resp
type GetLocalMetadataDetailListResponse struct {
	Status               int32                             `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Msg                  string                            `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	MetadataList         []*GetLocalMetadataDetailResponse `protobuf:"bytes,3,rep,name=metadata_list,json=metadataList,proto3" json:"metadata_list,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                          `json:"-"`
	XXX_unrecognized     []byte                            `json:"-"`
	XXX_sizecache        int32                             `json:"-"`
}

func (m *GetLocalMetadataDetailListResponse) Reset()         { *m = GetLocalMetadataDetailListResponse{} }
func (m *GetLocalMetadataDetailListResponse) String() string { return proto.CompactTextString(m) }
func (*GetLocalMetadataDetailListResponse) ProtoMessage()    {}
func (*GetLocalMetadataDetailListResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ac620a9256b640e4, []int{5}
}
func (m *GetLocalMetadataDetailListResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GetLocalMetadataDetailListResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GetLocalMetadataDetailListResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GetLocalMetadataDetailListResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetLocalMetadataDetailListResponse.Merge(m, src)
}
func (m *GetLocalMetadataDetailListResponse) XXX_Size() int {
	return m.Size()
}
func (m *GetLocalMetadataDetailListResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetLocalMetadataDetailListResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetLocalMetadataDetailListResponse proto.InternalMessageInfo

func (m *GetLocalMetadataDetailListResponse) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *GetLocalMetadataDetailListResponse) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

func (m *GetLocalMetadataDetailListResponse) GetMetadataList() []*GetLocalMetadataDetailResponse {
	if m != nil {
		return m.MetadataList
	}
	return nil
}

// 数据上架 req
type PublishMetadataRequest struct {
	Information          *types.MetadataDetail `protobuf:"bytes,1,opt,name=information,proto3" json:"information,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *PublishMetadataRequest) Reset()         { *m = PublishMetadataRequest{} }
func (m *PublishMetadataRequest) String() string { return proto.CompactTextString(m) }
func (*PublishMetadataRequest) ProtoMessage()    {}
func (*PublishMetadataRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ac620a9256b640e4, []int{6}
}
func (m *PublishMetadataRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *PublishMetadataRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_PublishMetadataRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *PublishMetadataRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PublishMetadataRequest.Merge(m, src)
}
func (m *PublishMetadataRequest) XXX_Size() int {
	return m.Size()
}
func (m *PublishMetadataRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PublishMetadataRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PublishMetadataRequest proto.InternalMessageInfo

func (m *PublishMetadataRequest) GetInformation() *types.MetadataDetail {
	if m != nil {
		return m.Information
	}
	return nil
}

// 数据上架 resp
type PublishMetadataResponse struct {
	Status               int32    `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Msg                  string   `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	MetadataId           string   `protobuf:"bytes,3,opt,name=metadata_id,json=metadataId,proto3" json:"metadata_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PublishMetadataResponse) Reset()         { *m = PublishMetadataResponse{} }
func (m *PublishMetadataResponse) String() string { return proto.CompactTextString(m) }
func (*PublishMetadataResponse) ProtoMessage()    {}
func (*PublishMetadataResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ac620a9256b640e4, []int{7}
}
func (m *PublishMetadataResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *PublishMetadataResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_PublishMetadataResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *PublishMetadataResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PublishMetadataResponse.Merge(m, src)
}
func (m *PublishMetadataResponse) XXX_Size() int {
	return m.Size()
}
func (m *PublishMetadataResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PublishMetadataResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PublishMetadataResponse proto.InternalMessageInfo

func (m *PublishMetadataResponse) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *PublishMetadataResponse) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

func (m *PublishMetadataResponse) GetMetadataId() string {
	if m != nil {
		return m.MetadataId
	}
	return ""
}

// 数据下架 req
type RevokeMetadataRequest struct {
	MetadataId           string   `protobuf:"bytes,1,opt,name=metadata_id,json=metadataId,proto3" json:"metadata_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RevokeMetadataRequest) Reset()         { *m = RevokeMetadataRequest{} }
func (m *RevokeMetadataRequest) String() string { return proto.CompactTextString(m) }
func (*RevokeMetadataRequest) ProtoMessage()    {}
func (*RevokeMetadataRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ac620a9256b640e4, []int{8}
}
func (m *RevokeMetadataRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *RevokeMetadataRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_RevokeMetadataRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *RevokeMetadataRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RevokeMetadataRequest.Merge(m, src)
}
func (m *RevokeMetadataRequest) XXX_Size() int {
	return m.Size()
}
func (m *RevokeMetadataRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RevokeMetadataRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RevokeMetadataRequest proto.InternalMessageInfo

func (m *RevokeMetadataRequest) GetMetadataId() string {
	if m != nil {
		return m.MetadataId
	}
	return ""
}

// 查询某 metadata 参与过的任务的taskId列表 req
type GetMetadataUsedTaskIdListRequest struct {
	IdentityId           string   `protobuf:"bytes,1,opt,name=identity_id,json=identityId,proto3" json:"identity_id,omitempty"`
	MetadataId           string   `protobuf:"bytes,2,opt,name=metadata_id,json=metadataId,proto3" json:"metadata_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetMetadataUsedTaskIdListRequest) Reset()         { *m = GetMetadataUsedTaskIdListRequest{} }
func (m *GetMetadataUsedTaskIdListRequest) String() string { return proto.CompactTextString(m) }
func (*GetMetadataUsedTaskIdListRequest) ProtoMessage()    {}
func (*GetMetadataUsedTaskIdListRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ac620a9256b640e4, []int{9}
}
func (m *GetMetadataUsedTaskIdListRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GetMetadataUsedTaskIdListRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GetMetadataUsedTaskIdListRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GetMetadataUsedTaskIdListRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetMetadataUsedTaskIdListRequest.Merge(m, src)
}
func (m *GetMetadataUsedTaskIdListRequest) XXX_Size() int {
	return m.Size()
}
func (m *GetMetadataUsedTaskIdListRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetMetadataUsedTaskIdListRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetMetadataUsedTaskIdListRequest proto.InternalMessageInfo

func (m *GetMetadataUsedTaskIdListRequest) GetIdentityId() string {
	if m != nil {
		return m.IdentityId
	}
	return ""
}

func (m *GetMetadataUsedTaskIdListRequest) GetMetadataId() string {
	if m != nil {
		return m.MetadataId
	}
	return ""
}

// 查询某 metadata 参与过的任务的taskId列表 resp
type GetMetadataUsedTaskIdListResponse struct {
	Status               int32    `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Msg                  string   `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	TaskIds              []string `protobuf:"bytes,3,rep,name=task_ids,json=taskIds,proto3" json:"task_ids,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetMetadataUsedTaskIdListResponse) Reset()         { *m = GetMetadataUsedTaskIdListResponse{} }
func (m *GetMetadataUsedTaskIdListResponse) String() string { return proto.CompactTextString(m) }
func (*GetMetadataUsedTaskIdListResponse) ProtoMessage()    {}
func (*GetMetadataUsedTaskIdListResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ac620a9256b640e4, []int{10}
}
func (m *GetMetadataUsedTaskIdListResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GetMetadataUsedTaskIdListResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GetMetadataUsedTaskIdListResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GetMetadataUsedTaskIdListResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetMetadataUsedTaskIdListResponse.Merge(m, src)
}
func (m *GetMetadataUsedTaskIdListResponse) XXX_Size() int {
	return m.Size()
}
func (m *GetMetadataUsedTaskIdListResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetMetadataUsedTaskIdListResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetMetadataUsedTaskIdListResponse proto.InternalMessageInfo

func (m *GetMetadataUsedTaskIdListResponse) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *GetMetadataUsedTaskIdListResponse) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

func (m *GetMetadataUsedTaskIdListResponse) GetTaskIds() []string {
	if m != nil {
		return m.TaskIds
	}
	return nil
}

func init() {
	proto.RegisterType((*GetGlobalMetadataDetailResponse)(nil), "rpcapi.GetGlobalMetadataDetailResponse")
	proto.RegisterType((*GetGlobalMetadataDetailListRequest)(nil), "rpcapi.GetGlobalMetadataDetailListRequest")
	proto.RegisterType((*GetGlobalMetadataDetailListResponse)(nil), "rpcapi.GetGlobalMetadataDetailListResponse")
	proto.RegisterType((*GetLocalMetadataDetailResponse)(nil), "rpcapi.GetLocalMetadataDetailResponse")
	proto.RegisterType((*GetLocalMetadataDetailListRequest)(nil), "rpcapi.GetLocalMetadataDetailListRequest")
	proto.RegisterType((*GetLocalMetadataDetailListResponse)(nil), "rpcapi.GetLocalMetadataDetailListResponse")
	proto.RegisterType((*PublishMetadataRequest)(nil), "rpcapi.PublishMetadataRequest")
	proto.RegisterType((*PublishMetadataResponse)(nil), "rpcapi.PublishMetadataResponse")
	proto.RegisterType((*RevokeMetadataRequest)(nil), "rpcapi.RevokeMetadataRequest")
	proto.RegisterType((*GetMetadataUsedTaskIdListRequest)(nil), "rpcapi.GetMetadataUsedTaskIdListRequest")
	proto.RegisterType((*GetMetadataUsedTaskIdListResponse)(nil), "rpcapi.GetMetadataUsedTaskIdListResponse")
}

func init() { proto.RegisterFile("lib/api/metadata_rpc_api.proto", fileDescriptor_ac620a9256b640e4) }

var fileDescriptor_ac620a9256b640e4 = []byte{
	// 761 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xcc, 0x56, 0xcd, 0x6e, 0xd3, 0x4c,
	0x14, 0xd5, 0x34, 0x6d, 0xbf, 0x66, 0xd2, 0x8f, 0xa2, 0x91, 0x5a, 0x52, 0xa7, 0x24, 0xa9, 0x2b,
	0xb5, 0x69, 0x10, 0x36, 0x94, 0x45, 0x51, 0x97, 0x80, 0x88, 0x22, 0x8a, 0x00, 0x97, 0x6e, 0xd8,
	0x44, 0x63, 0x7b, 0x9a, 0x8e, 0x6a, 0x7b, 0x8c, 0x67, 0xdc, 0xaa, 0x65, 0xc7, 0x9a, 0x1d, 0xcb,
	0x0a, 0xc1, 0x03, 0xf0, 0x20, 0x2c, 0x91, 0x78, 0x01, 0x54, 0xb1, 0xe0, 0x31, 0x90, 0xc7, 0x76,
	0xe4, 0xb8, 0x4e, 0xda, 0x48, 0x2c, 0xd8, 0xc5, 0xf7, 0xef, 0x9c, 0x7b, 0xcf, 0xbd, 0xa3, 0xc0,
	0xba, 0x43, 0x4d, 0x1d, 0xfb, 0x54, 0x77, 0x89, 0xc0, 0x36, 0x16, 0xb8, 0x17, 0xf8, 0x56, 0x0f,
	0xfb, 0x54, 0xf3, 0x03, 0x26, 0x18, 0x9a, 0x0d, 0x7c, 0x0b, 0xfb, 0x54, 0x59, 0x8c, 0xe2, 0x2c,
	0xe6, 0xba, 0xcc, 0xd3, 0x4d, 0xcc, 0x49, 0xec, 0x56, 0xaa, 0x91, 0x59, 0x9c, 0xfa, 0x84, 0x0f,
	0x0a, 0x24, 0x9e, 0x95, 0x3e, 0x63, 0x7d, 0x87, 0xc8, 0xda, 0xd8, 0xf3, 0x98, 0xc0, 0x82, 0x32,
	0x8f, 0x27, 0xde, 0x5a, 0xe2, 0x95, 0x5f, 0x66, 0x78, 0xa0, 0x13, 0xd7, 0x17, 0xa7, 0xb1, 0x53,
	0xfd, 0x00, 0x60, 0xa3, 0x43, 0x44, 0xc7, 0x61, 0x26, 0x76, 0x9e, 0x27, 0x65, 0x9f, 0x10, 0x81,
	0xa9, 0x63, 0x10, 0xee, 0x33, 0x8f, 0x13, 0x74, 0x0f, 0xce, 0xb0, 0x13, 0x8f, 0x04, 0x55, 0xd0,
	0x04, 0xad, 0xca, 0x96, 0xa2, 0x0d, 0x28, 0x9b, 0xe1, 0x81, 0xf6, 0x22, 0xe8, 0x63, 0x8f, 0x9e,
	0x49, 0x48, 0x23, 0x0e, 0x44, 0xdb, 0xb0, 0x42, 0xbd, 0x03, 0x16, 0xb8, 0xd2, 0x5a, 0x9d, 0x92,
	0x79, 0x8b, 0x9a, 0x24, 0xaf, 0xe5, 0x50, 0xb2, 0x91, 0xaa, 0x0d, 0xd5, 0x11, 0x6c, 0x76, 0x29,
	0x17, 0x06, 0x79, 0x1b, 0x12, 0x2e, 0xd0, 0x2a, 0x9c, 0x77, 0x30, 0x17, 0xbd, 0xd0, 0xb7, 0xb1,
	0x20, 0xb6, 0xe4, 0x35, 0x6d, 0x54, 0x22, 0xdb, 0x7e, 0x6c, 0x42, 0x35, 0x58, 0xf6, 0x71, 0x9f,
	0xf4, 0x38, 0x3d, 0x23, 0x12, 0x7f, 0xda, 0x98, 0x8b, 0x0c, 0x7b, 0xf4, 0x8c, 0xa8, 0x9f, 0x00,
	0x5c, 0x1b, 0x0b, 0x93, 0x34, 0xbe, 0x04, 0x67, 0xb9, 0xc0, 0x22, 0xe4, 0x12, 0x61, 0xc6, 0x48,
	0xbe, 0xd0, 0x4d, 0x58, 0x72, 0x79, 0x5f, 0x96, 0x2d, 0x1b, 0xd1, 0x4f, 0xb4, 0x0b, 0xff, 0x1f,
	0x88, 0xea, 0x50, 0x2e, 0xaa, 0xa5, 0x66, 0xa9, 0x55, 0xd9, 0xda, 0xd0, 0x62, 0x49, 0xb5, 0x2b,
	0x46, 0x6c, 0xcc, 0xa7, 0xd9, 0x11, 0xbe, 0xfa, 0x15, 0xc0, 0x7a, 0x87, 0x88, 0x5d, 0x66, 0xfd,
	0x03, 0x9a, 0xa0, 0x06, 0xac, 0x50, 0xde, 0xa3, 0x9e, 0x20, 0x81, 0x87, 0x9d, 0x6a, 0xa9, 0x09,
	0x5a, 0x73, 0x06, 0xa4, 0xbc, 0x9b, 0x58, 0x54, 0x0b, 0xae, 0x16, 0xb3, 0xfd, 0x9b, 0x9a, 0x9d,
	0x03, 0xb9, 0x1a, 0x23, 0x51, 0x26, 0x96, 0xec, 0x59, 0xb1, 0x64, 0xeb, 0x19, 0xc9, 0xc6, 0x08,
	0x90, 0x53, 0xec, 0x15, 0x5c, 0x7a, 0x19, 0x9a, 0x0e, 0xe5, 0x87, 0x69, 0x78, 0xda, 0x77, 0x6e,
	0xec, 0x60, 0x82, 0x53, 0xb8, 0x75, 0xa9, 0xe4, 0xc4, 0x4d, 0x36, 0x60, 0x65, 0xd0, 0x24, 0xb5,
	0xa5, 0x76, 0x65, 0x03, 0xa6, 0xa6, 0xae, 0xad, 0x3e, 0x84, 0x8b, 0x06, 0x39, 0x66, 0x47, 0x24,
	0xcf, 0x3b, 0x97, 0x09, 0x2e, 0x65, 0xda, 0xb0, 0xd9, 0x21, 0x22, 0x4d, 0xdb, 0xe7, 0xc4, 0x7e,
	0x8d, 0xf9, 0x51, 0xd7, 0xce, 0x8a, 0x1e, 0xad, 0x8e, 0x4d, 0x3c, 0x41, 0xc5, 0x69, 0xa6, 0x48,
	0x6a, 0xea, 0xda, 0x79, 0x94, 0xa9, 0x4b, 0x28, 0x87, 0x72, 0xb7, 0x46, 0xa1, 0x4c, 0x3c, 0x8f,
	0x65, 0x38, 0x27, 0x30, 0x3f, 0xea, 0x51, 0x9b, 0x4b, 0xbd, 0xcb, 0xc6, 0x7f, 0x42, 0xd6, 0xe3,
	0x5b, 0xbf, 0x67, 0xe0, 0x42, 0x8a, 0xb3, 0x47, 0x82, 0x63, 0x6a, 0x11, 0xf4, 0x19, 0xc0, 0xda,
	0x98, 0x87, 0x02, 0xb5, 0xaf, 0xb8, 0xef, 0xcc, 0x2c, 0x94, 0x3b, 0xd7, 0x8a, 0x8d, 0x3b, 0x52,
	0x37, 0xde, 0xff, 0xf8, 0xf5, 0x71, 0x6a, 0x15, 0x35, 0x74, 0x0b, 0x07, 0x01, 0x25, 0x81, 0x7e,
	0x7c, 0x7f, 0xf0, 0xea, 0xeb, 0x7d, 0x99, 0x2e, 0x19, 0x9c, 0x03, 0xa8, 0x8c, 0x3e, 0x0b, 0xb4,
	0x39, 0x7e, 0x9b, 0xb3, 0xfc, 0xda, 0xd7, 0x09, 0x4d, 0xe8, 0xad, 0x4b, 0x7a, 0x4d, 0x54, 0x2f,
	0xa4, 0xe7, 0x44, 0xd9, 0x12, 0xfe, 0x1d, 0x5c, 0xc8, 0xed, 0x30, 0xaa, 0xa7, 0x30, 0xc5, 0xf7,
	0xa2, 0x34, 0x46, 0xfa, 0x87, 0x47, 0xa3, 0xae, 0x14, 0x62, 0xfb, 0x71, 0xd6, 0x0e, 0x68, 0xa3,
	0x10, 0xde, 0x18, 0x5e, 0x6d, 0x74, 0x3b, 0xad, 0x5d, 0xb8, 0xf2, 0xca, 0xca, 0xf0, 0x23, 0xba,
	0x47, 0x5d, 0xdf, 0x21, 0xf9, 0x9e, 0xd5, 0x5a, 0x21, 0x6e, 0x20, 0x2b, 0x46, 0xb0, 0x5f, 0x00,
	0x5c, 0x1e, 0xb9, 0xb2, 0xa8, 0x95, 0x99, 0xf2, 0xd8, 0xdb, 0x51, 0x36, 0xaf, 0x11, 0x99, 0x50,
	0xd3, 0x24, 0xb5, 0x96, 0xba, 0x56, 0x48, 0x2d, 0x1c, 0x4a, 0xda, 0x01, 0xed, 0x47, 0xdb, 0xdf,
	0x2e, 0xea, 0xe0, 0xfb, 0x45, 0x1d, 0xfc, 0xbc, 0xa8, 0x83, 0x37, 0x9b, 0x7d, 0x2a, 0x0e, 0x43,
	0x53, 0xb3, 0x98, 0xab, 0x1b, 0x8c, 0x13, 0x21, 0xf0, 0x53, 0x87, 0x9d, 0xe8, 0x8f, 0xe3, 0x5a,
	0x77, 0x3b, 0x4c, 0x4f, 0xfe, 0xb8, 0x98, 0xb3, 0x72, 0x38, 0x0f, 0xfe, 0x04, 0x00, 0x00, 0xff,
	0xff, 0x44, 0x3f, 0x67, 0x43, 0xca, 0x08, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MetadataServiceClient is the client API for MetadataService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MetadataServiceClient interface {
	// 查看 全网元数据列表
	GetGlobalMetadataDetailList(ctx context.Context, in *GetGlobalMetadataDetailListRequest, opts ...grpc.CallOption) (*GetGlobalMetadataDetailListResponse, error)
	// 查看 本组织元数据列表
	GetLocalMetadataDetailList(ctx context.Context, in *GetLocalMetadataDetailListRequest, opts ...grpc.CallOption) (*GetLocalMetadataDetailListResponse, error)
	// 发布元数据  (新增和编辑 都是发布新的元数据) <底层根据 原始数据Id -- OriginId 来关联 新的MetaDataId>
	PublishMetadata(ctx context.Context, in *PublishMetadataRequest, opts ...grpc.CallOption) (*PublishMetadataResponse, error)
	// 撤销元数据 (从底层网络撤销)
	RevokeMetadata(ctx context.Context, in *RevokeMetadataRequest, opts ...grpc.CallOption) (*common.SimpleResponse, error)
	// V 2.0 新增
	// 查询某 metadata 参与过的任务的taskId列表
	GetMetadataUsedTaskIdList(ctx context.Context, in *GetMetadataUsedTaskIdListRequest, opts ...grpc.CallOption) (*GetMetadataUsedTaskIdListResponse, error)
}

type metadataServiceClient struct {
	cc *grpc.ClientConn
}

func NewMetadataServiceClient(cc *grpc.ClientConn) MetadataServiceClient {
	return &metadataServiceClient{cc}
}

func (c *metadataServiceClient) GetGlobalMetadataDetailList(ctx context.Context, in *GetGlobalMetadataDetailListRequest, opts ...grpc.CallOption) (*GetGlobalMetadataDetailListResponse, error) {
	out := new(GetGlobalMetadataDetailListResponse)
	err := c.cc.Invoke(ctx, "/rpcapi.MetadataService/GetGlobalMetadataDetailList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *metadataServiceClient) GetLocalMetadataDetailList(ctx context.Context, in *GetLocalMetadataDetailListRequest, opts ...grpc.CallOption) (*GetLocalMetadataDetailListResponse, error) {
	out := new(GetLocalMetadataDetailListResponse)
	err := c.cc.Invoke(ctx, "/rpcapi.MetadataService/GetLocalMetadataDetailList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *metadataServiceClient) PublishMetadata(ctx context.Context, in *PublishMetadataRequest, opts ...grpc.CallOption) (*PublishMetadataResponse, error) {
	out := new(PublishMetadataResponse)
	err := c.cc.Invoke(ctx, "/rpcapi.MetadataService/PublishMetadata", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *metadataServiceClient) RevokeMetadata(ctx context.Context, in *RevokeMetadataRequest, opts ...grpc.CallOption) (*common.SimpleResponse, error) {
	out := new(common.SimpleResponse)
	err := c.cc.Invoke(ctx, "/rpcapi.MetadataService/RevokeMetadata", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *metadataServiceClient) GetMetadataUsedTaskIdList(ctx context.Context, in *GetMetadataUsedTaskIdListRequest, opts ...grpc.CallOption) (*GetMetadataUsedTaskIdListResponse, error) {
	out := new(GetMetadataUsedTaskIdListResponse)
	err := c.cc.Invoke(ctx, "/rpcapi.MetadataService/GetMetadataUsedTaskIdList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MetadataServiceServer is the server API for MetadataService service.
type MetadataServiceServer interface {
	// 查看 全网元数据列表
	GetGlobalMetadataDetailList(context.Context, *GetGlobalMetadataDetailListRequest) (*GetGlobalMetadataDetailListResponse, error)
	// 查看 本组织元数据列表
	GetLocalMetadataDetailList(context.Context, *GetLocalMetadataDetailListRequest) (*GetLocalMetadataDetailListResponse, error)
	// 发布元数据  (新增和编辑 都是发布新的元数据) <底层根据 原始数据Id -- OriginId 来关联 新的MetaDataId>
	PublishMetadata(context.Context, *PublishMetadataRequest) (*PublishMetadataResponse, error)
	// 撤销元数据 (从底层网络撤销)
	RevokeMetadata(context.Context, *RevokeMetadataRequest) (*common.SimpleResponse, error)
	// V 2.0 新增
	// 查询某 metadata 参与过的任务的taskId列表
	GetMetadataUsedTaskIdList(context.Context, *GetMetadataUsedTaskIdListRequest) (*GetMetadataUsedTaskIdListResponse, error)
}

// UnimplementedMetadataServiceServer can be embedded to have forward compatible implementations.
type UnimplementedMetadataServiceServer struct {
}

func (*UnimplementedMetadataServiceServer) GetGlobalMetadataDetailList(ctx context.Context, req *GetGlobalMetadataDetailListRequest) (*GetGlobalMetadataDetailListResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetGlobalMetadataDetailList not implemented")
}
func (*UnimplementedMetadataServiceServer) GetLocalMetadataDetailList(ctx context.Context, req *GetLocalMetadataDetailListRequest) (*GetLocalMetadataDetailListResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetLocalMetadataDetailList not implemented")
}
func (*UnimplementedMetadataServiceServer) PublishMetadata(ctx context.Context, req *PublishMetadataRequest) (*PublishMetadataResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PublishMetadata not implemented")
}
func (*UnimplementedMetadataServiceServer) RevokeMetadata(ctx context.Context, req *RevokeMetadataRequest) (*common.SimpleResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RevokeMetadata not implemented")
}
func (*UnimplementedMetadataServiceServer) GetMetadataUsedTaskIdList(ctx context.Context, req *GetMetadataUsedTaskIdListRequest) (*GetMetadataUsedTaskIdListResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetMetadataUsedTaskIdList not implemented")
}

func RegisterMetadataServiceServer(s *grpc.Server, srv MetadataServiceServer) {
	s.RegisterService(&_MetadataService_serviceDesc, srv)
}

func _MetadataService_GetGlobalMetadataDetailList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetGlobalMetadataDetailListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MetadataServiceServer).GetGlobalMetadataDetailList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpcapi.MetadataService/GetGlobalMetadataDetailList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MetadataServiceServer).GetGlobalMetadataDetailList(ctx, req.(*GetGlobalMetadataDetailListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MetadataService_GetLocalMetadataDetailList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetLocalMetadataDetailListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MetadataServiceServer).GetLocalMetadataDetailList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpcapi.MetadataService/GetLocalMetadataDetailList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MetadataServiceServer).GetLocalMetadataDetailList(ctx, req.(*GetLocalMetadataDetailListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MetadataService_PublishMetadata_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PublishMetadataRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MetadataServiceServer).PublishMetadata(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpcapi.MetadataService/PublishMetadata",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MetadataServiceServer).PublishMetadata(ctx, req.(*PublishMetadataRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MetadataService_RevokeMetadata_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RevokeMetadataRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MetadataServiceServer).RevokeMetadata(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpcapi.MetadataService/RevokeMetadata",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MetadataServiceServer).RevokeMetadata(ctx, req.(*RevokeMetadataRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MetadataService_GetMetadataUsedTaskIdList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetMetadataUsedTaskIdListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MetadataServiceServer).GetMetadataUsedTaskIdList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpcapi.MetadataService/GetMetadataUsedTaskIdList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MetadataServiceServer).GetMetadataUsedTaskIdList(ctx, req.(*GetMetadataUsedTaskIdListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _MetadataService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "rpcapi.MetadataService",
	HandlerType: (*MetadataServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetGlobalMetadataDetailList",
			Handler:    _MetadataService_GetGlobalMetadataDetailList_Handler,
		},
		{
			MethodName: "GetLocalMetadataDetailList",
			Handler:    _MetadataService_GetLocalMetadataDetailList_Handler,
		},
		{
			MethodName: "PublishMetadata",
			Handler:    _MetadataService_PublishMetadata_Handler,
		},
		{
			MethodName: "RevokeMetadata",
			Handler:    _MetadataService_RevokeMetadata_Handler,
		},
		{
			MethodName: "GetMetadataUsedTaskIdList",
			Handler:    _MetadataService_GetMetadataUsedTaskIdList_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "lib/api/metadata_rpc_api.proto",
}

func (m *GetGlobalMetadataDetailResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetGlobalMetadataDetailResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GetGlobalMetadataDetailResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Information != nil {
		{
			size, err := m.Information.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintMetadataRpcApi(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	if m.Owner != nil {
		{
			size, err := m.Owner.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintMetadataRpcApi(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *GetGlobalMetadataDetailListRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetGlobalMetadataDetailListRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GetGlobalMetadataDetailListRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.PageSize != 0 {
		i = encodeVarintMetadataRpcApi(dAtA, i, uint64(m.PageSize))
		i--
		dAtA[i] = 0x10
	}
	if m.LastUpdated != 0 {
		i = encodeVarintMetadataRpcApi(dAtA, i, uint64(m.LastUpdated))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *GetGlobalMetadataDetailListResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetGlobalMetadataDetailListResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GetGlobalMetadataDetailListResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.MetadataList) > 0 {
		for iNdEx := len(m.MetadataList) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.MetadataList[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintMetadataRpcApi(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x1a
		}
	}
	if len(m.Msg) > 0 {
		i -= len(m.Msg)
		copy(dAtA[i:], m.Msg)
		i = encodeVarintMetadataRpcApi(dAtA, i, uint64(len(m.Msg)))
		i--
		dAtA[i] = 0x12
	}
	if m.Status != 0 {
		i = encodeVarintMetadataRpcApi(dAtA, i, uint64(m.Status))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *GetLocalMetadataDetailResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetLocalMetadataDetailResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GetLocalMetadataDetailResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.IsInternal {
		i--
		if m.IsInternal {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x18
	}
	if m.Information != nil {
		{
			size, err := m.Information.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintMetadataRpcApi(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	if m.Owner != nil {
		{
			size, err := m.Owner.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintMetadataRpcApi(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *GetLocalMetadataDetailListRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetLocalMetadataDetailListRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GetLocalMetadataDetailListRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.PageSize != 0 {
		i = encodeVarintMetadataRpcApi(dAtA, i, uint64(m.PageSize))
		i--
		dAtA[i] = 0x10
	}
	if m.LastUpdated != 0 {
		i = encodeVarintMetadataRpcApi(dAtA, i, uint64(m.LastUpdated))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *GetLocalMetadataDetailListResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetLocalMetadataDetailListResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GetLocalMetadataDetailListResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.MetadataList) > 0 {
		for iNdEx := len(m.MetadataList) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.MetadataList[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintMetadataRpcApi(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x1a
		}
	}
	if len(m.Msg) > 0 {
		i -= len(m.Msg)
		copy(dAtA[i:], m.Msg)
		i = encodeVarintMetadataRpcApi(dAtA, i, uint64(len(m.Msg)))
		i--
		dAtA[i] = 0x12
	}
	if m.Status != 0 {
		i = encodeVarintMetadataRpcApi(dAtA, i, uint64(m.Status))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *PublishMetadataRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *PublishMetadataRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *PublishMetadataRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Information != nil {
		{
			size, err := m.Information.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintMetadataRpcApi(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *PublishMetadataResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *PublishMetadataResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *PublishMetadataResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.MetadataId) > 0 {
		i -= len(m.MetadataId)
		copy(dAtA[i:], m.MetadataId)
		i = encodeVarintMetadataRpcApi(dAtA, i, uint64(len(m.MetadataId)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Msg) > 0 {
		i -= len(m.Msg)
		copy(dAtA[i:], m.Msg)
		i = encodeVarintMetadataRpcApi(dAtA, i, uint64(len(m.Msg)))
		i--
		dAtA[i] = 0x12
	}
	if m.Status != 0 {
		i = encodeVarintMetadataRpcApi(dAtA, i, uint64(m.Status))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *RevokeMetadataRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *RevokeMetadataRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *RevokeMetadataRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.MetadataId) > 0 {
		i -= len(m.MetadataId)
		copy(dAtA[i:], m.MetadataId)
		i = encodeVarintMetadataRpcApi(dAtA, i, uint64(len(m.MetadataId)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *GetMetadataUsedTaskIdListRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetMetadataUsedTaskIdListRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GetMetadataUsedTaskIdListRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.MetadataId) > 0 {
		i -= len(m.MetadataId)
		copy(dAtA[i:], m.MetadataId)
		i = encodeVarintMetadataRpcApi(dAtA, i, uint64(len(m.MetadataId)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.IdentityId) > 0 {
		i -= len(m.IdentityId)
		copy(dAtA[i:], m.IdentityId)
		i = encodeVarintMetadataRpcApi(dAtA, i, uint64(len(m.IdentityId)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *GetMetadataUsedTaskIdListResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetMetadataUsedTaskIdListResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GetMetadataUsedTaskIdListResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.TaskIds) > 0 {
		for iNdEx := len(m.TaskIds) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.TaskIds[iNdEx])
			copy(dAtA[i:], m.TaskIds[iNdEx])
			i = encodeVarintMetadataRpcApi(dAtA, i, uint64(len(m.TaskIds[iNdEx])))
			i--
			dAtA[i] = 0x1a
		}
	}
	if len(m.Msg) > 0 {
		i -= len(m.Msg)
		copy(dAtA[i:], m.Msg)
		i = encodeVarintMetadataRpcApi(dAtA, i, uint64(len(m.Msg)))
		i--
		dAtA[i] = 0x12
	}
	if m.Status != 0 {
		i = encodeVarintMetadataRpcApi(dAtA, i, uint64(m.Status))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func encodeVarintMetadataRpcApi(dAtA []byte, offset int, v uint64) int {
	offset -= sovMetadataRpcApi(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *GetGlobalMetadataDetailResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Owner != nil {
		l = m.Owner.Size()
		n += 1 + l + sovMetadataRpcApi(uint64(l))
	}
	if m.Information != nil {
		l = m.Information.Size()
		n += 1 + l + sovMetadataRpcApi(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *GetGlobalMetadataDetailListRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.LastUpdated != 0 {
		n += 1 + sovMetadataRpcApi(uint64(m.LastUpdated))
	}
	if m.PageSize != 0 {
		n += 1 + sovMetadataRpcApi(uint64(m.PageSize))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *GetGlobalMetadataDetailListResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Status != 0 {
		n += 1 + sovMetadataRpcApi(uint64(m.Status))
	}
	l = len(m.Msg)
	if l > 0 {
		n += 1 + l + sovMetadataRpcApi(uint64(l))
	}
	if len(m.MetadataList) > 0 {
		for _, e := range m.MetadataList {
			l = e.Size()
			n += 1 + l + sovMetadataRpcApi(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *GetLocalMetadataDetailResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Owner != nil {
		l = m.Owner.Size()
		n += 1 + l + sovMetadataRpcApi(uint64(l))
	}
	if m.Information != nil {
		l = m.Information.Size()
		n += 1 + l + sovMetadataRpcApi(uint64(l))
	}
	if m.IsInternal {
		n += 2
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *GetLocalMetadataDetailListRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.LastUpdated != 0 {
		n += 1 + sovMetadataRpcApi(uint64(m.LastUpdated))
	}
	if m.PageSize != 0 {
		n += 1 + sovMetadataRpcApi(uint64(m.PageSize))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *GetLocalMetadataDetailListResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Status != 0 {
		n += 1 + sovMetadataRpcApi(uint64(m.Status))
	}
	l = len(m.Msg)
	if l > 0 {
		n += 1 + l + sovMetadataRpcApi(uint64(l))
	}
	if len(m.MetadataList) > 0 {
		for _, e := range m.MetadataList {
			l = e.Size()
			n += 1 + l + sovMetadataRpcApi(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *PublishMetadataRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Information != nil {
		l = m.Information.Size()
		n += 1 + l + sovMetadataRpcApi(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *PublishMetadataResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Status != 0 {
		n += 1 + sovMetadataRpcApi(uint64(m.Status))
	}
	l = len(m.Msg)
	if l > 0 {
		n += 1 + l + sovMetadataRpcApi(uint64(l))
	}
	l = len(m.MetadataId)
	if l > 0 {
		n += 1 + l + sovMetadataRpcApi(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *RevokeMetadataRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.MetadataId)
	if l > 0 {
		n += 1 + l + sovMetadataRpcApi(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *GetMetadataUsedTaskIdListRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.IdentityId)
	if l > 0 {
		n += 1 + l + sovMetadataRpcApi(uint64(l))
	}
	l = len(m.MetadataId)
	if l > 0 {
		n += 1 + l + sovMetadataRpcApi(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *GetMetadataUsedTaskIdListResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Status != 0 {
		n += 1 + sovMetadataRpcApi(uint64(m.Status))
	}
	l = len(m.Msg)
	if l > 0 {
		n += 1 + l + sovMetadataRpcApi(uint64(l))
	}
	if len(m.TaskIds) > 0 {
		for _, s := range m.TaskIds {
			l = len(s)
			n += 1 + l + sovMetadataRpcApi(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func sovMetadataRpcApi(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozMetadataRpcApi(x uint64) (n int) {
	return sovMetadataRpcApi(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *GetGlobalMetadataDetailResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMetadataRpcApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetGlobalMetadataDetailResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetGlobalMetadataDetailResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Owner", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMetadataRpcApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMetadataRpcApi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMetadataRpcApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Owner == nil {
				m.Owner = &common.Organization{}
			}
			if err := m.Owner.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Information", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMetadataRpcApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMetadataRpcApi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMetadataRpcApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Information == nil {
				m.Information = &types.MetadataDetail{}
			}
			if err := m.Information.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMetadataRpcApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthMetadataRpcApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GetGlobalMetadataDetailListRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMetadataRpcApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetGlobalMetadataDetailListRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetGlobalMetadataDetailListRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field LastUpdated", wireType)
			}
			m.LastUpdated = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMetadataRpcApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.LastUpdated |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PageSize", wireType)
			}
			m.PageSize = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMetadataRpcApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.PageSize |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipMetadataRpcApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthMetadataRpcApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GetGlobalMetadataDetailListResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMetadataRpcApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetGlobalMetadataDetailListResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetGlobalMetadataDetailListResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Status", wireType)
			}
			m.Status = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMetadataRpcApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Status |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Msg", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMetadataRpcApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMetadataRpcApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMetadataRpcApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Msg = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MetadataList", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMetadataRpcApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMetadataRpcApi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMetadataRpcApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.MetadataList = append(m.MetadataList, &GetGlobalMetadataDetailResponse{})
			if err := m.MetadataList[len(m.MetadataList)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMetadataRpcApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthMetadataRpcApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GetLocalMetadataDetailResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMetadataRpcApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetLocalMetadataDetailResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetLocalMetadataDetailResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Owner", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMetadataRpcApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMetadataRpcApi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMetadataRpcApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Owner == nil {
				m.Owner = &common.Organization{}
			}
			if err := m.Owner.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Information", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMetadataRpcApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMetadataRpcApi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMetadataRpcApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Information == nil {
				m.Information = &types.MetadataDetail{}
			}
			if err := m.Information.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field IsInternal", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMetadataRpcApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.IsInternal = bool(v != 0)
		default:
			iNdEx = preIndex
			skippy, err := skipMetadataRpcApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthMetadataRpcApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GetLocalMetadataDetailListRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMetadataRpcApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetLocalMetadataDetailListRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetLocalMetadataDetailListRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field LastUpdated", wireType)
			}
			m.LastUpdated = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMetadataRpcApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.LastUpdated |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PageSize", wireType)
			}
			m.PageSize = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMetadataRpcApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.PageSize |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipMetadataRpcApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthMetadataRpcApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GetLocalMetadataDetailListResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMetadataRpcApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetLocalMetadataDetailListResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetLocalMetadataDetailListResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Status", wireType)
			}
			m.Status = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMetadataRpcApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Status |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Msg", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMetadataRpcApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMetadataRpcApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMetadataRpcApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Msg = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MetadataList", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMetadataRpcApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMetadataRpcApi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMetadataRpcApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.MetadataList = append(m.MetadataList, &GetLocalMetadataDetailResponse{})
			if err := m.MetadataList[len(m.MetadataList)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMetadataRpcApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthMetadataRpcApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *PublishMetadataRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMetadataRpcApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: PublishMetadataRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: PublishMetadataRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Information", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMetadataRpcApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMetadataRpcApi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMetadataRpcApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Information == nil {
				m.Information = &types.MetadataDetail{}
			}
			if err := m.Information.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMetadataRpcApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthMetadataRpcApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *PublishMetadataResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMetadataRpcApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: PublishMetadataResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: PublishMetadataResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Status", wireType)
			}
			m.Status = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMetadataRpcApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Status |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Msg", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMetadataRpcApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMetadataRpcApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMetadataRpcApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Msg = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MetadataId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMetadataRpcApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMetadataRpcApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMetadataRpcApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.MetadataId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMetadataRpcApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthMetadataRpcApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *RevokeMetadataRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMetadataRpcApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: RevokeMetadataRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: RevokeMetadataRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MetadataId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMetadataRpcApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMetadataRpcApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMetadataRpcApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.MetadataId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMetadataRpcApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthMetadataRpcApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GetMetadataUsedTaskIdListRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMetadataRpcApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetMetadataUsedTaskIdListRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetMetadataUsedTaskIdListRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field IdentityId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMetadataRpcApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMetadataRpcApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMetadataRpcApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.IdentityId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MetadataId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMetadataRpcApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMetadataRpcApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMetadataRpcApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.MetadataId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMetadataRpcApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthMetadataRpcApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GetMetadataUsedTaskIdListResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMetadataRpcApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetMetadataUsedTaskIdListResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetMetadataUsedTaskIdListResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Status", wireType)
			}
			m.Status = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMetadataRpcApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Status |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Msg", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMetadataRpcApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMetadataRpcApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMetadataRpcApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Msg = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TaskIds", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMetadataRpcApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMetadataRpcApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMetadataRpcApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.TaskIds = append(m.TaskIds, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMetadataRpcApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthMetadataRpcApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipMetadataRpcApi(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowMetadataRpcApi
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowMetadataRpcApi
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowMetadataRpcApi
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthMetadataRpcApi
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupMetadataRpcApi
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthMetadataRpcApi
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthMetadataRpcApi        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowMetadataRpcApi          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupMetadataRpcApi = fmt.Errorf("proto: unexpected end of group")
)
