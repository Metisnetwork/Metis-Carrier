// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: lib/api/auth_rpc_api.proto

package api

import (
	context "context"
	fmt "fmt"
	common "github.com/RosettaFlow/Carrier-Go/lib/common"
	types "github.com/RosettaFlow/Carrier-Go/lib/types"
	proto "github.com/gogo/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

// 组织身份入网申请 req
type ApplyIdentityJoinRequest struct {
	Member               *common.Organization `protobuf:"bytes,1,opt,name=member,proto3" json:"member,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *ApplyIdentityJoinRequest) Reset()         { *m = ApplyIdentityJoinRequest{} }
func (m *ApplyIdentityJoinRequest) String() string { return proto.CompactTextString(m) }
func (*ApplyIdentityJoinRequest) ProtoMessage()    {}
func (*ApplyIdentityJoinRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_27592dd1452c836c, []int{0}
}
func (m *ApplyIdentityJoinRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ApplyIdentityJoinRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ApplyIdentityJoinRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ApplyIdentityJoinRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ApplyIdentityJoinRequest.Merge(m, src)
}
func (m *ApplyIdentityJoinRequest) XXX_Size() int {
	return m.Size()
}
func (m *ApplyIdentityJoinRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ApplyIdentityJoinRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ApplyIdentityJoinRequest proto.InternalMessageInfo

func (m *ApplyIdentityJoinRequest) GetMember() *common.Organization {
	if m != nil {
		return m.Member
	}
	return nil
}

// 查询自己组织的identity信息 resp
type GetNodeIdentityResponse struct {
	Status               int32                `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Msg                  string               `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Owner                *common.Organization `protobuf:"bytes,3,opt,name=owner,proto3" json:"owner,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *GetNodeIdentityResponse) Reset()         { *m = GetNodeIdentityResponse{} }
func (m *GetNodeIdentityResponse) String() string { return proto.CompactTextString(m) }
func (*GetNodeIdentityResponse) ProtoMessage()    {}
func (*GetNodeIdentityResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_27592dd1452c836c, []int{1}
}
func (m *GetNodeIdentityResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GetNodeIdentityResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GetNodeIdentityResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GetNodeIdentityResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetNodeIdentityResponse.Merge(m, src)
}
func (m *GetNodeIdentityResponse) XXX_Size() int {
	return m.Size()
}
func (m *GetNodeIdentityResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetNodeIdentityResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetNodeIdentityResponse proto.InternalMessageInfo

func (m *GetNodeIdentityResponse) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *GetNodeIdentityResponse) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

func (m *GetNodeIdentityResponse) GetOwner() *common.Organization {
	if m != nil {
		return m.Owner
	}
	return nil
}

// 查询全网组织的身份信息列表(已入网的) resp
type GetIdentityListResponse struct {
	Status               int32                  `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Msg                  string                 `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	MemberList           []*common.Organization `protobuf:"bytes,3,rep,name=member_list,json=memberList,proto3" json:"member_list,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *GetIdentityListResponse) Reset()         { *m = GetIdentityListResponse{} }
func (m *GetIdentityListResponse) String() string { return proto.CompactTextString(m) }
func (*GetIdentityListResponse) ProtoMessage()    {}
func (*GetIdentityListResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_27592dd1452c836c, []int{2}
}
func (m *GetIdentityListResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GetIdentityListResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GetIdentityListResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GetIdentityListResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetIdentityListResponse.Merge(m, src)
}
func (m *GetIdentityListResponse) XXX_Size() int {
	return m.Size()
}
func (m *GetIdentityListResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetIdentityListResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetIdentityListResponse proto.InternalMessageInfo

func (m *GetIdentityListResponse) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *GetIdentityListResponse) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

func (m *GetIdentityListResponse) GetMemberList() []*common.Organization {
	if m != nil {
		return m.MemberList
	}
	return nil
}

// 用户对元数据使用授权申请 req
type ApplyMetaDataAuthorityRequest struct {
	User                 string                   `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	UserType             common.UserType          `protobuf:"varint,2,opt,name=user_type,json=userType,proto3,enum=api.protobuf.UserType" json:"user_type,omitempty"`
	Auth                 *types.MetaDataAuthority `protobuf:"bytes,3,opt,name=auth,proto3" json:"auth,omitempty"`
	Sign                 []byte                   `protobuf:"bytes,4,opt,name=sign,proto3" json:"sign,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *ApplyMetaDataAuthorityRequest) Reset()         { *m = ApplyMetaDataAuthorityRequest{} }
func (m *ApplyMetaDataAuthorityRequest) String() string { return proto.CompactTextString(m) }
func (*ApplyMetaDataAuthorityRequest) ProtoMessage()    {}
func (*ApplyMetaDataAuthorityRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_27592dd1452c836c, []int{3}
}
func (m *ApplyMetaDataAuthorityRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ApplyMetaDataAuthorityRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ApplyMetaDataAuthorityRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ApplyMetaDataAuthorityRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ApplyMetaDataAuthorityRequest.Merge(m, src)
}
func (m *ApplyMetaDataAuthorityRequest) XXX_Size() int {
	return m.Size()
}
func (m *ApplyMetaDataAuthorityRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ApplyMetaDataAuthorityRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ApplyMetaDataAuthorityRequest proto.InternalMessageInfo

func (m *ApplyMetaDataAuthorityRequest) GetUser() string {
	if m != nil {
		return m.User
	}
	return ""
}

func (m *ApplyMetaDataAuthorityRequest) GetUserType() common.UserType {
	if m != nil {
		return m.UserType
	}
	return common.UserType_User_Unknown
}

func (m *ApplyMetaDataAuthorityRequest) GetAuth() *types.MetaDataAuthority {
	if m != nil {
		return m.Auth
	}
	return nil
}

func (m *ApplyMetaDataAuthorityRequest) GetSign() []byte {
	if m != nil {
		return m.Sign
	}
	return nil
}

// 用户对元数据使用授权申请 resp
type ApplyMetaDataAuthorityResponse struct {
	Status               int32    `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Msg                  string   `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	MetaDataAuthId       string   `protobuf:"bytes,3,opt,name=meta_data_auth_id,json=metaDataAuthId,proto3" json:"meta_data_auth_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ApplyMetaDataAuthorityResponse) Reset()         { *m = ApplyMetaDataAuthorityResponse{} }
func (m *ApplyMetaDataAuthorityResponse) String() string { return proto.CompactTextString(m) }
func (*ApplyMetaDataAuthorityResponse) ProtoMessage()    {}
func (*ApplyMetaDataAuthorityResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_27592dd1452c836c, []int{4}
}
func (m *ApplyMetaDataAuthorityResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ApplyMetaDataAuthorityResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ApplyMetaDataAuthorityResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ApplyMetaDataAuthorityResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ApplyMetaDataAuthorityResponse.Merge(m, src)
}
func (m *ApplyMetaDataAuthorityResponse) XXX_Size() int {
	return m.Size()
}
func (m *ApplyMetaDataAuthorityResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ApplyMetaDataAuthorityResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ApplyMetaDataAuthorityResponse proto.InternalMessageInfo

func (m *ApplyMetaDataAuthorityResponse) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *ApplyMetaDataAuthorityResponse) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

func (m *ApplyMetaDataAuthorityResponse) GetMetaDataAuthId() string {
	if m != nil {
		return m.MetaDataAuthId
	}
	return ""
}

// 组织对用户的数据授权申请做审核 req
type AuditMetaDataAuthorityRequest struct {
	MetaDataAuthId       string                     `protobuf:"bytes,1,opt,name=meta_data_auth_id,json=metaDataAuthId,proto3" json:"meta_data_auth_id,omitempty"`
	Audit                common.AuditMetaDataOption `protobuf:"varint,2,opt,name=audit,proto3,enum=api.protobuf.AuditMetaDataOption" json:"audit,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                   `json:"-"`
	XXX_unrecognized     []byte                     `json:"-"`
	XXX_sizecache        int32                      `json:"-"`
}

func (m *AuditMetaDataAuthorityRequest) Reset()         { *m = AuditMetaDataAuthorityRequest{} }
func (m *AuditMetaDataAuthorityRequest) String() string { return proto.CompactTextString(m) }
func (*AuditMetaDataAuthorityRequest) ProtoMessage()    {}
func (*AuditMetaDataAuthorityRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_27592dd1452c836c, []int{5}
}
func (m *AuditMetaDataAuthorityRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *AuditMetaDataAuthorityRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_AuditMetaDataAuthorityRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *AuditMetaDataAuthorityRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AuditMetaDataAuthorityRequest.Merge(m, src)
}
func (m *AuditMetaDataAuthorityRequest) XXX_Size() int {
	return m.Size()
}
func (m *AuditMetaDataAuthorityRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AuditMetaDataAuthorityRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AuditMetaDataAuthorityRequest proto.InternalMessageInfo

func (m *AuditMetaDataAuthorityRequest) GetMetaDataAuthId() string {
	if m != nil {
		return m.MetaDataAuthId
	}
	return ""
}

func (m *AuditMetaDataAuthorityRequest) GetAudit() common.AuditMetaDataOption {
	if m != nil {
		return m.Audit
	}
	return common.AuditMetaDataOption_Audit_Pending
}

// 组织对用户的数据授权申请做审核 resp
type AuditMetaDataAuthorityResponse struct {
	// the code for response
	Status int32 `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	// the message for response
	Msg                  string                     `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Audit                common.AuditMetaDataOption `protobuf:"varint,3,opt,name=audit,proto3,enum=api.protobuf.AuditMetaDataOption" json:"audit,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                   `json:"-"`
	XXX_unrecognized     []byte                     `json:"-"`
	XXX_sizecache        int32                      `json:"-"`
}

func (m *AuditMetaDataAuthorityResponse) Reset()         { *m = AuditMetaDataAuthorityResponse{} }
func (m *AuditMetaDataAuthorityResponse) String() string { return proto.CompactTextString(m) }
func (*AuditMetaDataAuthorityResponse) ProtoMessage()    {}
func (*AuditMetaDataAuthorityResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_27592dd1452c836c, []int{6}
}
func (m *AuditMetaDataAuthorityResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *AuditMetaDataAuthorityResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_AuditMetaDataAuthorityResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *AuditMetaDataAuthorityResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AuditMetaDataAuthorityResponse.Merge(m, src)
}
func (m *AuditMetaDataAuthorityResponse) XXX_Size() int {
	return m.Size()
}
func (m *AuditMetaDataAuthorityResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AuditMetaDataAuthorityResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AuditMetaDataAuthorityResponse proto.InternalMessageInfo

func (m *AuditMetaDataAuthorityResponse) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *AuditMetaDataAuthorityResponse) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

func (m *AuditMetaDataAuthorityResponse) GetAudit() common.AuditMetaDataOption {
	if m != nil {
		return m.Audit
	}
	return common.AuditMetaDataOption_Audit_Pending
}

// 当前组织的某个用户对单个元数据的授权申请及审核结果详情
type GetMetaDataAuthority struct {
	MetaDataAuthId       string                     `protobuf:"bytes,1,opt,name=meta_data_auth_id,json=metaDataAuthId,proto3" json:"meta_data_auth_id,omitempty"`
	User                 string                     `protobuf:"bytes,2,opt,name=user,proto3" json:"user,omitempty"`
	UserType             common.UserType            `protobuf:"varint,3,opt,name=user_type,json=userType,proto3,enum=api.protobuf.UserType" json:"user_type,omitempty"`
	Auth                 *types.MetaDataAuthority   `protobuf:"bytes,4,opt,name=auth,proto3" json:"auth,omitempty"`
	Audit                common.AuditMetaDataOption `protobuf:"varint,5,opt,name=audit,proto3,enum=api.protobuf.AuditMetaDataOption" json:"audit,omitempty"`
	ApplyAt              uint64                     `protobuf:"varint,6,opt,name=apply_at,json=applyAt,proto3" json:"apply_at,omitempty"`
	AuditAt              uint64                     `protobuf:"varint,7,opt,name=audit_at,json=auditAt,proto3" json:"audit_at,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                   `json:"-"`
	XXX_unrecognized     []byte                     `json:"-"`
	XXX_sizecache        int32                      `json:"-"`
}

func (m *GetMetaDataAuthority) Reset()         { *m = GetMetaDataAuthority{} }
func (m *GetMetaDataAuthority) String() string { return proto.CompactTextString(m) }
func (*GetMetaDataAuthority) ProtoMessage()    {}
func (*GetMetaDataAuthority) Descriptor() ([]byte, []int) {
	return fileDescriptor_27592dd1452c836c, []int{7}
}
func (m *GetMetaDataAuthority) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GetMetaDataAuthority) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GetMetaDataAuthority.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GetMetaDataAuthority) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetMetaDataAuthority.Merge(m, src)
}
func (m *GetMetaDataAuthority) XXX_Size() int {
	return m.Size()
}
func (m *GetMetaDataAuthority) XXX_DiscardUnknown() {
	xxx_messageInfo_GetMetaDataAuthority.DiscardUnknown(m)
}

var xxx_messageInfo_GetMetaDataAuthority proto.InternalMessageInfo

func (m *GetMetaDataAuthority) GetMetaDataAuthId() string {
	if m != nil {
		return m.MetaDataAuthId
	}
	return ""
}

func (m *GetMetaDataAuthority) GetUser() string {
	if m != nil {
		return m.User
	}
	return ""
}

func (m *GetMetaDataAuthority) GetUserType() common.UserType {
	if m != nil {
		return m.UserType
	}
	return common.UserType_User_Unknown
}

func (m *GetMetaDataAuthority) GetAuth() *types.MetaDataAuthority {
	if m != nil {
		return m.Auth
	}
	return nil
}

func (m *GetMetaDataAuthority) GetAudit() common.AuditMetaDataOption {
	if m != nil {
		return m.Audit
	}
	return common.AuditMetaDataOption_Audit_Pending
}

func (m *GetMetaDataAuthority) GetApplyAt() uint64 {
	if m != nil {
		return m.ApplyAt
	}
	return 0
}

func (m *GetMetaDataAuthority) GetAuditAt() uint64 {
	if m != nil {
		return m.AuditAt
	}
	return 0
}

// 当前组织的所有元数据的授权申请及审核结果详情列表 resp
type GetMetaDataAuthorityListResponse struct {
	Status               int32                   `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Msg                  string                  `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	List                 []*GetMetaDataAuthority `protobuf:"bytes,3,rep,name=list,proto3" json:"list,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *GetMetaDataAuthorityListResponse) Reset()         { *m = GetMetaDataAuthorityListResponse{} }
func (m *GetMetaDataAuthorityListResponse) String() string { return proto.CompactTextString(m) }
func (*GetMetaDataAuthorityListResponse) ProtoMessage()    {}
func (*GetMetaDataAuthorityListResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_27592dd1452c836c, []int{8}
}
func (m *GetMetaDataAuthorityListResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GetMetaDataAuthorityListResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GetMetaDataAuthorityListResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GetMetaDataAuthorityListResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetMetaDataAuthorityListResponse.Merge(m, src)
}
func (m *GetMetaDataAuthorityListResponse) XXX_Size() int {
	return m.Size()
}
func (m *GetMetaDataAuthorityListResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetMetaDataAuthorityListResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetMetaDataAuthorityListResponse proto.InternalMessageInfo

func (m *GetMetaDataAuthorityListResponse) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *GetMetaDataAuthorityListResponse) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

func (m *GetMetaDataAuthorityListResponse) GetList() []*GetMetaDataAuthority {
	if m != nil {
		return m.List
	}
	return nil
}

func init() {
	proto.RegisterType((*ApplyIdentityJoinRequest)(nil), "rpcapi.ApplyIdentityJoinRequest")
	proto.RegisterType((*GetNodeIdentityResponse)(nil), "rpcapi.GetNodeIdentityResponse")
	proto.RegisterType((*GetIdentityListResponse)(nil), "rpcapi.GetIdentityListResponse")
	proto.RegisterType((*ApplyMetaDataAuthorityRequest)(nil), "rpcapi.ApplyMetaDataAuthorityRequest")
	proto.RegisterType((*ApplyMetaDataAuthorityResponse)(nil), "rpcapi.ApplyMetaDataAuthorityResponse")
	proto.RegisterType((*AuditMetaDataAuthorityRequest)(nil), "rpcapi.AuditMetaDataAuthorityRequest")
	proto.RegisterType((*AuditMetaDataAuthorityResponse)(nil), "rpcapi.AuditMetaDataAuthorityResponse")
	proto.RegisterType((*GetMetaDataAuthority)(nil), "rpcapi.GetMetaDataAuthority")
	proto.RegisterType((*GetMetaDataAuthorityListResponse)(nil), "rpcapi.GetMetaDataAuthorityListResponse")
}

func init() { proto.RegisterFile("lib/api/auth_rpc_api.proto", fileDescriptor_27592dd1452c836c) }

var fileDescriptor_27592dd1452c836c = []byte{
	// 834 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x96, 0x4d, 0x4f, 0x13, 0x41,
	0x18, 0xc7, 0xb3, 0x7d, 0x83, 0x0e, 0x06, 0x65, 0xa2, 0x75, 0xad, 0xa5, 0x94, 0x51, 0xa1, 0x10,
	0xd8, 0xc5, 0x72, 0x20, 0xc1, 0x53, 0x7d, 0x23, 0x18, 0x85, 0x64, 0xd1, 0x8b, 0x97, 0x66, 0xda,
	0x0e, 0x65, 0x62, 0x77, 0x67, 0xdd, 0x99, 0x2d, 0xa9, 0x07, 0x62, 0xf4, 0xe6, 0xd5, 0xc4, 0xaf,
	0x60, 0xe2, 0xc5, 0xaf, 0xe1, 0xd1, 0xc4, 0x2f, 0x60, 0x88, 0x1f, 0xc4, 0xcc, 0xec, 0xb6, 0x6c,
	0xe9, 0xb6, 0x50, 0x4e, 0xec, 0xf4, 0x79, 0xf6, 0xf9, 0xfd, 0xe7, 0x99, 0xff, 0xec, 0x03, 0xc8,
	0xb7, 0x69, 0xdd, 0xc4, 0x2e, 0x35, 0xb1, 0x2f, 0x8e, 0x6a, 0x9e, 0xdb, 0xa8, 0x61, 0x97, 0x1a,
	0xae, 0xc7, 0x04, 0x83, 0x19, 0xcf, 0x6d, 0x60, 0x97, 0xe6, 0x6f, 0xc9, 0x9c, 0x06, 0xb3, 0x6d,
	0xe6, 0x98, 0x75, 0xcc, 0x49, 0x10, 0xce, 0x17, 0xe4, 0xcf, 0xa2, 0xeb, 0x12, 0x6e, 0xd2, 0x26,
	0x71, 0x04, 0x15, 0xdd, 0x26, 0x16, 0x38, 0x8c, 0xea, 0x67, 0x51, 0x9b, 0x08, 0x1c, 0x89, 0x14,
	0x5a, 0x8c, 0xb5, 0xda, 0x24, 0xa0, 0x3a, 0x0e, 0x13, 0x58, 0x50, 0xe6, 0xf0, 0x30, 0x7a, 0x37,
	0x8c, 0xaa, 0x55, 0xdd, 0x3f, 0x34, 0x89, 0xed, 0x8a, 0x6e, 0x10, 0x44, 0x7b, 0x40, 0xaf, 0xba,
	0x6e, 0xbb, 0xbb, 0x1b, 0xf2, 0x5e, 0x30, 0xea, 0x58, 0xe4, 0xbd, 0x4f, 0xb8, 0x80, 0x15, 0x90,
	0xb1, 0x89, 0x5d, 0x27, 0x9e, 0xae, 0x95, 0xb4, 0xf2, 0x4c, 0x25, 0x6f, 0xf4, 0x77, 0x52, 0xf7,
	0x0f, 0x8d, 0x7d, 0xaf, 0x85, 0x1d, 0xfa, 0x41, 0xb1, 0xac, 0x30, 0x13, 0xf9, 0xe0, 0xf6, 0x0e,
	0x11, 0x7b, 0xac, 0x49, 0x7a, 0x15, 0x2d, 0xc2, 0x5d, 0xe6, 0x70, 0x02, 0x73, 0x20, 0xc3, 0x05,
	0x16, 0x3e, 0x57, 0xe5, 0xd2, 0x56, 0xb8, 0x82, 0x37, 0x40, 0xd2, 0xe6, 0x2d, 0x3d, 0x51, 0xd2,
	0xca, 0x59, 0x4b, 0x3e, 0xc2, 0x0d, 0x90, 0x66, 0xc7, 0x0e, 0xf1, 0xf4, 0xe4, 0x85, 0xdc, 0x20,
	0x11, 0x7d, 0xd4, 0x14, 0xb7, 0xc7, 0x7c, 0x49, 0xb9, 0xb8, 0x02, 0xf7, 0x11, 0x98, 0x09, 0xb6,
	0x51, 0x6b, 0x53, 0x2e, 0xf4, 0x64, 0x29, 0x79, 0x01, 0x1d, 0x04, 0xe9, 0x12, 0x87, 0x7e, 0x68,
	0x60, 0x5e, 0xb5, 0xf2, 0x15, 0x11, 0xf8, 0x29, 0x16, 0xb8, 0xea, 0x8b, 0x23, 0xe6, 0xa9, 0x0e,
	0x04, 0xfd, 0x84, 0x20, 0xe5, 0xf3, 0xb0, 0x9b, 0x59, 0x4b, 0x3d, 0xc3, 0x4d, 0x90, 0x95, 0x7f,
	0x6b, 0xf2, 0x5c, 0x95, 0x94, 0xd9, 0x4a, 0x6e, 0x10, 0xf8, 0x86, 0x13, 0xef, 0x75, 0xd7, 0x25,
	0xd6, 0xb4, 0x1f, 0x3e, 0xc1, 0x35, 0x90, 0x92, 0xe6, 0x0a, 0xdb, 0xa3, 0x1b, 0xca, 0x14, 0xc6,
	0x30, 0x57, 0x65, 0x49, 0x2c, 0xa7, 0x2d, 0x47, 0x4f, 0x95, 0xb4, 0xf2, 0x35, 0x4b, 0x3d, 0x23,
	0x1f, 0x14, 0x47, 0x69, 0x9d, 0xb8, 0x6b, 0x2b, 0x60, 0x4e, 0xfa, 0xb1, 0x26, 0x0d, 0x59, 0x53,
	0xa6, 0xa7, 0x4d, 0x25, 0x2d, 0x6b, 0xcd, 0xda, 0x91, 0xfa, 0xbb, 0x4d, 0xf4, 0x59, 0xf6, 0xc8,
	0x6f, 0x52, 0x31, 0xb2, 0x47, 0xb1, 0xc5, 0xb4, 0xb8, 0x62, 0x70, 0x0b, 0xa4, 0xb1, 0xac, 0x15,
	0xb6, 0x6d, 0x71, 0xb0, 0x6d, 0x03, 0x98, 0x7d, 0x37, 0x30, 0x8b, 0xca, 0x97, 0x2a, 0x8a, 0xa3,
	0x54, 0x4c, 0xbc, 0xfb, 0xbe, 0x8a, 0xe4, 0x84, 0x2a, 0xbe, 0x27, 0xc0, 0xcd, 0x1d, 0x32, 0xac,
	0x61, 0x92, 0x16, 0xf4, 0x1c, 0x95, 0x18, 0xe5, 0xa8, 0xe4, 0x84, 0x8e, 0x4a, 0x5d, 0xca, 0x51,
	0xfd, 0x3d, 0xa7, 0x27, 0xdb, 0x33, 0xbc, 0x03, 0xa6, 0xb1, 0xb4, 0x5d, 0x0d, 0x0b, 0x3d, 0x53,
	0xd2, 0xca, 0x29, 0x6b, 0x4a, 0xad, 0xab, 0x41, 0x48, 0xe6, 0xc8, 0xd0, 0x54, 0x18, 0x92, 0xeb,
	0xaa, 0x40, 0x27, 0xa0, 0x14, 0xd7, 0xa8, 0x2b, 0x5e, 0xf2, 0x0d, 0x90, 0x8a, 0xdc, 0xee, 0x82,
	0x11, 0x7c, 0x92, 0x8d, 0x38, 0x82, 0xa5, 0x32, 0x2b, 0x3f, 0xa7, 0xc0, 0x8c, 0xfc, 0xed, 0x80,
	0x78, 0x1d, 0xda, 0x20, 0xf0, 0x9b, 0x06, 0x72, 0xf1, 0xb7, 0x07, 0x3e, 0xe8, 0x95, 0x1b, 0xfb,
	0x25, 0xc8, 0x2f, 0x5d, 0x94, 0x16, 0xec, 0x0a, 0xad, 0x7f, 0xfa, 0xf3, 0xef, 0x6b, 0x62, 0x19,
	0x21, 0xb3, 0x81, 0x3d, 0x8f, 0x12, 0xcf, 0xec, 0x3c, 0x54, 0x73, 0xc5, 0xc4, 0xe7, 0x5f, 0xdc,
	0xd6, 0x56, 0x03, 0x61, 0xb1, 0xc6, 0x8e, 0x08, 0x1b, 0x77, 0xfd, 0x22, 0xc2, 0xc6, 0xde, 0x8f,
	0x71, 0xc2, 0xce, 0xbf, 0x28, 0x85, 0x7d, 0xd1, 0x80, 0x3e, 0xea, 0x08, 0x61, 0xce, 0x08, 0x06,
	0xd4, 0x99, 0x83, 0x9e, 0xc9, 0x01, 0x95, 0x2f, 0x8f, 0x3b, 0x9a, 0xe8, 0xe1, 0xa3, 0x35, 0xa5,
	0x66, 0x09, 0x2d, 0x0e, 0xa9, 0x89, 0xde, 0x17, 0xf9, 0x8a, 0x14, 0x73, 0x02, 0xe6, 0x86, 0x46,
	0x1e, 0x2c, 0x0d, 0x9c, 0x48, 0xcc, 0x34, 0xcc, 0x17, 0x06, 0x5d, 0x7e, 0x40, 0x6d, 0xb7, 0x4d,
	0xfa, 0x12, 0x56, 0x94, 0x84, 0x7b, 0xa8, 0x18, 0x7f, 0x52, 0xbd, 0x82, 0x92, 0xdf, 0x01, 0xd0,
	0x22, 0x1d, 0xf6, 0x8e, 0x0c, 0x08, 0x18, 0xd5, 0x85, 0xf1, 0xd8, 0x55, 0x85, 0xbd, 0x8f, 0x16,
	0x86, 0xb0, 0xde, 0x00, 0x42, 0x72, 0x39, 0xb8, 0x7e, 0x6e, 0x34, 0x8f, 0x84, 0x2e, 0x44, 0x5a,
	0x1f, 0x37, 0xcb, 0xd1, 0xb2, 0xe2, 0x2e, 0xa2, 0xc2, 0x10, 0xb7, 0x75, 0x36, 0x85, 0x25, 0x54,
	0x28, 0x68, 0x74, 0x2e, 0x5f, 0x0a, 0x1a, 0x37, 0xc8, 0x51, 0x59, 0x41, 0x11, 0x9a, 0x1f, 0x82,
	0xd2, 0x48, 0xfa, 0xb6, 0xb6, 0xfa, 0x78, 0xeb, 0xd7, 0x69, 0x51, 0xfb, 0x7d, 0x5a, 0xd4, 0xfe,
	0x9e, 0x16, 0xb5, 0xb7, 0x2b, 0x2d, 0x2a, 0x8e, 0xfc, 0xba, 0xd1, 0x60, 0xb6, 0x69, 0x31, 0x4e,
	0x84, 0xc0, 0xcf, 0xdb, 0xec, 0xd8, 0x7c, 0x12, 0x54, 0x59, 0xdf, 0x61, 0x66, 0xf8, 0x3f, 0x5b,
	0x3d, 0xa3, 0x34, 0x6d, 0xfe, 0x0f, 0x00, 0x00, 0xff, 0xff, 0x2b, 0x1b, 0x09, 0xec, 0xc5, 0x09,
	0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// AuthServiceClient is the client API for AuthService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type AuthServiceClient interface {
	// 数据授权申请
	ApplyMetaDataAuthority(ctx context.Context, in *ApplyMetaDataAuthorityRequest, opts ...grpc.CallOption) (*ApplyMetaDataAuthorityResponse, error)
	// 数据授权审核
	AuditMetaDataAuthority(ctx context.Context, in *AuditMetaDataAuthorityRequest, opts ...grpc.CallOption) (*AuditMetaDataAuthorityResponse, error)
	// 获取数据授权申请列表
	GetMetaDataAuthorityList(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*GetMetaDataAuthorityListResponse, error)
	// 组织身份入网申请
	ApplyIdentityJoin(ctx context.Context, in *ApplyIdentityJoinRequest, opts ...grpc.CallOption) (*common.SimpleResponse, error)
	// 注销准入网络
	RevokeIdentityJoin(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*common.SimpleResponse, error)
	// 查询自己组织的identity信息
	GetNodeIdentity(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*GetNodeIdentityResponse, error)
	// 查询全网组织的身份信息列表(已入网的)
	GetIdentityList(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*GetIdentityListResponse, error)
}

type authServiceClient struct {
	cc *grpc.ClientConn
}

func NewAuthServiceClient(cc *grpc.ClientConn) AuthServiceClient {
	return &authServiceClient{cc}
}

func (c *authServiceClient) ApplyMetaDataAuthority(ctx context.Context, in *ApplyMetaDataAuthorityRequest, opts ...grpc.CallOption) (*ApplyMetaDataAuthorityResponse, error) {
	out := new(ApplyMetaDataAuthorityResponse)
	err := c.cc.Invoke(ctx, "/rpcapi.AuthService/ApplyMetaDataAuthority", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authServiceClient) AuditMetaDataAuthority(ctx context.Context, in *AuditMetaDataAuthorityRequest, opts ...grpc.CallOption) (*AuditMetaDataAuthorityResponse, error) {
	out := new(AuditMetaDataAuthorityResponse)
	err := c.cc.Invoke(ctx, "/rpcapi.AuthService/AuditMetaDataAuthority", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authServiceClient) GetMetaDataAuthorityList(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*GetMetaDataAuthorityListResponse, error) {
	out := new(GetMetaDataAuthorityListResponse)
	err := c.cc.Invoke(ctx, "/rpcapi.AuthService/GetMetaDataAuthorityList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authServiceClient) ApplyIdentityJoin(ctx context.Context, in *ApplyIdentityJoinRequest, opts ...grpc.CallOption) (*common.SimpleResponse, error) {
	out := new(common.SimpleResponse)
	err := c.cc.Invoke(ctx, "/rpcapi.AuthService/ApplyIdentityJoin", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authServiceClient) RevokeIdentityJoin(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*common.SimpleResponse, error) {
	out := new(common.SimpleResponse)
	err := c.cc.Invoke(ctx, "/rpcapi.AuthService/RevokeIdentityJoin", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authServiceClient) GetNodeIdentity(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*GetNodeIdentityResponse, error) {
	out := new(GetNodeIdentityResponse)
	err := c.cc.Invoke(ctx, "/rpcapi.AuthService/GetNodeIdentity", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authServiceClient) GetIdentityList(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*GetIdentityListResponse, error) {
	out := new(GetIdentityListResponse)
	err := c.cc.Invoke(ctx, "/rpcapi.AuthService/GetIdentityList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// AuthServiceServer is the server API for AuthService service.
type AuthServiceServer interface {
	// 数据授权申请
	ApplyMetaDataAuthority(context.Context, *ApplyMetaDataAuthorityRequest) (*ApplyMetaDataAuthorityResponse, error)
	// 数据授权审核
	AuditMetaDataAuthority(context.Context, *AuditMetaDataAuthorityRequest) (*AuditMetaDataAuthorityResponse, error)
	// 获取数据授权申请列表
	GetMetaDataAuthorityList(context.Context, *empty.Empty) (*GetMetaDataAuthorityListResponse, error)
	// 组织身份入网申请
	ApplyIdentityJoin(context.Context, *ApplyIdentityJoinRequest) (*common.SimpleResponse, error)
	// 注销准入网络
	RevokeIdentityJoin(context.Context, *empty.Empty) (*common.SimpleResponse, error)
	// 查询自己组织的identity信息
	GetNodeIdentity(context.Context, *empty.Empty) (*GetNodeIdentityResponse, error)
	// 查询全网组织的身份信息列表(已入网的)
	GetIdentityList(context.Context, *empty.Empty) (*GetIdentityListResponse, error)
}

// UnimplementedAuthServiceServer can be embedded to have forward compatible implementations.
type UnimplementedAuthServiceServer struct {
}

func (*UnimplementedAuthServiceServer) ApplyMetaDataAuthority(ctx context.Context, req *ApplyMetaDataAuthorityRequest) (*ApplyMetaDataAuthorityResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ApplyMetaDataAuthority not implemented")
}
func (*UnimplementedAuthServiceServer) AuditMetaDataAuthority(ctx context.Context, req *AuditMetaDataAuthorityRequest) (*AuditMetaDataAuthorityResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AuditMetaDataAuthority not implemented")
}
func (*UnimplementedAuthServiceServer) GetMetaDataAuthorityList(ctx context.Context, req *empty.Empty) (*GetMetaDataAuthorityListResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetMetaDataAuthorityList not implemented")
}
func (*UnimplementedAuthServiceServer) ApplyIdentityJoin(ctx context.Context, req *ApplyIdentityJoinRequest) (*common.SimpleResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ApplyIdentityJoin not implemented")
}
func (*UnimplementedAuthServiceServer) RevokeIdentityJoin(ctx context.Context, req *empty.Empty) (*common.SimpleResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RevokeIdentityJoin not implemented")
}
func (*UnimplementedAuthServiceServer) GetNodeIdentity(ctx context.Context, req *empty.Empty) (*GetNodeIdentityResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetNodeIdentity not implemented")
}
func (*UnimplementedAuthServiceServer) GetIdentityList(ctx context.Context, req *empty.Empty) (*GetIdentityListResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetIdentityList not implemented")
}

func RegisterAuthServiceServer(s *grpc.Server, srv AuthServiceServer) {
	s.RegisterService(&_AuthService_serviceDesc, srv)
}

func _AuthService_ApplyMetaDataAuthority_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ApplyMetaDataAuthorityRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthServiceServer).ApplyMetaDataAuthority(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpcapi.AuthService/ApplyMetaDataAuthority",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthServiceServer).ApplyMetaDataAuthority(ctx, req.(*ApplyMetaDataAuthorityRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AuthService_AuditMetaDataAuthority_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AuditMetaDataAuthorityRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthServiceServer).AuditMetaDataAuthority(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpcapi.AuthService/AuditMetaDataAuthority",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthServiceServer).AuditMetaDataAuthority(ctx, req.(*AuditMetaDataAuthorityRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AuthService_GetMetaDataAuthorityList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthServiceServer).GetMetaDataAuthorityList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpcapi.AuthService/GetMetaDataAuthorityList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthServiceServer).GetMetaDataAuthorityList(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _AuthService_ApplyIdentityJoin_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ApplyIdentityJoinRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthServiceServer).ApplyIdentityJoin(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpcapi.AuthService/ApplyIdentityJoin",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthServiceServer).ApplyIdentityJoin(ctx, req.(*ApplyIdentityJoinRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AuthService_RevokeIdentityJoin_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthServiceServer).RevokeIdentityJoin(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpcapi.AuthService/RevokeIdentityJoin",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthServiceServer).RevokeIdentityJoin(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _AuthService_GetNodeIdentity_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthServiceServer).GetNodeIdentity(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpcapi.AuthService/GetNodeIdentity",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthServiceServer).GetNodeIdentity(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _AuthService_GetIdentityList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthServiceServer).GetIdentityList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpcapi.AuthService/GetIdentityList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthServiceServer).GetIdentityList(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

var _AuthService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "rpcapi.AuthService",
	HandlerType: (*AuthServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ApplyMetaDataAuthority",
			Handler:    _AuthService_ApplyMetaDataAuthority_Handler,
		},
		{
			MethodName: "AuditMetaDataAuthority",
			Handler:    _AuthService_AuditMetaDataAuthority_Handler,
		},
		{
			MethodName: "GetMetaDataAuthorityList",
			Handler:    _AuthService_GetMetaDataAuthorityList_Handler,
		},
		{
			MethodName: "ApplyIdentityJoin",
			Handler:    _AuthService_ApplyIdentityJoin_Handler,
		},
		{
			MethodName: "RevokeIdentityJoin",
			Handler:    _AuthService_RevokeIdentityJoin_Handler,
		},
		{
			MethodName: "GetNodeIdentity",
			Handler:    _AuthService_GetNodeIdentity_Handler,
		},
		{
			MethodName: "GetIdentityList",
			Handler:    _AuthService_GetIdentityList_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "lib/api/auth_rpc_api.proto",
}

func (m *ApplyIdentityJoinRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ApplyIdentityJoinRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ApplyIdentityJoinRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Member != nil {
		{
			size, err := m.Member.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintAuthRpcApi(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *GetNodeIdentityResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetNodeIdentityResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GetNodeIdentityResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Owner != nil {
		{
			size, err := m.Owner.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintAuthRpcApi(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Msg) > 0 {
		i -= len(m.Msg)
		copy(dAtA[i:], m.Msg)
		i = encodeVarintAuthRpcApi(dAtA, i, uint64(len(m.Msg)))
		i--
		dAtA[i] = 0x12
	}
	if m.Status != 0 {
		i = encodeVarintAuthRpcApi(dAtA, i, uint64(m.Status))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *GetIdentityListResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetIdentityListResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GetIdentityListResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.MemberList) > 0 {
		for iNdEx := len(m.MemberList) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.MemberList[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintAuthRpcApi(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x1a
		}
	}
	if len(m.Msg) > 0 {
		i -= len(m.Msg)
		copy(dAtA[i:], m.Msg)
		i = encodeVarintAuthRpcApi(dAtA, i, uint64(len(m.Msg)))
		i--
		dAtA[i] = 0x12
	}
	if m.Status != 0 {
		i = encodeVarintAuthRpcApi(dAtA, i, uint64(m.Status))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *ApplyMetaDataAuthorityRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ApplyMetaDataAuthorityRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ApplyMetaDataAuthorityRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Sign) > 0 {
		i -= len(m.Sign)
		copy(dAtA[i:], m.Sign)
		i = encodeVarintAuthRpcApi(dAtA, i, uint64(len(m.Sign)))
		i--
		dAtA[i] = 0x22
	}
	if m.Auth != nil {
		{
			size, err := m.Auth.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintAuthRpcApi(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if m.UserType != 0 {
		i = encodeVarintAuthRpcApi(dAtA, i, uint64(m.UserType))
		i--
		dAtA[i] = 0x10
	}
	if len(m.User) > 0 {
		i -= len(m.User)
		copy(dAtA[i:], m.User)
		i = encodeVarintAuthRpcApi(dAtA, i, uint64(len(m.User)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *ApplyMetaDataAuthorityResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ApplyMetaDataAuthorityResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ApplyMetaDataAuthorityResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.MetaDataAuthId) > 0 {
		i -= len(m.MetaDataAuthId)
		copy(dAtA[i:], m.MetaDataAuthId)
		i = encodeVarintAuthRpcApi(dAtA, i, uint64(len(m.MetaDataAuthId)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Msg) > 0 {
		i -= len(m.Msg)
		copy(dAtA[i:], m.Msg)
		i = encodeVarintAuthRpcApi(dAtA, i, uint64(len(m.Msg)))
		i--
		dAtA[i] = 0x12
	}
	if m.Status != 0 {
		i = encodeVarintAuthRpcApi(dAtA, i, uint64(m.Status))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *AuditMetaDataAuthorityRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *AuditMetaDataAuthorityRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *AuditMetaDataAuthorityRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Audit != 0 {
		i = encodeVarintAuthRpcApi(dAtA, i, uint64(m.Audit))
		i--
		dAtA[i] = 0x10
	}
	if len(m.MetaDataAuthId) > 0 {
		i -= len(m.MetaDataAuthId)
		copy(dAtA[i:], m.MetaDataAuthId)
		i = encodeVarintAuthRpcApi(dAtA, i, uint64(len(m.MetaDataAuthId)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *AuditMetaDataAuthorityResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *AuditMetaDataAuthorityResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *AuditMetaDataAuthorityResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Audit != 0 {
		i = encodeVarintAuthRpcApi(dAtA, i, uint64(m.Audit))
		i--
		dAtA[i] = 0x18
	}
	if len(m.Msg) > 0 {
		i -= len(m.Msg)
		copy(dAtA[i:], m.Msg)
		i = encodeVarintAuthRpcApi(dAtA, i, uint64(len(m.Msg)))
		i--
		dAtA[i] = 0x12
	}
	if m.Status != 0 {
		i = encodeVarintAuthRpcApi(dAtA, i, uint64(m.Status))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *GetMetaDataAuthority) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetMetaDataAuthority) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GetMetaDataAuthority) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.AuditAt != 0 {
		i = encodeVarintAuthRpcApi(dAtA, i, uint64(m.AuditAt))
		i--
		dAtA[i] = 0x38
	}
	if m.ApplyAt != 0 {
		i = encodeVarintAuthRpcApi(dAtA, i, uint64(m.ApplyAt))
		i--
		dAtA[i] = 0x30
	}
	if m.Audit != 0 {
		i = encodeVarintAuthRpcApi(dAtA, i, uint64(m.Audit))
		i--
		dAtA[i] = 0x28
	}
	if m.Auth != nil {
		{
			size, err := m.Auth.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintAuthRpcApi(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x22
	}
	if m.UserType != 0 {
		i = encodeVarintAuthRpcApi(dAtA, i, uint64(m.UserType))
		i--
		dAtA[i] = 0x18
	}
	if len(m.User) > 0 {
		i -= len(m.User)
		copy(dAtA[i:], m.User)
		i = encodeVarintAuthRpcApi(dAtA, i, uint64(len(m.User)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.MetaDataAuthId) > 0 {
		i -= len(m.MetaDataAuthId)
		copy(dAtA[i:], m.MetaDataAuthId)
		i = encodeVarintAuthRpcApi(dAtA, i, uint64(len(m.MetaDataAuthId)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *GetMetaDataAuthorityListResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetMetaDataAuthorityListResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GetMetaDataAuthorityListResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.List) > 0 {
		for iNdEx := len(m.List) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.List[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintAuthRpcApi(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x1a
		}
	}
	if len(m.Msg) > 0 {
		i -= len(m.Msg)
		copy(dAtA[i:], m.Msg)
		i = encodeVarintAuthRpcApi(dAtA, i, uint64(len(m.Msg)))
		i--
		dAtA[i] = 0x12
	}
	if m.Status != 0 {
		i = encodeVarintAuthRpcApi(dAtA, i, uint64(m.Status))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func encodeVarintAuthRpcApi(dAtA []byte, offset int, v uint64) int {
	offset -= sovAuthRpcApi(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *ApplyIdentityJoinRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Member != nil {
		l = m.Member.Size()
		n += 1 + l + sovAuthRpcApi(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *GetNodeIdentityResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Status != 0 {
		n += 1 + sovAuthRpcApi(uint64(m.Status))
	}
	l = len(m.Msg)
	if l > 0 {
		n += 1 + l + sovAuthRpcApi(uint64(l))
	}
	if m.Owner != nil {
		l = m.Owner.Size()
		n += 1 + l + sovAuthRpcApi(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *GetIdentityListResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Status != 0 {
		n += 1 + sovAuthRpcApi(uint64(m.Status))
	}
	l = len(m.Msg)
	if l > 0 {
		n += 1 + l + sovAuthRpcApi(uint64(l))
	}
	if len(m.MemberList) > 0 {
		for _, e := range m.MemberList {
			l = e.Size()
			n += 1 + l + sovAuthRpcApi(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ApplyMetaDataAuthorityRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.User)
	if l > 0 {
		n += 1 + l + sovAuthRpcApi(uint64(l))
	}
	if m.UserType != 0 {
		n += 1 + sovAuthRpcApi(uint64(m.UserType))
	}
	if m.Auth != nil {
		l = m.Auth.Size()
		n += 1 + l + sovAuthRpcApi(uint64(l))
	}
	l = len(m.Sign)
	if l > 0 {
		n += 1 + l + sovAuthRpcApi(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ApplyMetaDataAuthorityResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Status != 0 {
		n += 1 + sovAuthRpcApi(uint64(m.Status))
	}
	l = len(m.Msg)
	if l > 0 {
		n += 1 + l + sovAuthRpcApi(uint64(l))
	}
	l = len(m.MetaDataAuthId)
	if l > 0 {
		n += 1 + l + sovAuthRpcApi(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *AuditMetaDataAuthorityRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.MetaDataAuthId)
	if l > 0 {
		n += 1 + l + sovAuthRpcApi(uint64(l))
	}
	if m.Audit != 0 {
		n += 1 + sovAuthRpcApi(uint64(m.Audit))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *AuditMetaDataAuthorityResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Status != 0 {
		n += 1 + sovAuthRpcApi(uint64(m.Status))
	}
	l = len(m.Msg)
	if l > 0 {
		n += 1 + l + sovAuthRpcApi(uint64(l))
	}
	if m.Audit != 0 {
		n += 1 + sovAuthRpcApi(uint64(m.Audit))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *GetMetaDataAuthority) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.MetaDataAuthId)
	if l > 0 {
		n += 1 + l + sovAuthRpcApi(uint64(l))
	}
	l = len(m.User)
	if l > 0 {
		n += 1 + l + sovAuthRpcApi(uint64(l))
	}
	if m.UserType != 0 {
		n += 1 + sovAuthRpcApi(uint64(m.UserType))
	}
	if m.Auth != nil {
		l = m.Auth.Size()
		n += 1 + l + sovAuthRpcApi(uint64(l))
	}
	if m.Audit != 0 {
		n += 1 + sovAuthRpcApi(uint64(m.Audit))
	}
	if m.ApplyAt != 0 {
		n += 1 + sovAuthRpcApi(uint64(m.ApplyAt))
	}
	if m.AuditAt != 0 {
		n += 1 + sovAuthRpcApi(uint64(m.AuditAt))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *GetMetaDataAuthorityListResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Status != 0 {
		n += 1 + sovAuthRpcApi(uint64(m.Status))
	}
	l = len(m.Msg)
	if l > 0 {
		n += 1 + l + sovAuthRpcApi(uint64(l))
	}
	if len(m.List) > 0 {
		for _, e := range m.List {
			l = e.Size()
			n += 1 + l + sovAuthRpcApi(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func sovAuthRpcApi(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozAuthRpcApi(x uint64) (n int) {
	return sovAuthRpcApi(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *ApplyIdentityJoinRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowAuthRpcApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ApplyIdentityJoinRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ApplyIdentityJoinRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Member", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAuthRpcApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthAuthRpcApi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthAuthRpcApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Member == nil {
				m.Member = &common.Organization{}
			}
			if err := m.Member.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipAuthRpcApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthAuthRpcApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GetNodeIdentityResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowAuthRpcApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetNodeIdentityResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetNodeIdentityResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Status", wireType)
			}
			m.Status = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAuthRpcApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Status |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Msg", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAuthRpcApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthAuthRpcApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthAuthRpcApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Msg = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Owner", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAuthRpcApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthAuthRpcApi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthAuthRpcApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Owner == nil {
				m.Owner = &common.Organization{}
			}
			if err := m.Owner.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipAuthRpcApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthAuthRpcApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GetIdentityListResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowAuthRpcApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetIdentityListResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetIdentityListResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Status", wireType)
			}
			m.Status = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAuthRpcApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Status |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Msg", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAuthRpcApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthAuthRpcApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthAuthRpcApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Msg = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MemberList", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAuthRpcApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthAuthRpcApi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthAuthRpcApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.MemberList = append(m.MemberList, &common.Organization{})
			if err := m.MemberList[len(m.MemberList)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipAuthRpcApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthAuthRpcApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ApplyMetaDataAuthorityRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowAuthRpcApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ApplyMetaDataAuthorityRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ApplyMetaDataAuthorityRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field User", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAuthRpcApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthAuthRpcApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthAuthRpcApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.User = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserType", wireType)
			}
			m.UserType = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAuthRpcApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.UserType |= common.UserType(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Auth", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAuthRpcApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthAuthRpcApi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthAuthRpcApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Auth == nil {
				m.Auth = &types.MetaDataAuthority{}
			}
			if err := m.Auth.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Sign", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAuthRpcApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthAuthRpcApi
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthAuthRpcApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Sign = append(m.Sign[:0], dAtA[iNdEx:postIndex]...)
			if m.Sign == nil {
				m.Sign = []byte{}
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipAuthRpcApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthAuthRpcApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ApplyMetaDataAuthorityResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowAuthRpcApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ApplyMetaDataAuthorityResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ApplyMetaDataAuthorityResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Status", wireType)
			}
			m.Status = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAuthRpcApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Status |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Msg", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAuthRpcApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthAuthRpcApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthAuthRpcApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Msg = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MetaDataAuthId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAuthRpcApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthAuthRpcApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthAuthRpcApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.MetaDataAuthId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipAuthRpcApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthAuthRpcApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *AuditMetaDataAuthorityRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowAuthRpcApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: AuditMetaDataAuthorityRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: AuditMetaDataAuthorityRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MetaDataAuthId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAuthRpcApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthAuthRpcApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthAuthRpcApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.MetaDataAuthId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Audit", wireType)
			}
			m.Audit = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAuthRpcApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Audit |= common.AuditMetaDataOption(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipAuthRpcApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthAuthRpcApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *AuditMetaDataAuthorityResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowAuthRpcApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: AuditMetaDataAuthorityResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: AuditMetaDataAuthorityResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Status", wireType)
			}
			m.Status = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAuthRpcApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Status |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Msg", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAuthRpcApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthAuthRpcApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthAuthRpcApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Msg = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Audit", wireType)
			}
			m.Audit = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAuthRpcApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Audit |= common.AuditMetaDataOption(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipAuthRpcApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthAuthRpcApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GetMetaDataAuthority) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowAuthRpcApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetMetaDataAuthority: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetMetaDataAuthority: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MetaDataAuthId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAuthRpcApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthAuthRpcApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthAuthRpcApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.MetaDataAuthId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field User", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAuthRpcApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthAuthRpcApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthAuthRpcApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.User = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserType", wireType)
			}
			m.UserType = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAuthRpcApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.UserType |= common.UserType(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Auth", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAuthRpcApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthAuthRpcApi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthAuthRpcApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Auth == nil {
				m.Auth = &types.MetaDataAuthority{}
			}
			if err := m.Auth.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Audit", wireType)
			}
			m.Audit = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAuthRpcApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Audit |= common.AuditMetaDataOption(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ApplyAt", wireType)
			}
			m.ApplyAt = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAuthRpcApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ApplyAt |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 7:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field AuditAt", wireType)
			}
			m.AuditAt = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAuthRpcApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.AuditAt |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipAuthRpcApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthAuthRpcApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GetMetaDataAuthorityListResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowAuthRpcApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetMetaDataAuthorityListResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetMetaDataAuthorityListResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Status", wireType)
			}
			m.Status = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAuthRpcApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Status |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Msg", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAuthRpcApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthAuthRpcApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthAuthRpcApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Msg = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field List", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAuthRpcApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthAuthRpcApi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthAuthRpcApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.List = append(m.List, &GetMetaDataAuthority{})
			if err := m.List[len(m.List)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipAuthRpcApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthAuthRpcApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipAuthRpcApi(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowAuthRpcApi
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowAuthRpcApi
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowAuthRpcApi
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthAuthRpcApi
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupAuthRpcApi
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthAuthRpcApi
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthAuthRpcApi        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowAuthRpcApi          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupAuthRpcApi = fmt.Errorf("proto: unexpected end of group")
)
