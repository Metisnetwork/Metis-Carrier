// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: lib/center/api/resource.proto

package api

import (
	context "context"
	fmt "fmt"
	types "github.com/Metisnetwork/Metis-Carrier/lib/types"
	proto "github.com/gogo/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

// 发布算力请求参数
type PublishPowerRequest struct {
	Power                *types.ResourcePB `protobuf:"bytes,1,opt,name=power,proto3" json:"power,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *PublishPowerRequest) Reset()         { *m = PublishPowerRequest{} }
func (m *PublishPowerRequest) String() string { return proto.CompactTextString(m) }
func (*PublishPowerRequest) ProtoMessage()    {}
func (*PublishPowerRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_bed369cb36770f5f, []int{0}
}
func (m *PublishPowerRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *PublishPowerRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_PublishPowerRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *PublishPowerRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PublishPowerRequest.Merge(m, src)
}
func (m *PublishPowerRequest) XXX_Size() int {
	return m.Size()
}
func (m *PublishPowerRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PublishPowerRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PublishPowerRequest proto.InternalMessageInfo

func (m *PublishPowerRequest) GetPower() *types.ResourcePB {
	if m != nil {
		return m.Power
	}
	return nil
}

type PublishPowerResponse struct {
	Status int32  `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Msg    string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	// 算力id
	PowerId              string   `protobuf:"bytes,3,opt,name=power_id,json=powerId,proto3" json:"power_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PublishPowerResponse) Reset()         { *m = PublishPowerResponse{} }
func (m *PublishPowerResponse) String() string { return proto.CompactTextString(m) }
func (*PublishPowerResponse) ProtoMessage()    {}
func (*PublishPowerResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_bed369cb36770f5f, []int{1}
}
func (m *PublishPowerResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *PublishPowerResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_PublishPowerResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *PublishPowerResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PublishPowerResponse.Merge(m, src)
}
func (m *PublishPowerResponse) XXX_Size() int {
	return m.Size()
}
func (m *PublishPowerResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PublishPowerResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PublishPowerResponse proto.InternalMessageInfo

func (m *PublishPowerResponse) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *PublishPowerResponse) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

func (m *PublishPowerResponse) GetPowerId() string {
	if m != nil {
		return m.PowerId
	}
	return ""
}

type RevokePowerRequest struct {
	// 算力的拥有者
	Owner *types.Organization `protobuf:"bytes,1,opt,name=owner,proto3" json:"owner,omitempty"`
	// 算力id
	PowerId              string   `protobuf:"bytes,2,opt,name=power_id,json=powerId,proto3" json:"power_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RevokePowerRequest) Reset()         { *m = RevokePowerRequest{} }
func (m *RevokePowerRequest) String() string { return proto.CompactTextString(m) }
func (*RevokePowerRequest) ProtoMessage()    {}
func (*RevokePowerRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_bed369cb36770f5f, []int{2}
}
func (m *RevokePowerRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *RevokePowerRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_RevokePowerRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *RevokePowerRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RevokePowerRequest.Merge(m, src)
}
func (m *RevokePowerRequest) XXX_Size() int {
	return m.Size()
}
func (m *RevokePowerRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RevokePowerRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RevokePowerRequest proto.InternalMessageInfo

func (m *RevokePowerRequest) GetOwner() *types.Organization {
	if m != nil {
		return m.Owner
	}
	return nil
}

func (m *RevokePowerRequest) GetPowerId() string {
	if m != nil {
		return m.PowerId
	}
	return ""
}

//  总算力摘要
type PowerSummary struct {
	// 算力实况
	Information *types.ResourceUsageOverview `protobuf:"bytes,1,opt,name=information,proto3" json:"information,omitempty"`
	// 算力上总共执行的任务数 (已完成的和正在执行的)
	TotalTaskCount uint32 `protobuf:"varint,2,opt,name=total_task_count,json=totalTaskCount,proto3" json:"total_task_count,omitempty"`
	// 算力状态 (create: 还未发布的算力; release: 已发布的算力; revoke: 已撤销的算力)
	State                types.PowerState `protobuf:"varint,3,opt,name=state,proto3,enum=types.PowerState" json:"state,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *PowerSummary) Reset()         { *m = PowerSummary{} }
func (m *PowerSummary) String() string { return proto.CompactTextString(m) }
func (*PowerSummary) ProtoMessage()    {}
func (*PowerSummary) Descriptor() ([]byte, []int) {
	return fileDescriptor_bed369cb36770f5f, []int{3}
}
func (m *PowerSummary) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *PowerSummary) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_PowerSummary.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *PowerSummary) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PowerSummary.Merge(m, src)
}
func (m *PowerSummary) XXX_Size() int {
	return m.Size()
}
func (m *PowerSummary) XXX_DiscardUnknown() {
	xxx_messageInfo_PowerSummary.DiscardUnknown(m)
}

var xxx_messageInfo_PowerSummary proto.InternalMessageInfo

func (m *PowerSummary) GetInformation() *types.ResourceUsageOverview {
	if m != nil {
		return m.Information
	}
	return nil
}

func (m *PowerSummary) GetTotalTaskCount() uint32 {
	if m != nil {
		return m.TotalTaskCount
	}
	return 0
}

func (m *PowerSummary) GetState() types.PowerState {
	if m != nil {
		return m.State
	}
	return types.PowerState_PowerState_Unknown
}

type PowerSummaryResponse struct {
	// 算力拥有者信息
	Owner *types.Organization `protobuf:"bytes,1,opt,name=owner,proto3" json:"owner,omitempty"`
	// 算力总摘要
	PowerSummary         *PowerSummary `protobuf:"bytes,2,opt,name=power_summary,json=powerSummary,proto3" json:"power_summary,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *PowerSummaryResponse) Reset()         { *m = PowerSummaryResponse{} }
func (m *PowerSummaryResponse) String() string { return proto.CompactTextString(m) }
func (*PowerSummaryResponse) ProtoMessage()    {}
func (*PowerSummaryResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_bed369cb36770f5f, []int{4}
}
func (m *PowerSummaryResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *PowerSummaryResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_PowerSummaryResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *PowerSummaryResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PowerSummaryResponse.Merge(m, src)
}
func (m *PowerSummaryResponse) XXX_Size() int {
	return m.Size()
}
func (m *PowerSummaryResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PowerSummaryResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PowerSummaryResponse proto.InternalMessageInfo

func (m *PowerSummaryResponse) GetOwner() *types.Organization {
	if m != nil {
		return m.Owner
	}
	return nil
}

func (m *PowerSummaryResponse) GetPowerSummary() *PowerSummary {
	if m != nil {
		return m.PowerSummary
	}
	return nil
}

type ListPowerSummaryResponse struct {
	// 全网的算力总摘要列表
	Powers               []*PowerSummaryResponse `protobuf:"bytes,1,rep,name=powers,proto3" json:"powers,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *ListPowerSummaryResponse) Reset()         { *m = ListPowerSummaryResponse{} }
func (m *ListPowerSummaryResponse) String() string { return proto.CompactTextString(m) }
func (*ListPowerSummaryResponse) ProtoMessage()    {}
func (*ListPowerSummaryResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_bed369cb36770f5f, []int{5}
}
func (m *ListPowerSummaryResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ListPowerSummaryResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ListPowerSummaryResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ListPowerSummaryResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListPowerSummaryResponse.Merge(m, src)
}
func (m *ListPowerSummaryResponse) XXX_Size() int {
	return m.Size()
}
func (m *ListPowerSummaryResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListPowerSummaryResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListPowerSummaryResponse proto.InternalMessageInfo

func (m *ListPowerSummaryResponse) GetPowers() []*PowerSummaryResponse {
	if m != nil {
		return m.Powers
	}
	return nil
}

type GetPowerSummaryByIdentityRequest struct {
	// 身份ID
	IdentityId           string   `protobuf:"bytes,1,opt,name=identity_id,json=identityId,proto3" json:"identity_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetPowerSummaryByIdentityRequest) Reset()         { *m = GetPowerSummaryByIdentityRequest{} }
func (m *GetPowerSummaryByIdentityRequest) String() string { return proto.CompactTextString(m) }
func (*GetPowerSummaryByIdentityRequest) ProtoMessage()    {}
func (*GetPowerSummaryByIdentityRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_bed369cb36770f5f, []int{6}
}
func (m *GetPowerSummaryByIdentityRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GetPowerSummaryByIdentityRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GetPowerSummaryByIdentityRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GetPowerSummaryByIdentityRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetPowerSummaryByIdentityRequest.Merge(m, src)
}
func (m *GetPowerSummaryByIdentityRequest) XXX_Size() int {
	return m.Size()
}
func (m *GetPowerSummaryByIdentityRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetPowerSummaryByIdentityRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetPowerSummaryByIdentityRequest proto.InternalMessageInfo

func (m *GetPowerSummaryByIdentityRequest) GetIdentityId() string {
	if m != nil {
		return m.IdentityId
	}
	return ""
}

type ListPowerRequest struct {
	LastUpdated          uint64   `protobuf:"varint,1,opt,name=last_updated,json=lastUpdated,proto3" json:"last_updated,omitempty"`
	PageSize             uint64   `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListPowerRequest) Reset()         { *m = ListPowerRequest{} }
func (m *ListPowerRequest) String() string { return proto.CompactTextString(m) }
func (*ListPowerRequest) ProtoMessage()    {}
func (*ListPowerRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_bed369cb36770f5f, []int{7}
}
func (m *ListPowerRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ListPowerRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ListPowerRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ListPowerRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListPowerRequest.Merge(m, src)
}
func (m *ListPowerRequest) XXX_Size() int {
	return m.Size()
}
func (m *ListPowerRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListPowerRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListPowerRequest proto.InternalMessageInfo

func (m *ListPowerRequest) GetLastUpdated() uint64 {
	if m != nil {
		return m.LastUpdated
	}
	return 0
}

func (m *ListPowerRequest) GetPageSize() uint64 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

type ListPowerResponse struct {
	Powers               []*types.ResourcePB `protobuf:"bytes,1,rep,name=powers,proto3" json:"powers,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *ListPowerResponse) Reset()         { *m = ListPowerResponse{} }
func (m *ListPowerResponse) String() string { return proto.CompactTextString(m) }
func (*ListPowerResponse) ProtoMessage()    {}
func (*ListPowerResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_bed369cb36770f5f, []int{8}
}
func (m *ListPowerResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ListPowerResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ListPowerResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ListPowerResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListPowerResponse.Merge(m, src)
}
func (m *ListPowerResponse) XXX_Size() int {
	return m.Size()
}
func (m *ListPowerResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListPowerResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListPowerResponse proto.InternalMessageInfo

func (m *ListPowerResponse) GetPowers() []*types.ResourcePB {
	if m != nil {
		return m.Powers
	}
	return nil
}

type SyncPowerRequest struct {
	Power                *types.LocalResourcePB `protobuf:"bytes,1,opt,name=power,proto3" json:"power,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *SyncPowerRequest) Reset()         { *m = SyncPowerRequest{} }
func (m *SyncPowerRequest) String() string { return proto.CompactTextString(m) }
func (*SyncPowerRequest) ProtoMessage()    {}
func (*SyncPowerRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_bed369cb36770f5f, []int{9}
}
func (m *SyncPowerRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *SyncPowerRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_SyncPowerRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *SyncPowerRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SyncPowerRequest.Merge(m, src)
}
func (m *SyncPowerRequest) XXX_Size() int {
	return m.Size()
}
func (m *SyncPowerRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SyncPowerRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SyncPowerRequest proto.InternalMessageInfo

func (m *SyncPowerRequest) GetPower() *types.LocalResourcePB {
	if m != nil {
		return m.Power
	}
	return nil
}

func init() {
	proto.RegisterType((*PublishPowerRequest)(nil), "api.PublishPowerRequest")
	proto.RegisterType((*PublishPowerResponse)(nil), "api.PublishPowerResponse")
	proto.RegisterType((*RevokePowerRequest)(nil), "api.RevokePowerRequest")
	proto.RegisterType((*PowerSummary)(nil), "api.PowerSummary")
	proto.RegisterType((*PowerSummaryResponse)(nil), "api.PowerSummaryResponse")
	proto.RegisterType((*ListPowerSummaryResponse)(nil), "api.ListPowerSummaryResponse")
	proto.RegisterType((*GetPowerSummaryByIdentityRequest)(nil), "api.GetPowerSummaryByIdentityRequest")
	proto.RegisterType((*ListPowerRequest)(nil), "api.ListPowerRequest")
	proto.RegisterType((*ListPowerResponse)(nil), "api.ListPowerResponse")
	proto.RegisterType((*SyncPowerRequest)(nil), "api.SyncPowerRequest")
}

func init() { proto.RegisterFile("lib/center/api/resource.proto", fileDescriptor_bed369cb36770f5f) }

var fileDescriptor_bed369cb36770f5f = []byte{
	// 684 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x54, 0xdd, 0x4e, 0x13, 0x41,
	0x18, 0xcd, 0x52, 0x40, 0xfa, 0xb5, 0x60, 0x19, 0xa0, 0x96, 0xf2, 0x23, 0x6e, 0x62, 0xac, 0x89,
	0xee, 0x2a, 0x26, 0x26, 0x9a, 0x58, 0x0d, 0x44, 0x49, 0x13, 0x0c, 0x64, 0x2a, 0x37, 0x78, 0xd1,
	0x4c, 0xdb, 0xa1, 0x4c, 0xd8, 0xdd, 0x59, 0x77, 0x66, 0x69, 0x96, 0xb7, 0xf1, 0x1d, 0x7c, 0x08,
	0x2f, 0x7d, 0x04, 0xc3, 0x93, 0x98, 0x99, 0xfd, 0x71, 0xb7, 0xa5, 0x31, 0xde, 0xed, 0x9c, 0x6f,
	0xce, 0xd9, 0xf3, 0xfd, 0x0d, 0xec, 0x38, 0xac, 0x6f, 0x0f, 0xa8, 0x27, 0x69, 0x60, 0x13, 0x9f,
	0xd9, 0x01, 0x15, 0x3c, 0x0c, 0x06, 0xd4, 0xf2, 0x03, 0x2e, 0x39, 0x2a, 0x11, 0x9f, 0x35, 0xd7,
	0xd5, 0x1d, 0x19, 0xf9, 0x54, 0xd8, 0x7d, 0x22, 0x92, 0x50, 0x73, 0xfb, 0x2f, 0x9a, 0x92, 0x86,
	0x44, 0x92, 0x24, 0xba, 0x35, 0xe2, 0x7c, 0xe4, 0x50, 0x5b, 0x9f, 0xfa, 0xe1, 0x85, 0x4d, 0x5d,
	0x5f, 0x46, 0x71, 0xd0, 0x6c, 0xc3, 0xda, 0x69, 0xd8, 0x77, 0x98, 0xb8, 0x3c, 0xe5, 0x63, 0x1a,
	0x60, 0xfa, 0x2d, 0xa4, 0x42, 0xa2, 0x27, 0xb0, 0xe0, 0xab, 0x73, 0xc3, 0xd8, 0x33, 0x5a, 0x95,
	0xfd, 0x55, 0x4b, 0xab, 0x5b, 0x38, 0x51, 0x3f, 0x3d, 0xc0, 0x71, 0xdc, 0xfc, 0x0a, 0xeb, 0x45,
	0xbe, 0xf0, 0xb9, 0x27, 0x28, 0xaa, 0xc3, 0xa2, 0x90, 0x44, 0x86, 0x42, 0x2b, 0x2c, 0xe0, 0xe4,
	0x84, 0x6a, 0x50, 0x72, 0xc5, 0xa8, 0x31, 0xb7, 0x67, 0xb4, 0xca, 0x58, 0x7d, 0xa2, 0x4d, 0x58,
	0xd2, 0x52, 0x3d, 0x36, 0x6c, 0x94, 0x34, 0x7c, 0x4f, 0x9f, 0x3b, 0x43, 0xf3, 0x1c, 0x10, 0xa6,
	0xd7, 0xfc, 0x8a, 0x16, 0xbc, 0x3d, 0x85, 0x05, 0x3e, 0xf6, 0x32, 0x6f, 0x6b, 0x89, 0xb7, 0x93,
	0x60, 0x44, 0x3c, 0x76, 0x43, 0x24, 0xe3, 0x1e, 0x8e, 0x6f, 0x14, 0xb4, 0xe7, 0x8a, 0xda, 0xdf,
	0x0d, 0xa8, 0x6a, 0xd9, 0x6e, 0xe8, 0xba, 0x24, 0x88, 0x50, 0x1b, 0x2a, 0xcc, 0xbb, 0xe0, 0x81,
	0xab, 0x15, 0x12, 0xf1, 0xed, 0x89, 0xc4, 0xcf, 0x04, 0x19, 0xd1, 0x93, 0x6b, 0x1a, 0x5c, 0x33,
	0x3a, 0xc6, 0x79, 0x02, 0x6a, 0x41, 0x4d, 0x72, 0x49, 0x9c, 0x9e, 0x24, 0xe2, 0xaa, 0x37, 0xe0,
	0xa1, 0x27, 0xf5, 0x3f, 0x97, 0xf1, 0x8a, 0xc6, 0xbf, 0x10, 0x71, 0x75, 0xa8, 0x50, 0x55, 0x5c,
	0x55, 0x0d, 0xaa, 0xd3, 0x5d, 0xc9, 0x8a, 0x1b, 0xbb, 0x51, 0x01, 0x1c, 0xc7, 0xcd, 0x08, 0xd6,
	0xf3, 0x16, 0xb3, 0xe2, 0xfe, 0x47, 0x05, 0x5e, 0xc3, 0x72, 0x5c, 0x01, 0x11, 0x6b, 0x68, 0x4b,
	0xaa, 0xa1, 0xc4, 0x67, 0x56, 0x41, 0xbc, 0xea, 0xe7, 0x4e, 0xe6, 0x67, 0x68, 0x1c, 0x33, 0x21,
	0xef, 0xfc, 0xfd, 0x4b, 0x58, 0xd4, 0x77, 0x55, 0x6f, 0x4b, 0xad, 0xca, 0xfe, 0xe6, 0xb4, 0x58,
	0x72, 0x15, 0x27, 0x17, 0xcd, 0x43, 0xd8, 0x3b, 0xa2, 0x05, 0xb5, 0x83, 0xa8, 0x33, 0xa4, 0x9e,
	0x64, 0x32, 0x4a, 0xfb, 0xfa, 0x10, 0x2a, 0x2c, 0x81, 0x54, 0xbf, 0x0c, 0xdd, 0x2f, 0x48, 0xa1,
	0xce, 0xd0, 0xc4, 0x50, 0xcb, 0x3c, 0xa5, 0xa4, 0x47, 0x50, 0x75, 0x88, 0x90, 0xbd, 0xd0, 0x1f,
	0x12, 0x49, 0x63, 0xd6, 0x3c, 0xae, 0x28, 0xec, 0x2c, 0x86, 0xd0, 0x16, 0x94, 0x7d, 0x32, 0xa2,
	0x3d, 0xc1, 0x6e, 0xa8, 0x4e, 0x7f, 0x1e, 0x2f, 0x29, 0xa0, 0xcb, 0x6e, 0xa8, 0xd9, 0x86, 0xd5,
	0x9c, 0x66, 0x56, 0xdf, 0x62, 0x82, 0x77, 0x8c, 0x7f, 0x9a, 0xd8, 0x07, 0xa8, 0x75, 0x23, 0x6f,
	0x50, 0xf0, 0xf4, 0xac, 0xb8, 0x3c, 0xf5, 0x84, 0x7d, 0xcc, 0x07, 0xc4, 0x99, 0xda, 0xa0, 0xfd,
	0x1f, 0x25, 0xb8, 0x9f, 0xa2, 0x5d, 0x35, 0x58, 0x03, 0x8a, 0xde, 0x43, 0x35, 0xbf, 0x55, 0xa8,
	0x11, 0x57, 0x78, 0x7a, 0x51, 0x9b, 0x1b, 0x89, 0x78, 0x97, 0xb9, 0xbe, 0x43, 0xb3, 0x0c, 0xde,
	0x40, 0x39, 0xb3, 0x85, 0x36, 0x34, 0x7b, 0xd2, 0xe6, 0x2c, 0xea, 0x3b, 0xa8, 0xe4, 0x96, 0x0e,
	0x3d, 0xd0, 0xe4, 0xe9, 0x35, 0x9c, 0x45, 0x7f, 0x0b, 0xe5, 0xac, 0xa0, 0xc9, 0x9f, 0x27, 0x9b,
	0xd6, 0xac, 0x4f, 0xc2, 0x09, 0xb7, 0x07, 0x5b, 0x33, 0xa7, 0xa4, 0x33, 0x44, 0x8f, 0x35, 0xed,
	0x5f, 0x73, 0xd4, 0x9c, 0x3d, 0x8e, 0xa8, 0x93, 0x9b, 0xa0, 0x74, 0xef, 0xeb, 0x56, 0xfc, 0x3e,
	0x5a, 0xe9, 0xfb, 0x68, 0x7d, 0x54, 0xef, 0x63, 0x73, 0xa7, 0x68, 0x72, 0x42, 0xea, 0xa0, 0xfd,
	0xf3, 0x76, 0xd7, 0xf8, 0x75, 0xbb, 0x6b, 0xfc, 0xbe, 0xdd, 0x35, 0xce, 0x5f, 0x8c, 0x98, 0xbc,
	0x0c, 0xfb, 0xd6, 0x80, 0xbb, 0x36, 0xe6, 0x82, 0x4a, 0x49, 0x3e, 0x39, 0x7c, 0x6c, 0x1f, 0x92,
	0x20, 0x60, 0x34, 0x78, 0x7e, 0xc4, 0xed, 0xe2, 0xeb, 0xde, 0x5f, 0xd4, 0xbf, 0x7b, 0xf5, 0x27,
	0x00, 0x00, 0xff, 0xff, 0x88, 0xf0, 0x91, 0x8f, 0xf6, 0x05, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ResourceServiceClient is the client API for ResourceService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ResourceServiceClient interface {
	// 存储资源
	PublishPower(ctx context.Context, in *PublishPowerRequest, opts ...grpc.CallOption) (*types.SimpleResponse, error)
	// 新增，算力同步，实时通知算力的使用情况（组织下的具体的服务器）
	SyncPower(ctx context.Context, in *SyncPowerRequest, opts ...grpc.CallOption) (*types.SimpleResponse, error)
	// 撤销资源
	RevokePower(ctx context.Context, in *RevokePowerRequest, opts ...grpc.CallOption) (*types.SimpleResponse, error)
	// 新增，用于同步给管理台，获取所有算力资源信息
	ListPower(ctx context.Context, in *ListPowerRequest, opts ...grpc.CallOption) (*ListPowerResponse, error)
	// 查看指定组织的总算力摘要
	GetPowerSummaryByIdentityId(ctx context.Context, in *GetPowerSummaryByIdentityRequest, opts ...grpc.CallOption) (*PowerSummaryResponse, error)
	// 查看各个组织的总算力摘要列表 (这个是聚合的摘要, 即: 每个组织的总算力, 所以不需要分页)
	ListPowerSummary(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*ListPowerSummaryResponse, error)
}

type resourceServiceClient struct {
	cc *grpc.ClientConn
}

func NewResourceServiceClient(cc *grpc.ClientConn) ResourceServiceClient {
	return &resourceServiceClient{cc}
}

func (c *resourceServiceClient) PublishPower(ctx context.Context, in *PublishPowerRequest, opts ...grpc.CallOption) (*types.SimpleResponse, error) {
	out := new(types.SimpleResponse)
	err := c.cc.Invoke(ctx, "/api.ResourceService/PublishPower", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *resourceServiceClient) SyncPower(ctx context.Context, in *SyncPowerRequest, opts ...grpc.CallOption) (*types.SimpleResponse, error) {
	out := new(types.SimpleResponse)
	err := c.cc.Invoke(ctx, "/api.ResourceService/SyncPower", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *resourceServiceClient) RevokePower(ctx context.Context, in *RevokePowerRequest, opts ...grpc.CallOption) (*types.SimpleResponse, error) {
	out := new(types.SimpleResponse)
	err := c.cc.Invoke(ctx, "/api.ResourceService/RevokePower", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *resourceServiceClient) ListPower(ctx context.Context, in *ListPowerRequest, opts ...grpc.CallOption) (*ListPowerResponse, error) {
	out := new(ListPowerResponse)
	err := c.cc.Invoke(ctx, "/api.ResourceService/ListPower", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *resourceServiceClient) GetPowerSummaryByIdentityId(ctx context.Context, in *GetPowerSummaryByIdentityRequest, opts ...grpc.CallOption) (*PowerSummaryResponse, error) {
	out := new(PowerSummaryResponse)
	err := c.cc.Invoke(ctx, "/api.ResourceService/GetPowerSummaryByIdentityId", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *resourceServiceClient) ListPowerSummary(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*ListPowerSummaryResponse, error) {
	out := new(ListPowerSummaryResponse)
	err := c.cc.Invoke(ctx, "/api.ResourceService/ListPowerSummary", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ResourceServiceServer is the server API for ResourceService service.
type ResourceServiceServer interface {
	// 存储资源
	PublishPower(context.Context, *PublishPowerRequest) (*types.SimpleResponse, error)
	// 新增，算力同步，实时通知算力的使用情况（组织下的具体的服务器）
	SyncPower(context.Context, *SyncPowerRequest) (*types.SimpleResponse, error)
	// 撤销资源
	RevokePower(context.Context, *RevokePowerRequest) (*types.SimpleResponse, error)
	// 新增，用于同步给管理台，获取所有算力资源信息
	ListPower(context.Context, *ListPowerRequest) (*ListPowerResponse, error)
	// 查看指定组织的总算力摘要
	GetPowerSummaryByIdentityId(context.Context, *GetPowerSummaryByIdentityRequest) (*PowerSummaryResponse, error)
	// 查看各个组织的总算力摘要列表 (这个是聚合的摘要, 即: 每个组织的总算力, 所以不需要分页)
	ListPowerSummary(context.Context, *emptypb.Empty) (*ListPowerSummaryResponse, error)
}

// UnimplementedResourceServiceServer can be embedded to have forward compatible implementations.
type UnimplementedResourceServiceServer struct {
}

func (*UnimplementedResourceServiceServer) PublishPower(ctx context.Context, req *PublishPowerRequest) (*types.SimpleResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PublishPower not implemented")
}
func (*UnimplementedResourceServiceServer) SyncPower(ctx context.Context, req *SyncPowerRequest) (*types.SimpleResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SyncPower not implemented")
}
func (*UnimplementedResourceServiceServer) RevokePower(ctx context.Context, req *RevokePowerRequest) (*types.SimpleResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RevokePower not implemented")
}
func (*UnimplementedResourceServiceServer) ListPower(ctx context.Context, req *ListPowerRequest) (*ListPowerResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListPower not implemented")
}
func (*UnimplementedResourceServiceServer) GetPowerSummaryByIdentityId(ctx context.Context, req *GetPowerSummaryByIdentityRequest) (*PowerSummaryResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetPowerSummaryByIdentityId not implemented")
}
func (*UnimplementedResourceServiceServer) ListPowerSummary(ctx context.Context, req *emptypb.Empty) (*ListPowerSummaryResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListPowerSummary not implemented")
}

func RegisterResourceServiceServer(s *grpc.Server, srv ResourceServiceServer) {
	s.RegisterService(&_ResourceService_serviceDesc, srv)
}

func _ResourceService_PublishPower_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PublishPowerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ResourceServiceServer).PublishPower(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.ResourceService/PublishPower",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ResourceServiceServer).PublishPower(ctx, req.(*PublishPowerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ResourceService_SyncPower_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SyncPowerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ResourceServiceServer).SyncPower(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.ResourceService/SyncPower",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ResourceServiceServer).SyncPower(ctx, req.(*SyncPowerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ResourceService_RevokePower_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RevokePowerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ResourceServiceServer).RevokePower(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.ResourceService/RevokePower",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ResourceServiceServer).RevokePower(ctx, req.(*RevokePowerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ResourceService_ListPower_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListPowerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ResourceServiceServer).ListPower(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.ResourceService/ListPower",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ResourceServiceServer).ListPower(ctx, req.(*ListPowerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ResourceService_GetPowerSummaryByIdentityId_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetPowerSummaryByIdentityRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ResourceServiceServer).GetPowerSummaryByIdentityId(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.ResourceService/GetPowerSummaryByIdentityId",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ResourceServiceServer).GetPowerSummaryByIdentityId(ctx, req.(*GetPowerSummaryByIdentityRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ResourceService_ListPowerSummary_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(emptypb.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ResourceServiceServer).ListPowerSummary(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.ResourceService/ListPowerSummary",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ResourceServiceServer).ListPowerSummary(ctx, req.(*emptypb.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

var _ResourceService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "api.ResourceService",
	HandlerType: (*ResourceServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "PublishPower",
			Handler:    _ResourceService_PublishPower_Handler,
		},
		{
			MethodName: "SyncPower",
			Handler:    _ResourceService_SyncPower_Handler,
		},
		{
			MethodName: "RevokePower",
			Handler:    _ResourceService_RevokePower_Handler,
		},
		{
			MethodName: "ListPower",
			Handler:    _ResourceService_ListPower_Handler,
		},
		{
			MethodName: "GetPowerSummaryByIdentityId",
			Handler:    _ResourceService_GetPowerSummaryByIdentityId_Handler,
		},
		{
			MethodName: "ListPowerSummary",
			Handler:    _ResourceService_ListPowerSummary_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "lib/center/api/resource.proto",
}

func (m *PublishPowerRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *PublishPowerRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *PublishPowerRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Power != nil {
		{
			size, err := m.Power.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintResource(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *PublishPowerResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *PublishPowerResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *PublishPowerResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.PowerId) > 0 {
		i -= len(m.PowerId)
		copy(dAtA[i:], m.PowerId)
		i = encodeVarintResource(dAtA, i, uint64(len(m.PowerId)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Msg) > 0 {
		i -= len(m.Msg)
		copy(dAtA[i:], m.Msg)
		i = encodeVarintResource(dAtA, i, uint64(len(m.Msg)))
		i--
		dAtA[i] = 0x12
	}
	if m.Status != 0 {
		i = encodeVarintResource(dAtA, i, uint64(m.Status))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *RevokePowerRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *RevokePowerRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *RevokePowerRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.PowerId) > 0 {
		i -= len(m.PowerId)
		copy(dAtA[i:], m.PowerId)
		i = encodeVarintResource(dAtA, i, uint64(len(m.PowerId)))
		i--
		dAtA[i] = 0x12
	}
	if m.Owner != nil {
		{
			size, err := m.Owner.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintResource(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *PowerSummary) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *PowerSummary) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *PowerSummary) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.State != 0 {
		i = encodeVarintResource(dAtA, i, uint64(m.State))
		i--
		dAtA[i] = 0x18
	}
	if m.TotalTaskCount != 0 {
		i = encodeVarintResource(dAtA, i, uint64(m.TotalTaskCount))
		i--
		dAtA[i] = 0x10
	}
	if m.Information != nil {
		{
			size, err := m.Information.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintResource(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *PowerSummaryResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *PowerSummaryResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *PowerSummaryResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.PowerSummary != nil {
		{
			size, err := m.PowerSummary.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintResource(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	if m.Owner != nil {
		{
			size, err := m.Owner.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintResource(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *ListPowerSummaryResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ListPowerSummaryResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ListPowerSummaryResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Powers) > 0 {
		for iNdEx := len(m.Powers) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Powers[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintResource(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *GetPowerSummaryByIdentityRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetPowerSummaryByIdentityRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GetPowerSummaryByIdentityRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.IdentityId) > 0 {
		i -= len(m.IdentityId)
		copy(dAtA[i:], m.IdentityId)
		i = encodeVarintResource(dAtA, i, uint64(len(m.IdentityId)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *ListPowerRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ListPowerRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ListPowerRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.PageSize != 0 {
		i = encodeVarintResource(dAtA, i, uint64(m.PageSize))
		i--
		dAtA[i] = 0x10
	}
	if m.LastUpdated != 0 {
		i = encodeVarintResource(dAtA, i, uint64(m.LastUpdated))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *ListPowerResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ListPowerResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ListPowerResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Powers) > 0 {
		for iNdEx := len(m.Powers) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Powers[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintResource(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *SyncPowerRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *SyncPowerRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *SyncPowerRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Power != nil {
		{
			size, err := m.Power.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintResource(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func encodeVarintResource(dAtA []byte, offset int, v uint64) int {
	offset -= sovResource(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *PublishPowerRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Power != nil {
		l = m.Power.Size()
		n += 1 + l + sovResource(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *PublishPowerResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Status != 0 {
		n += 1 + sovResource(uint64(m.Status))
	}
	l = len(m.Msg)
	if l > 0 {
		n += 1 + l + sovResource(uint64(l))
	}
	l = len(m.PowerId)
	if l > 0 {
		n += 1 + l + sovResource(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *RevokePowerRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Owner != nil {
		l = m.Owner.Size()
		n += 1 + l + sovResource(uint64(l))
	}
	l = len(m.PowerId)
	if l > 0 {
		n += 1 + l + sovResource(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *PowerSummary) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Information != nil {
		l = m.Information.Size()
		n += 1 + l + sovResource(uint64(l))
	}
	if m.TotalTaskCount != 0 {
		n += 1 + sovResource(uint64(m.TotalTaskCount))
	}
	if m.State != 0 {
		n += 1 + sovResource(uint64(m.State))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *PowerSummaryResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Owner != nil {
		l = m.Owner.Size()
		n += 1 + l + sovResource(uint64(l))
	}
	if m.PowerSummary != nil {
		l = m.PowerSummary.Size()
		n += 1 + l + sovResource(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ListPowerSummaryResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Powers) > 0 {
		for _, e := range m.Powers {
			l = e.Size()
			n += 1 + l + sovResource(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *GetPowerSummaryByIdentityRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.IdentityId)
	if l > 0 {
		n += 1 + l + sovResource(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ListPowerRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.LastUpdated != 0 {
		n += 1 + sovResource(uint64(m.LastUpdated))
	}
	if m.PageSize != 0 {
		n += 1 + sovResource(uint64(m.PageSize))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ListPowerResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Powers) > 0 {
		for _, e := range m.Powers {
			l = e.Size()
			n += 1 + l + sovResource(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *SyncPowerRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Power != nil {
		l = m.Power.Size()
		n += 1 + l + sovResource(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func sovResource(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozResource(x uint64) (n int) {
	return sovResource(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *PublishPowerRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowResource
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: PublishPowerRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: PublishPowerRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Power", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowResource
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthResource
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthResource
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Power == nil {
				m.Power = &types.ResourcePB{}
			}
			if err := m.Power.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipResource(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthResource
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *PublishPowerResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowResource
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: PublishPowerResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: PublishPowerResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Status", wireType)
			}
			m.Status = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowResource
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Status |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Msg", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowResource
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthResource
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthResource
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Msg = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PowerId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowResource
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthResource
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthResource
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PowerId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipResource(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthResource
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *RevokePowerRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowResource
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: RevokePowerRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: RevokePowerRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Owner", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowResource
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthResource
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthResource
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Owner == nil {
				m.Owner = &types.Organization{}
			}
			if err := m.Owner.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PowerId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowResource
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthResource
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthResource
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PowerId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipResource(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthResource
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *PowerSummary) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowResource
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: PowerSummary: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: PowerSummary: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Information", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowResource
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthResource
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthResource
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Information == nil {
				m.Information = &types.ResourceUsageOverview{}
			}
			if err := m.Information.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TotalTaskCount", wireType)
			}
			m.TotalTaskCount = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowResource
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.TotalTaskCount |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field State", wireType)
			}
			m.State = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowResource
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.State |= types.PowerState(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipResource(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthResource
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *PowerSummaryResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowResource
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: PowerSummaryResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: PowerSummaryResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Owner", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowResource
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthResource
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthResource
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Owner == nil {
				m.Owner = &types.Organization{}
			}
			if err := m.Owner.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PowerSummary", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowResource
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthResource
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthResource
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.PowerSummary == nil {
				m.PowerSummary = &PowerSummary{}
			}
			if err := m.PowerSummary.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipResource(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthResource
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ListPowerSummaryResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowResource
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ListPowerSummaryResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ListPowerSummaryResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Powers", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowResource
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthResource
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthResource
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Powers = append(m.Powers, &PowerSummaryResponse{})
			if err := m.Powers[len(m.Powers)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipResource(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthResource
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GetPowerSummaryByIdentityRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowResource
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetPowerSummaryByIdentityRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetPowerSummaryByIdentityRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field IdentityId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowResource
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthResource
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthResource
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.IdentityId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipResource(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthResource
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ListPowerRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowResource
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ListPowerRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ListPowerRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field LastUpdated", wireType)
			}
			m.LastUpdated = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowResource
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.LastUpdated |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PageSize", wireType)
			}
			m.PageSize = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowResource
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.PageSize |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipResource(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthResource
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ListPowerResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowResource
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ListPowerResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ListPowerResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Powers", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowResource
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthResource
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthResource
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Powers = append(m.Powers, &types.ResourcePB{})
			if err := m.Powers[len(m.Powers)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipResource(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthResource
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *SyncPowerRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowResource
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: SyncPowerRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: SyncPowerRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Power", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowResource
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthResource
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthResource
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Power == nil {
				m.Power = &types.LocalResourcePB{}
			}
			if err := m.Power.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipResource(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthResource
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipResource(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowResource
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowResource
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowResource
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthResource
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupResource
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthResource
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthResource        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowResource          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupResource = fmt.Errorf("proto: unexpected end of group")
)
