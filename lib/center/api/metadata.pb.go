// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: lib/center/api/metadata.proto

package api

import (
	context "context"
	fmt "fmt"
	proto "github.com/gogo/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

// 元数据摘要
type MetaDataSummary struct {
	// 元数据Id
	MetaDataId string `protobuf:"bytes,1,opt,name=meta_data_id,json=metaDataId,proto3" json:"meta_data_id,omitempty"`
	// 源文件Id
	OriginId string `protobuf:"bytes,2,opt,name=origin_id,json=originId,proto3" json:"origin_id,omitempty"`
	// 元数据名称 (表名)
	TableName string `protobuf:"bytes,3,opt,name=table_name,json=tableName,proto3" json:"table_name,omitempty"`
	// 元数据的描述 (摘要)
	Desc string `protobuf:"bytes,4,opt,name=desc,proto3" json:"desc,omitempty"`
	// 源文件存放路径
	FilePath string `protobuf:"bytes,5,opt,name=file_path,json=filePath,proto3" json:"file_path,omitempty"`
	// 源文件的行数
	Rows uint32 `protobuf:"varint,6,opt,name=rows,proto3" json:"rows,omitempty"`
	// 源文件的列数
	Columns uint32 `protobuf:"varint,7,opt,name=columns,proto3" json:"columns,omitempty"`
	// 源文件的大小
	Size_ uint64 `protobuf:"varint,8,opt,name=size,proto3" json:"size,omitempty"`
	// 源文件的类型 (目前只有 csv)
	FileType string `protobuf:"bytes,9,opt,name=file_type,json=fileType,proto3" json:"file_type,omitempty"`
	// 源文件是否包含标题
	HasTitle bool `protobuf:"varint,10,opt,name=has_title,json=hasTitle,proto3" json:"has_title,omitempty"`
	// 元数据的状态 (create: 还未发布的新表; release: 已发布的表; revoke: 已撤销的表)
	State                string   `protobuf:"bytes,11,opt,name=state,proto3" json:"state,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MetaDataSummary) Reset()         { *m = MetaDataSummary{} }
func (m *MetaDataSummary) String() string { return proto.CompactTextString(m) }
func (*MetaDataSummary) ProtoMessage()    {}
func (*MetaDataSummary) Descriptor() ([]byte, []int) {
	return fileDescriptor_95cdd10181701ff1, []int{0}
}
func (m *MetaDataSummary) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MetaDataSummary) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MetaDataSummary.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MetaDataSummary) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MetaDataSummary.Merge(m, src)
}
func (m *MetaDataSummary) XXX_Size() int {
	return m.Size()
}
func (m *MetaDataSummary) XXX_DiscardUnknown() {
	xxx_messageInfo_MetaDataSummary.DiscardUnknown(m)
}

var xxx_messageInfo_MetaDataSummary proto.InternalMessageInfo

func (m *MetaDataSummary) GetMetaDataId() string {
	if m != nil {
		return m.MetaDataId
	}
	return ""
}

func (m *MetaDataSummary) GetOriginId() string {
	if m != nil {
		return m.OriginId
	}
	return ""
}

func (m *MetaDataSummary) GetTableName() string {
	if m != nil {
		return m.TableName
	}
	return ""
}

func (m *MetaDataSummary) GetDesc() string {
	if m != nil {
		return m.Desc
	}
	return ""
}

func (m *MetaDataSummary) GetFilePath() string {
	if m != nil {
		return m.FilePath
	}
	return ""
}

func (m *MetaDataSummary) GetRows() uint32 {
	if m != nil {
		return m.Rows
	}
	return 0
}

func (m *MetaDataSummary) GetColumns() uint32 {
	if m != nil {
		return m.Columns
	}
	return 0
}

func (m *MetaDataSummary) GetSize_() uint64 {
	if m != nil {
		return m.Size_
	}
	return 0
}

func (m *MetaDataSummary) GetFileType() string {
	if m != nil {
		return m.FileType
	}
	return ""
}

func (m *MetaDataSummary) GetHasTitle() bool {
	if m != nil {
		return m.HasTitle
	}
	return false
}

func (m *MetaDataSummary) GetState() string {
	if m != nil {
		return m.State
	}
	return ""
}

// 源文件的列的描述详情
type MetaDataColumnDetail struct {
	// 列的索引
	Cindex uint32 `protobuf:"varint,1,opt,name=cindex,proto3" json:"cindex,omitempty"`
	// 列名
	Cname string `protobuf:"bytes,2,opt,name=cname,proto3" json:"cname,omitempty"`
	// 列类型
	Ctype string `protobuf:"bytes,3,opt,name=ctype,proto3" json:"ctype,omitempty"`
	// 列大小(单位: byte)
	Csize uint32 `protobuf:"varint,4,opt,name=csize,proto3" json:"csize,omitempty"`
	// 列描述
	Ccomment             string   `protobuf:"bytes,5,opt,name=ccomment,proto3" json:"ccomment,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MetaDataColumnDetail) Reset()         { *m = MetaDataColumnDetail{} }
func (m *MetaDataColumnDetail) String() string { return proto.CompactTextString(m) }
func (*MetaDataColumnDetail) ProtoMessage()    {}
func (*MetaDataColumnDetail) Descriptor() ([]byte, []int) {
	return fileDescriptor_95cdd10181701ff1, []int{1}
}
func (m *MetaDataColumnDetail) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MetaDataColumnDetail) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MetaDataColumnDetail.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MetaDataColumnDetail) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MetaDataColumnDetail.Merge(m, src)
}
func (m *MetaDataColumnDetail) XXX_Size() int {
	return m.Size()
}
func (m *MetaDataColumnDetail) XXX_DiscardUnknown() {
	xxx_messageInfo_MetaDataColumnDetail.DiscardUnknown(m)
}

var xxx_messageInfo_MetaDataColumnDetail proto.InternalMessageInfo

func (m *MetaDataColumnDetail) GetCindex() uint32 {
	if m != nil {
		return m.Cindex
	}
	return 0
}

func (m *MetaDataColumnDetail) GetCname() string {
	if m != nil {
		return m.Cname
	}
	return ""
}

func (m *MetaDataColumnDetail) GetCtype() string {
	if m != nil {
		return m.Ctype
	}
	return ""
}

func (m *MetaDataColumnDetail) GetCsize() uint32 {
	if m != nil {
		return m.Csize
	}
	return 0
}

func (m *MetaDataColumnDetail) GetCcomment() string {
	if m != nil {
		return m.Ccomment
	}
	return ""
}

type MetaDataSaveRequest struct {
	MetaSummary          *MetaDataSummary        `protobuf:"bytes,1,opt,name=meta_summary,json=metaSummary,proto3" json:"meta_summary,omitempty"`
	ColumnMeta           []*MetaDataColumnDetail `protobuf:"bytes,2,rep,name=column_meta,json=columnMeta,proto3" json:"column_meta,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *MetaDataSaveRequest) Reset()         { *m = MetaDataSaveRequest{} }
func (m *MetaDataSaveRequest) String() string { return proto.CompactTextString(m) }
func (*MetaDataSaveRequest) ProtoMessage()    {}
func (*MetaDataSaveRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_95cdd10181701ff1, []int{2}
}
func (m *MetaDataSaveRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MetaDataSaveRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MetaDataSaveRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MetaDataSaveRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MetaDataSaveRequest.Merge(m, src)
}
func (m *MetaDataSaveRequest) XXX_Size() int {
	return m.Size()
}
func (m *MetaDataSaveRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MetaDataSaveRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MetaDataSaveRequest proto.InternalMessageInfo

func (m *MetaDataSaveRequest) GetMetaSummary() *MetaDataSummary {
	if m != nil {
		return m.MetaSummary
	}
	return nil
}

func (m *MetaDataSaveRequest) GetColumnMeta() []*MetaDataColumnDetail {
	if m != nil {
		return m.ColumnMeta
	}
	return nil
}

type MetaDataSaveResponse struct {
	Status int32  `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Msg    string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	// 元数据id
	MetaDataId           string   `protobuf:"bytes,3,opt,name=meta_data_id,json=metaDataId,proto3" json:"meta_data_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MetaDataSaveResponse) Reset()         { *m = MetaDataSaveResponse{} }
func (m *MetaDataSaveResponse) String() string { return proto.CompactTextString(m) }
func (*MetaDataSaveResponse) ProtoMessage()    {}
func (*MetaDataSaveResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_95cdd10181701ff1, []int{3}
}
func (m *MetaDataSaveResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MetaDataSaveResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MetaDataSaveResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MetaDataSaveResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MetaDataSaveResponse.Merge(m, src)
}
func (m *MetaDataSaveResponse) XXX_Size() int {
	return m.Size()
}
func (m *MetaDataSaveResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MetaDataSaveResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MetaDataSaveResponse proto.InternalMessageInfo

func (m *MetaDataSaveResponse) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *MetaDataSaveResponse) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

func (m *MetaDataSaveResponse) GetMetaDataId() string {
	if m != nil {
		return m.MetaDataId
	}
	return ""
}

type RevokeMetaDataRequest struct {
	// 元数据拥有者
	Owner                *Organization `protobuf:"bytes,1,opt,name=owner,proto3" json:"owner,omitempty"`
	MetaDataId           string        `protobuf:"bytes,2,opt,name=meta_data_id,json=metaDataId,proto3" json:"meta_data_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *RevokeMetaDataRequest) Reset()         { *m = RevokeMetaDataRequest{} }
func (m *RevokeMetaDataRequest) String() string { return proto.CompactTextString(m) }
func (*RevokeMetaDataRequest) ProtoMessage()    {}
func (*RevokeMetaDataRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_95cdd10181701ff1, []int{4}
}
func (m *RevokeMetaDataRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *RevokeMetaDataRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_RevokeMetaDataRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *RevokeMetaDataRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RevokeMetaDataRequest.Merge(m, src)
}
func (m *RevokeMetaDataRequest) XXX_Size() int {
	return m.Size()
}
func (m *RevokeMetaDataRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RevokeMetaDataRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RevokeMetaDataRequest proto.InternalMessageInfo

func (m *RevokeMetaDataRequest) GetOwner() *Organization {
	if m != nil {
		return m.Owner
	}
	return nil
}

func (m *RevokeMetaDataRequest) GetMetaDataId() string {
	if m != nil {
		return m.MetaDataId
	}
	return ""
}

// 获取元数据摘要列表响应参数
type MetaDataSummaryListResponse struct {
	// 摘要信息列表
	MetadataSummaryList  []*MetaDataSummaryOwner `protobuf:"bytes,1,rep,name=metadata_summary_list,json=metadataSummaryList,proto3" json:"metadata_summary_list,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *MetaDataSummaryListResponse) Reset()         { *m = MetaDataSummaryListResponse{} }
func (m *MetaDataSummaryListResponse) String() string { return proto.CompactTextString(m) }
func (*MetaDataSummaryListResponse) ProtoMessage()    {}
func (*MetaDataSummaryListResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_95cdd10181701ff1, []int{5}
}
func (m *MetaDataSummaryListResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MetaDataSummaryListResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MetaDataSummaryListResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MetaDataSummaryListResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MetaDataSummaryListResponse.Merge(m, src)
}
func (m *MetaDataSummaryListResponse) XXX_Size() int {
	return m.Size()
}
func (m *MetaDataSummaryListResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MetaDataSummaryListResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MetaDataSummaryListResponse proto.InternalMessageInfo

func (m *MetaDataSummaryListResponse) GetMetadataSummaryList() []*MetaDataSummaryOwner {
	if m != nil {
		return m.MetadataSummaryList
	}
	return nil
}

type MetaDataSummaryOwner struct {
	// 元数据的拥有者
	Owner *Organization `protobuf:"bytes,1,opt,name=owner,proto3" json:"owner,omitempty"`
	// 元文件摘要主体
	Information          *MetaDataSummary `protobuf:"bytes,2,opt,name=information,proto3" json:"information,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *MetaDataSummaryOwner) Reset()         { *m = MetaDataSummaryOwner{} }
func (m *MetaDataSummaryOwner) String() string { return proto.CompactTextString(m) }
func (*MetaDataSummaryOwner) ProtoMessage()    {}
func (*MetaDataSummaryOwner) Descriptor() ([]byte, []int) {
	return fileDescriptor_95cdd10181701ff1, []int{6}
}
func (m *MetaDataSummaryOwner) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MetaDataSummaryOwner) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MetaDataSummaryOwner.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MetaDataSummaryOwner) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MetaDataSummaryOwner.Merge(m, src)
}
func (m *MetaDataSummaryOwner) XXX_Size() int {
	return m.Size()
}
func (m *MetaDataSummaryOwner) XXX_DiscardUnknown() {
	xxx_messageInfo_MetaDataSummaryOwner.DiscardUnknown(m)
}

var xxx_messageInfo_MetaDataSummaryOwner proto.InternalMessageInfo

func (m *MetaDataSummaryOwner) GetOwner() *Organization {
	if m != nil {
		return m.Owner
	}
	return nil
}

func (m *MetaDataSummaryOwner) GetInformation() *MetaDataSummary {
	if m != nil {
		return m.Information
	}
	return nil
}

// 根据状态获取元数据摘要列表
type MetaDataSummaryByStateRequest struct {
	State                string   `protobuf:"bytes,1,opt,name=state,proto3" json:"state,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MetaDataSummaryByStateRequest) Reset()         { *m = MetaDataSummaryByStateRequest{} }
func (m *MetaDataSummaryByStateRequest) String() string { return proto.CompactTextString(m) }
func (*MetaDataSummaryByStateRequest) ProtoMessage()    {}
func (*MetaDataSummaryByStateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_95cdd10181701ff1, []int{7}
}
func (m *MetaDataSummaryByStateRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MetaDataSummaryByStateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MetaDataSummaryByStateRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MetaDataSummaryByStateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MetaDataSummaryByStateRequest.Merge(m, src)
}
func (m *MetaDataSummaryByStateRequest) XXX_Size() int {
	return m.Size()
}
func (m *MetaDataSummaryByStateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MetaDataSummaryByStateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MetaDataSummaryByStateRequest proto.InternalMessageInfo

func (m *MetaDataSummaryByStateRequest) GetState() string {
	if m != nil {
		return m.State
	}
	return ""
}

// 根据状态查询元数据摘要列表响应参数
type MetaDataSummaryByStateResponse struct {
	MetaList             []*MetaDataSummaryOwner `protobuf:"bytes,1,rep,name=meta_list,json=metaList,proto3" json:"meta_list,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *MetaDataSummaryByStateResponse) Reset()         { *m = MetaDataSummaryByStateResponse{} }
func (m *MetaDataSummaryByStateResponse) String() string { return proto.CompactTextString(m) }
func (*MetaDataSummaryByStateResponse) ProtoMessage()    {}
func (*MetaDataSummaryByStateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_95cdd10181701ff1, []int{8}
}
func (m *MetaDataSummaryByStateResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MetaDataSummaryByStateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MetaDataSummaryByStateResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MetaDataSummaryByStateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MetaDataSummaryByStateResponse.Merge(m, src)
}
func (m *MetaDataSummaryByStateResponse) XXX_Size() int {
	return m.Size()
}
func (m *MetaDataSummaryByStateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MetaDataSummaryByStateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MetaDataSummaryByStateResponse proto.InternalMessageInfo

func (m *MetaDataSummaryByStateResponse) GetMetaList() []*MetaDataSummaryOwner {
	if m != nil {
		return m.MetaList
	}
	return nil
}

type Metadata struct {
	Owner                *Organization           `protobuf:"bytes,1,opt,name=owner,proto3" json:"owner,omitempty"`
	MetaSummary          *MetaDataSummary        `protobuf:"bytes,2,opt,name=meta_summary,json=metaSummary,proto3" json:"meta_summary,omitempty"`
	ColumnMeta           []*MetaDataColumnDetail `protobuf:"bytes,3,rep,name=column_meta,json=columnMeta,proto3" json:"column_meta,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *Metadata) Reset()         { *m = Metadata{} }
func (m *Metadata) String() string { return proto.CompactTextString(m) }
func (*Metadata) ProtoMessage()    {}
func (*Metadata) Descriptor() ([]byte, []int) {
	return fileDescriptor_95cdd10181701ff1, []int{9}
}
func (m *Metadata) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Metadata) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Metadata.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Metadata) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Metadata.Merge(m, src)
}
func (m *Metadata) XXX_Size() int {
	return m.Size()
}
func (m *Metadata) XXX_DiscardUnknown() {
	xxx_messageInfo_Metadata.DiscardUnknown(m)
}

var xxx_messageInfo_Metadata proto.InternalMessageInfo

func (m *Metadata) GetOwner() *Organization {
	if m != nil {
		return m.Owner
	}
	return nil
}

func (m *Metadata) GetMetaSummary() *MetaDataSummary {
	if m != nil {
		return m.MetaSummary
	}
	return nil
}

func (m *Metadata) GetColumnMeta() []*MetaDataColumnDetail {
	if m != nil {
		return m.ColumnMeta
	}
	return nil
}

type MetadataListRequest struct {
	LastUpdateTime       uint64   `protobuf:"varint,1,opt,name=last_update_time,json=lastUpdateTime,proto3" json:"last_update_time,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MetadataListRequest) Reset()         { *m = MetadataListRequest{} }
func (m *MetadataListRequest) String() string { return proto.CompactTextString(m) }
func (*MetadataListRequest) ProtoMessage()    {}
func (*MetadataListRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_95cdd10181701ff1, []int{10}
}
func (m *MetadataListRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MetadataListRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MetadataListRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MetadataListRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MetadataListRequest.Merge(m, src)
}
func (m *MetadataListRequest) XXX_Size() int {
	return m.Size()
}
func (m *MetadataListRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MetadataListRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MetadataListRequest proto.InternalMessageInfo

func (m *MetadataListRequest) GetLastUpdateTime() uint64 {
	if m != nil {
		return m.LastUpdateTime
	}
	return 0
}

type MetadataListResponse struct {
	MetadataList         []*Metadata `protobuf:"bytes,1,rep,name=metadata_list,json=metadataList,proto3" json:"metadata_list,omitempty"`
	LastUpdateTime       uint64      `protobuf:"varint,2,opt,name=last_update_time,json=lastUpdateTime,proto3" json:"last_update_time,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *MetadataListResponse) Reset()         { *m = MetadataListResponse{} }
func (m *MetadataListResponse) String() string { return proto.CompactTextString(m) }
func (*MetadataListResponse) ProtoMessage()    {}
func (*MetadataListResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_95cdd10181701ff1, []int{11}
}
func (m *MetadataListResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MetadataListResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MetadataListResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MetadataListResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MetadataListResponse.Merge(m, src)
}
func (m *MetadataListResponse) XXX_Size() int {
	return m.Size()
}
func (m *MetadataListResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MetadataListResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MetadataListResponse proto.InternalMessageInfo

func (m *MetadataListResponse) GetMetadataList() []*Metadata {
	if m != nil {
		return m.MetadataList
	}
	return nil
}

func (m *MetadataListResponse) GetLastUpdateTime() uint64 {
	if m != nil {
		return m.LastUpdateTime
	}
	return 0
}

type MetadataByIdRequest struct {
	MetadataId           string   `protobuf:"bytes,1,opt,name=metadata_id,json=metadataId,proto3" json:"metadata_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MetadataByIdRequest) Reset()         { *m = MetadataByIdRequest{} }
func (m *MetadataByIdRequest) String() string { return proto.CompactTextString(m) }
func (*MetadataByIdRequest) ProtoMessage()    {}
func (*MetadataByIdRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_95cdd10181701ff1, []int{12}
}
func (m *MetadataByIdRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MetadataByIdRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MetadataByIdRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MetadataByIdRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MetadataByIdRequest.Merge(m, src)
}
func (m *MetadataByIdRequest) XXX_Size() int {
	return m.Size()
}
func (m *MetadataByIdRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MetadataByIdRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MetadataByIdRequest proto.InternalMessageInfo

func (m *MetadataByIdRequest) GetMetadataId() string {
	if m != nil {
		return m.MetadataId
	}
	return ""
}

type MetadataByIdResponse struct {
	Metadata             *Metadata `protobuf:"bytes,1,opt,name=metadata,proto3" json:"metadata,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *MetadataByIdResponse) Reset()         { *m = MetadataByIdResponse{} }
func (m *MetadataByIdResponse) String() string { return proto.CompactTextString(m) }
func (*MetadataByIdResponse) ProtoMessage()    {}
func (*MetadataByIdResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_95cdd10181701ff1, []int{13}
}
func (m *MetadataByIdResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MetadataByIdResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MetadataByIdResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MetadataByIdResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MetadataByIdResponse.Merge(m, src)
}
func (m *MetadataByIdResponse) XXX_Size() int {
	return m.Size()
}
func (m *MetadataByIdResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MetadataByIdResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MetadataByIdResponse proto.InternalMessageInfo

func (m *MetadataByIdResponse) GetMetadata() *Metadata {
	if m != nil {
		return m.Metadata
	}
	return nil
}

func init() {
	proto.RegisterType((*MetaDataSummary)(nil), "api.MetaDataSummary")
	proto.RegisterType((*MetaDataColumnDetail)(nil), "api.MetaDataColumnDetail")
	proto.RegisterType((*MetaDataSaveRequest)(nil), "api.MetaDataSaveRequest")
	proto.RegisterType((*MetaDataSaveResponse)(nil), "api.MetaDataSaveResponse")
	proto.RegisterType((*RevokeMetaDataRequest)(nil), "api.RevokeMetaDataRequest")
	proto.RegisterType((*MetaDataSummaryListResponse)(nil), "api.MetaDataSummaryListResponse")
	proto.RegisterType((*MetaDataSummaryOwner)(nil), "api.MetaDataSummaryOwner")
	proto.RegisterType((*MetaDataSummaryByStateRequest)(nil), "api.MetaDataSummaryByStateRequest")
	proto.RegisterType((*MetaDataSummaryByStateResponse)(nil), "api.MetaDataSummaryByStateResponse")
	proto.RegisterType((*Metadata)(nil), "api.Metadata")
	proto.RegisterType((*MetadataListRequest)(nil), "api.MetadataListRequest")
	proto.RegisterType((*MetadataListResponse)(nil), "api.MetadataListResponse")
	proto.RegisterType((*MetadataByIdRequest)(nil), "api.MetadataByIdRequest")
	proto.RegisterType((*MetadataByIdResponse)(nil), "api.MetadataByIdResponse")
}

func init() { proto.RegisterFile("lib/center/api/metadata.proto", fileDescriptor_95cdd10181701ff1) }

var fileDescriptor_95cdd10181701ff1 = []byte{
	// 883 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x56, 0xdd, 0x6e, 0xe3, 0x44,
	0x14, 0x96, 0x93, 0xb4, 0x9b, 0x9c, 0xb4, 0xbb, 0x8b, 0xdb, 0xad, 0xdc, 0x54, 0x2d, 0x51, 0x6e,
	0x08, 0x17, 0x24, 0xa8, 0x88, 0x22, 0x71, 0x01, 0xda, 0x76, 0xd9, 0x55, 0x25, 0xca, 0xa2, 0x69,
	0x91, 0x10, 0x37, 0xd6, 0xd8, 0x3e, 0x4d, 0x46, 0x78, 0x3c, 0xc6, 0x33, 0x69, 0xc9, 0x3e, 0x02,
	0xe2, 0x41, 0xb8, 0xe6, 0x29, 0xb8, 0xe4, 0x11, 0x50, 0xdf, 0x03, 0x09, 0xcd, 0x8c, 0xed, 0xd8,
	0x6e, 0x2a, 0x95, 0xbd, 0xf3, 0xf9, 0xff, 0xce, 0x77, 0xce, 0xcc, 0x18, 0x0e, 0x63, 0x16, 0x4c,
	0x43, 0x4c, 0x14, 0x66, 0x53, 0x9a, 0xb2, 0x29, 0x47, 0x45, 0x23, 0xaa, 0xe8, 0x24, 0xcd, 0x84,
	0x12, 0x6e, 0x9b, 0xa6, 0x6c, 0xb0, 0xdf, 0xf0, 0x09, 0xa8, 0x44, 0x6b, 0x1f, 0x1c, 0xcc, 0x84,
	0x98, 0xc5, 0x38, 0x35, 0x52, 0xb0, 0xb8, 0x9e, 0x22, 0x4f, 0xd5, 0xd2, 0x1a, 0x47, 0x7f, 0xb6,
	0xe0, 0xd9, 0x05, 0x2a, 0xfa, 0x8a, 0x2a, 0x7a, 0xb9, 0xe0, 0x9c, 0x66, 0x4b, 0x77, 0x08, 0x5b,
	0xba, 0x84, 0xaf, 0x6b, 0xf8, 0x2c, 0xf2, 0x9c, 0xa1, 0x33, 0xee, 0x11, 0xe0, 0xb9, 0xdb, 0x79,
	0xe4, 0x1e, 0x40, 0x4f, 0x64, 0x6c, 0xc6, 0x12, 0x6d, 0x6e, 0x19, 0x73, 0xd7, 0x2a, 0xce, 0x23,
	0xf7, 0x10, 0x40, 0xd1, 0x20, 0x46, 0x3f, 0xa1, 0x1c, 0xbd, 0xb6, 0xb1, 0xf6, 0x8c, 0xe6, 0x3b,
	0xca, 0xd1, 0x75, 0xa1, 0x13, 0xa1, 0x0c, 0xbd, 0x8e, 0x31, 0x98, 0x6f, 0x9d, 0xef, 0x9a, 0xc5,
	0xe8, 0xa7, 0x54, 0xcd, 0xbd, 0x0d, 0x9b, 0x4f, 0x2b, 0xbe, 0xa7, 0x6a, 0xae, 0x03, 0x32, 0x71,
	0x2b, 0xbd, 0xcd, 0xa1, 0x33, 0xde, 0x26, 0xe6, 0xdb, 0xf5, 0xe0, 0x49, 0x28, 0xe2, 0x05, 0x4f,
	0xa4, 0xf7, 0xc4, 0xa8, 0x0b, 0x51, 0x7b, 0x4b, 0xf6, 0x0e, 0xbd, 0xee, 0xd0, 0x19, 0x77, 0x88,
	0xf9, 0x2e, 0xd3, 0xab, 0x65, 0x8a, 0x5e, 0x6f, 0x95, 0xfe, 0x6a, 0x99, 0x1a, 0xe3, 0x9c, 0x4a,
	0x5f, 0x31, 0x15, 0xa3, 0x07, 0x43, 0x67, 0xdc, 0x25, 0xdd, 0x39, 0x95, 0x57, 0x5a, 0x76, 0x77,
	0x61, 0x43, 0x2a, 0xaa, 0xd0, 0xeb, 0x9b, 0x28, 0x2b, 0x8c, 0x7e, 0x77, 0x60, 0xb7, 0x20, 0xed,
	0xcc, 0xd4, 0x7d, 0x85, 0x8a, 0xb2, 0xd8, 0xdd, 0x83, 0xcd, 0x90, 0x25, 0x11, 0xfe, 0x6a, 0x38,
	0xdb, 0x26, 0xb9, 0xa4, 0xd3, 0x84, 0x86, 0x0d, 0xcb, 0x95, 0x15, 0x8c, 0xd6, 0x40, 0x6a, 0xe7,
	0x5a, 0x2d, 0x18, 0xad, 0xe9, 0xa0, 0x63, 0x52, 0x58, 0xc1, 0x1d, 0x40, 0x37, 0x0c, 0x05, 0xe7,
	0x98, 0xa8, 0x82, 0xa0, 0x42, 0x1e, 0xfd, 0xe6, 0xc0, 0x4e, 0x39, 0x43, 0x7a, 0x83, 0x04, 0x7f,
	0x59, 0xa0, 0x54, 0xee, 0x17, 0xf9, 0x1c, 0xa5, 0x9d, 0xab, 0xc1, 0xd4, 0x3f, 0xde, 0x9d, 0xd0,
	0x94, 0x4d, 0x1a, 0x33, 0x27, 0x7d, 0xed, 0x59, 0x2c, 0xc0, 0x97, 0xd0, 0xb7, 0x74, 0xfa, 0x5a,
	0xeb, 0xb5, 0x86, 0xed, 0x71, 0xff, 0x78, 0xbf, 0x16, 0x57, 0x6d, 0x9b, 0x80, 0xf5, 0xd6, 0xb6,
	0x51, 0xb0, 0xa2, 0xc6, 0x62, 0x91, 0xa9, 0x48, 0x24, 0x6a, 0x6a, 0x34, 0x79, 0x0b, 0x69, 0x60,
	0x6c, 0x90, 0x5c, 0x72, 0x9f, 0x43, 0x9b, 0xcb, 0x59, 0x4e, 0x8c, 0xfe, 0xbc, 0xb7, 0x7e, 0xed,
	0xe6, 0xfa, 0x8d, 0x02, 0x78, 0x41, 0xf0, 0x46, 0xfc, 0x8c, 0x45, 0xa5, 0xa2, 0xe3, 0x8f, 0x60,
	0x43, 0xdc, 0x26, 0x98, 0xe5, 0xad, 0x7e, 0x60, 0x20, 0xbf, 0xcd, 0x66, 0x34, 0x61, 0xef, 0xa8,
	0x62, 0x22, 0x21, 0xd6, 0x7e, 0xaf, 0x46, 0xeb, 0x5e, 0x8d, 0x18, 0x0e, 0x1a, 0x1c, 0x7d, 0xcb,
	0xa4, 0x2a, 0xdb, 0xb9, 0x80, 0x17, 0xc5, 0x31, 0x2c, 0xf8, 0xf5, 0x63, 0x26, 0x95, 0xe7, 0xac,
	0x21, 0x2b, 0x4f, 0xf0, 0x56, 0x97, 0x26, 0x3b, 0x45, 0x5c, 0x25, 0xed, 0xe8, 0xb6, 0xc2, 0x5a,
	0xc5, 0xf9, 0xf1, 0x0d, 0x9d, 0x40, 0x9f, 0x25, 0xd7, 0x22, 0xe3, 0x46, 0x6b, 0xfa, 0x79, 0x70,
	0xd4, 0x15, 0xc7, 0xd1, 0xe7, 0x70, 0xd8, 0xb0, 0x9f, 0x2e, 0x2f, 0xf5, 0x92, 0x17, 0x94, 0x96,
	0x27, 0xc0, 0xa9, 0x9e, 0x80, 0x1f, 0xe1, 0xe8, 0xa1, 0xb0, 0x9c, 0xa0, 0x13, 0xe8, 0x19, 0x86,
	0x1f, 0x47, 0x4a, 0x57, 0xfb, 0x1a, 0x26, 0xfe, 0x70, 0xa0, 0x7b, 0x91, 0x33, 0xf4, 0xf8, 0xf6,
	0x9b, 0xab, 0xde, 0x7a, 0xcf, 0x55, 0x6f, 0xff, 0x9f, 0x55, 0xff, 0xda, 0x1e, 0x3b, 0x8d, 0xd4,
	0xee, 0x86, 0x65, 0x6c, 0x0c, 0xcf, 0x63, 0x2a, 0x95, 0xbf, 0x48, 0x23, 0xaa, 0xd0, 0x57, 0x8c,
	0x5b, 0xf2, 0x3a, 0xe4, 0xa9, 0xd6, 0xff, 0x60, 0xd4, 0x57, 0x8c, 0xe3, 0x48, 0xd9, 0xa9, 0xaf,
	0x12, 0xe4, 0xdc, 0x1d, 0xc3, 0x76, 0xb9, 0x5c, 0x15, 0xfe, 0xb6, 0x4b, 0x58, 0xda, 0x42, 0xb6,
	0x78, 0x25, 0x76, 0x6d, 0xd5, 0xd6, 0xda, 0xaa, 0x27, 0x2b, 0xd8, 0xa7, 0xcb, 0xf3, 0xa8, 0x80,
	0xfd, 0x21, 0xf4, 0xcb, 0xa2, 0xf5, 0x4b, 0x3f, 0xb2, 0x27, 0xe2, 0xe5, 0x0a, 0xad, 0x8d, 0xcb,
	0xd1, 0x7e, 0x0c, 0xdd, 0xc2, 0x2b, 0x9f, 0x53, 0x03, 0x68, 0x69, 0x3e, 0xfe, 0xb7, 0xfa, 0xda,
	0x60, 0x76, 0xc3, 0x42, 0x74, 0xcf, 0x60, 0xab, 0x7a, 0x61, 0xb8, 0x5e, 0x7d, 0x68, 0xab, 0xfb,
	0x6c, 0xb0, 0xbf, 0xc6, 0x92, 0x63, 0x20, 0xb0, 0xf7, 0x06, 0xd5, 0x9a, 0x03, 0xeb, 0xee, 0x4d,
	0xec, 0xf3, 0x37, 0x29, 0x9e, 0xbf, 0xc9, 0x37, 0xfa, 0xf9, 0x1b, 0x0c, 0xd7, 0xed, 0x46, 0x6d,
	0x0a, 0xaf, 0xe1, 0x59, 0x9e, 0xb3, 0x24, 0xd9, 0xab, 0x35, 0x56, 0x19, 0x7a, 0x05, 0xdb, 0xbd,
	0x69, 0xd6, 0xf3, 0x68, 0xea, 0x1a, 0x79, 0x2a, 0x53, 0x68, 0xe4, 0xa9, 0xf1, 0xfc, 0x12, 0x9e,
	0xd6, 0x6f, 0x3d, 0x77, 0x60, 0x9c, 0xd7, 0x5e, 0x85, 0x83, 0x1d, 0x63, 0xbb, 0x64, 0x3c, 0x8d,
	0x4b, 0x9a, 0x4e, 0xbf, 0xfa, 0xeb, 0xee, 0xc8, 0xf9, 0xfb, 0xee, 0xc8, 0xf9, 0xe7, 0xee, 0xc8,
	0xf9, 0xe9, 0xd3, 0x19, 0x53, 0xf3, 0x45, 0x30, 0x09, 0x05, 0x9f, 0x12, 0x21, 0x51, 0x29, 0xfa,
	0x3a, 0x16, 0xb7, 0xd3, 0x33, 0x9a, 0x65, 0x0c, 0xb3, 0x4f, 0xde, 0x88, 0x69, 0xfd, 0xaf, 0x22,
	0xd8, 0x34, 0x24, 0x7e, 0xf6, 0x5f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x37, 0x35, 0xf9, 0xb8, 0x92,
	0x08, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MetaDataServiceClient is the client API for MetaDataService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MetaDataServiceClient interface {
	// 保存元数据
	MetaDataSave(ctx context.Context, in *MetaDataSaveRequest, opts ...grpc.CallOption) (*MetaDataSaveResponse, error)
	// 查看全部元数据摘要列表 (不包含 列字段描述)，状态为可用
	GetMetaDataSummaryList(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*MetaDataSummaryListResponse, error)
	// 新增：元数据详细列表（用于将数据同步给管理台，考虑checkpoint同步点位）
	GetMetadataList(ctx context.Context, in *MetadataListRequest, opts ...grpc.CallOption) (*MetadataListResponse, error)
	// 新增，根据元数据ID查询元数据详情
	GetMetadataById(ctx context.Context, in *MetadataByIdRequest, opts ...grpc.CallOption) (*MetadataByIdResponse, error)
	// 撤销元数据 (从底层网络撤销)
	RevokeMetaData(ctx context.Context, in *RevokeMetaDataRequest, opts ...grpc.CallOption) (*SimpleResponse, error)
}

type metaDataServiceClient struct {
	cc *grpc.ClientConn
}

func NewMetaDataServiceClient(cc *grpc.ClientConn) MetaDataServiceClient {
	return &metaDataServiceClient{cc}
}

func (c *metaDataServiceClient) MetaDataSave(ctx context.Context, in *MetaDataSaveRequest, opts ...grpc.CallOption) (*MetaDataSaveResponse, error) {
	out := new(MetaDataSaveResponse)
	err := c.cc.Invoke(ctx, "/api.MetaDataService/MetaDataSave", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *metaDataServiceClient) GetMetaDataSummaryList(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*MetaDataSummaryListResponse, error) {
	out := new(MetaDataSummaryListResponse)
	err := c.cc.Invoke(ctx, "/api.MetaDataService/GetMetaDataSummaryList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *metaDataServiceClient) GetMetadataList(ctx context.Context, in *MetadataListRequest, opts ...grpc.CallOption) (*MetadataListResponse, error) {
	out := new(MetadataListResponse)
	err := c.cc.Invoke(ctx, "/api.MetaDataService/GetMetadataList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *metaDataServiceClient) GetMetadataById(ctx context.Context, in *MetadataByIdRequest, opts ...grpc.CallOption) (*MetadataByIdResponse, error) {
	out := new(MetadataByIdResponse)
	err := c.cc.Invoke(ctx, "/api.MetaDataService/GetMetadataById", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *metaDataServiceClient) RevokeMetaData(ctx context.Context, in *RevokeMetaDataRequest, opts ...grpc.CallOption) (*SimpleResponse, error) {
	out := new(SimpleResponse)
	err := c.cc.Invoke(ctx, "/api.MetaDataService/RevokeMetaData", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MetaDataServiceServer is the server API for MetaDataService service.
type MetaDataServiceServer interface {
	// 保存元数据
	MetaDataSave(context.Context, *MetaDataSaveRequest) (*MetaDataSaveResponse, error)
	// 查看全部元数据摘要列表 (不包含 列字段描述)，状态为可用
	GetMetaDataSummaryList(context.Context, *emptypb.Empty) (*MetaDataSummaryListResponse, error)
	// 新增：元数据详细列表（用于将数据同步给管理台，考虑checkpoint同步点位）
	GetMetadataList(context.Context, *MetadataListRequest) (*MetadataListResponse, error)
	// 新增，根据元数据ID查询元数据详情
	GetMetadataById(context.Context, *MetadataByIdRequest) (*MetadataByIdResponse, error)
	// 撤销元数据 (从底层网络撤销)
	RevokeMetaData(context.Context, *RevokeMetaDataRequest) (*SimpleResponse, error)
}

// UnimplementedMetaDataServiceServer can be embedded to have forward compatible implementations.
type UnimplementedMetaDataServiceServer struct {
}

func (*UnimplementedMetaDataServiceServer) MetaDataSave(ctx context.Context, req *MetaDataSaveRequest) (*MetaDataSaveResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MetaDataSave not implemented")
}
func (*UnimplementedMetaDataServiceServer) GetMetaDataSummaryList(ctx context.Context, req *emptypb.Empty) (*MetaDataSummaryListResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetMetaDataSummaryList not implemented")
}
func (*UnimplementedMetaDataServiceServer) GetMetadataList(ctx context.Context, req *MetadataListRequest) (*MetadataListResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetMetadataList not implemented")
}
func (*UnimplementedMetaDataServiceServer) GetMetadataById(ctx context.Context, req *MetadataByIdRequest) (*MetadataByIdResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetMetadataById not implemented")
}
func (*UnimplementedMetaDataServiceServer) RevokeMetaData(ctx context.Context, req *RevokeMetaDataRequest) (*SimpleResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RevokeMetaData not implemented")
}

func RegisterMetaDataServiceServer(s *grpc.Server, srv MetaDataServiceServer) {
	s.RegisterService(&_MetaDataService_serviceDesc, srv)
}

func _MetaDataService_MetaDataSave_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MetaDataSaveRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MetaDataServiceServer).MetaDataSave(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.MetaDataService/MetaDataSave",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MetaDataServiceServer).MetaDataSave(ctx, req.(*MetaDataSaveRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MetaDataService_GetMetaDataSummaryList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(emptypb.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MetaDataServiceServer).GetMetaDataSummaryList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.MetaDataService/GetMetaDataSummaryList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MetaDataServiceServer).GetMetaDataSummaryList(ctx, req.(*emptypb.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _MetaDataService_GetMetadataList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MetadataListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MetaDataServiceServer).GetMetadataList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.MetaDataService/GetMetadataList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MetaDataServiceServer).GetMetadataList(ctx, req.(*MetadataListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MetaDataService_GetMetadataById_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MetadataByIdRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MetaDataServiceServer).GetMetadataById(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.MetaDataService/GetMetadataById",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MetaDataServiceServer).GetMetadataById(ctx, req.(*MetadataByIdRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MetaDataService_RevokeMetaData_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RevokeMetaDataRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MetaDataServiceServer).RevokeMetaData(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.MetaDataService/RevokeMetaData",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MetaDataServiceServer).RevokeMetaData(ctx, req.(*RevokeMetaDataRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _MetaDataService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "api.MetaDataService",
	HandlerType: (*MetaDataServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "MetaDataSave",
			Handler:    _MetaDataService_MetaDataSave_Handler,
		},
		{
			MethodName: "GetMetaDataSummaryList",
			Handler:    _MetaDataService_GetMetaDataSummaryList_Handler,
		},
		{
			MethodName: "GetMetadataList",
			Handler:    _MetaDataService_GetMetadataList_Handler,
		},
		{
			MethodName: "GetMetadataById",
			Handler:    _MetaDataService_GetMetadataById_Handler,
		},
		{
			MethodName: "RevokeMetaData",
			Handler:    _MetaDataService_RevokeMetaData_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "lib/center/api/metadata.proto",
}

func (m *MetaDataSummary) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MetaDataSummary) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MetaDataSummary) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.State) > 0 {
		i -= len(m.State)
		copy(dAtA[i:], m.State)
		i = encodeVarintMetadata(dAtA, i, uint64(len(m.State)))
		i--
		dAtA[i] = 0x5a
	}
	if m.HasTitle {
		i--
		if m.HasTitle {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x50
	}
	if len(m.FileType) > 0 {
		i -= len(m.FileType)
		copy(dAtA[i:], m.FileType)
		i = encodeVarintMetadata(dAtA, i, uint64(len(m.FileType)))
		i--
		dAtA[i] = 0x4a
	}
	if m.Size_ != 0 {
		i = encodeVarintMetadata(dAtA, i, uint64(m.Size_))
		i--
		dAtA[i] = 0x40
	}
	if m.Columns != 0 {
		i = encodeVarintMetadata(dAtA, i, uint64(m.Columns))
		i--
		dAtA[i] = 0x38
	}
	if m.Rows != 0 {
		i = encodeVarintMetadata(dAtA, i, uint64(m.Rows))
		i--
		dAtA[i] = 0x30
	}
	if len(m.FilePath) > 0 {
		i -= len(m.FilePath)
		copy(dAtA[i:], m.FilePath)
		i = encodeVarintMetadata(dAtA, i, uint64(len(m.FilePath)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.Desc) > 0 {
		i -= len(m.Desc)
		copy(dAtA[i:], m.Desc)
		i = encodeVarintMetadata(dAtA, i, uint64(len(m.Desc)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.TableName) > 0 {
		i -= len(m.TableName)
		copy(dAtA[i:], m.TableName)
		i = encodeVarintMetadata(dAtA, i, uint64(len(m.TableName)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.OriginId) > 0 {
		i -= len(m.OriginId)
		copy(dAtA[i:], m.OriginId)
		i = encodeVarintMetadata(dAtA, i, uint64(len(m.OriginId)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.MetaDataId) > 0 {
		i -= len(m.MetaDataId)
		copy(dAtA[i:], m.MetaDataId)
		i = encodeVarintMetadata(dAtA, i, uint64(len(m.MetaDataId)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MetaDataColumnDetail) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MetaDataColumnDetail) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MetaDataColumnDetail) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Ccomment) > 0 {
		i -= len(m.Ccomment)
		copy(dAtA[i:], m.Ccomment)
		i = encodeVarintMetadata(dAtA, i, uint64(len(m.Ccomment)))
		i--
		dAtA[i] = 0x2a
	}
	if m.Csize != 0 {
		i = encodeVarintMetadata(dAtA, i, uint64(m.Csize))
		i--
		dAtA[i] = 0x20
	}
	if len(m.Ctype) > 0 {
		i -= len(m.Ctype)
		copy(dAtA[i:], m.Ctype)
		i = encodeVarintMetadata(dAtA, i, uint64(len(m.Ctype)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Cname) > 0 {
		i -= len(m.Cname)
		copy(dAtA[i:], m.Cname)
		i = encodeVarintMetadata(dAtA, i, uint64(len(m.Cname)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cindex != 0 {
		i = encodeVarintMetadata(dAtA, i, uint64(m.Cindex))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *MetaDataSaveRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MetaDataSaveRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MetaDataSaveRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.ColumnMeta) > 0 {
		for iNdEx := len(m.ColumnMeta) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.ColumnMeta[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintMetadata(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x12
		}
	}
	if m.MetaSummary != nil {
		{
			size, err := m.MetaSummary.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintMetadata(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MetaDataSaveResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MetaDataSaveResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MetaDataSaveResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.MetaDataId) > 0 {
		i -= len(m.MetaDataId)
		copy(dAtA[i:], m.MetaDataId)
		i = encodeVarintMetadata(dAtA, i, uint64(len(m.MetaDataId)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Msg) > 0 {
		i -= len(m.Msg)
		copy(dAtA[i:], m.Msg)
		i = encodeVarintMetadata(dAtA, i, uint64(len(m.Msg)))
		i--
		dAtA[i] = 0x12
	}
	if m.Status != 0 {
		i = encodeVarintMetadata(dAtA, i, uint64(m.Status))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *RevokeMetaDataRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *RevokeMetaDataRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *RevokeMetaDataRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.MetaDataId) > 0 {
		i -= len(m.MetaDataId)
		copy(dAtA[i:], m.MetaDataId)
		i = encodeVarintMetadata(dAtA, i, uint64(len(m.MetaDataId)))
		i--
		dAtA[i] = 0x12
	}
	if m.Owner != nil {
		{
			size, err := m.Owner.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintMetadata(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MetaDataSummaryListResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MetaDataSummaryListResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MetaDataSummaryListResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.MetadataSummaryList) > 0 {
		for iNdEx := len(m.MetadataSummaryList) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.MetadataSummaryList[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintMetadata(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *MetaDataSummaryOwner) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MetaDataSummaryOwner) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MetaDataSummaryOwner) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Information != nil {
		{
			size, err := m.Information.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintMetadata(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	if m.Owner != nil {
		{
			size, err := m.Owner.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintMetadata(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MetaDataSummaryByStateRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MetaDataSummaryByStateRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MetaDataSummaryByStateRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.State) > 0 {
		i -= len(m.State)
		copy(dAtA[i:], m.State)
		i = encodeVarintMetadata(dAtA, i, uint64(len(m.State)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MetaDataSummaryByStateResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MetaDataSummaryByStateResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MetaDataSummaryByStateResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.MetaList) > 0 {
		for iNdEx := len(m.MetaList) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.MetaList[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintMetadata(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *Metadata) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Metadata) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Metadata) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.ColumnMeta) > 0 {
		for iNdEx := len(m.ColumnMeta) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.ColumnMeta[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintMetadata(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x1a
		}
	}
	if m.MetaSummary != nil {
		{
			size, err := m.MetaSummary.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintMetadata(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	if m.Owner != nil {
		{
			size, err := m.Owner.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintMetadata(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MetadataListRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MetadataListRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MetadataListRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.LastUpdateTime != 0 {
		i = encodeVarintMetadata(dAtA, i, uint64(m.LastUpdateTime))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *MetadataListResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MetadataListResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MetadataListResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.LastUpdateTime != 0 {
		i = encodeVarintMetadata(dAtA, i, uint64(m.LastUpdateTime))
		i--
		dAtA[i] = 0x10
	}
	if len(m.MetadataList) > 0 {
		for iNdEx := len(m.MetadataList) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.MetadataList[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintMetadata(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *MetadataByIdRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MetadataByIdRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MetadataByIdRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.MetadataId) > 0 {
		i -= len(m.MetadataId)
		copy(dAtA[i:], m.MetadataId)
		i = encodeVarintMetadata(dAtA, i, uint64(len(m.MetadataId)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MetadataByIdResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MetadataByIdResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MetadataByIdResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Metadata != nil {
		{
			size, err := m.Metadata.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintMetadata(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func encodeVarintMetadata(dAtA []byte, offset int, v uint64) int {
	offset -= sovMetadata(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *MetaDataSummary) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.MetaDataId)
	if l > 0 {
		n += 1 + l + sovMetadata(uint64(l))
	}
	l = len(m.OriginId)
	if l > 0 {
		n += 1 + l + sovMetadata(uint64(l))
	}
	l = len(m.TableName)
	if l > 0 {
		n += 1 + l + sovMetadata(uint64(l))
	}
	l = len(m.Desc)
	if l > 0 {
		n += 1 + l + sovMetadata(uint64(l))
	}
	l = len(m.FilePath)
	if l > 0 {
		n += 1 + l + sovMetadata(uint64(l))
	}
	if m.Rows != 0 {
		n += 1 + sovMetadata(uint64(m.Rows))
	}
	if m.Columns != 0 {
		n += 1 + sovMetadata(uint64(m.Columns))
	}
	if m.Size_ != 0 {
		n += 1 + sovMetadata(uint64(m.Size_))
	}
	l = len(m.FileType)
	if l > 0 {
		n += 1 + l + sovMetadata(uint64(l))
	}
	if m.HasTitle {
		n += 2
	}
	l = len(m.State)
	if l > 0 {
		n += 1 + l + sovMetadata(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *MetaDataColumnDetail) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cindex != 0 {
		n += 1 + sovMetadata(uint64(m.Cindex))
	}
	l = len(m.Cname)
	if l > 0 {
		n += 1 + l + sovMetadata(uint64(l))
	}
	l = len(m.Ctype)
	if l > 0 {
		n += 1 + l + sovMetadata(uint64(l))
	}
	if m.Csize != 0 {
		n += 1 + sovMetadata(uint64(m.Csize))
	}
	l = len(m.Ccomment)
	if l > 0 {
		n += 1 + l + sovMetadata(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *MetaDataSaveRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.MetaSummary != nil {
		l = m.MetaSummary.Size()
		n += 1 + l + sovMetadata(uint64(l))
	}
	if len(m.ColumnMeta) > 0 {
		for _, e := range m.ColumnMeta {
			l = e.Size()
			n += 1 + l + sovMetadata(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *MetaDataSaveResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Status != 0 {
		n += 1 + sovMetadata(uint64(m.Status))
	}
	l = len(m.Msg)
	if l > 0 {
		n += 1 + l + sovMetadata(uint64(l))
	}
	l = len(m.MetaDataId)
	if l > 0 {
		n += 1 + l + sovMetadata(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *RevokeMetaDataRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Owner != nil {
		l = m.Owner.Size()
		n += 1 + l + sovMetadata(uint64(l))
	}
	l = len(m.MetaDataId)
	if l > 0 {
		n += 1 + l + sovMetadata(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *MetaDataSummaryListResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.MetadataSummaryList) > 0 {
		for _, e := range m.MetadataSummaryList {
			l = e.Size()
			n += 1 + l + sovMetadata(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *MetaDataSummaryOwner) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Owner != nil {
		l = m.Owner.Size()
		n += 1 + l + sovMetadata(uint64(l))
	}
	if m.Information != nil {
		l = m.Information.Size()
		n += 1 + l + sovMetadata(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *MetaDataSummaryByStateRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.State)
	if l > 0 {
		n += 1 + l + sovMetadata(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *MetaDataSummaryByStateResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.MetaList) > 0 {
		for _, e := range m.MetaList {
			l = e.Size()
			n += 1 + l + sovMetadata(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *Metadata) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Owner != nil {
		l = m.Owner.Size()
		n += 1 + l + sovMetadata(uint64(l))
	}
	if m.MetaSummary != nil {
		l = m.MetaSummary.Size()
		n += 1 + l + sovMetadata(uint64(l))
	}
	if len(m.ColumnMeta) > 0 {
		for _, e := range m.ColumnMeta {
			l = e.Size()
			n += 1 + l + sovMetadata(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *MetadataListRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.LastUpdateTime != 0 {
		n += 1 + sovMetadata(uint64(m.LastUpdateTime))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *MetadataListResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.MetadataList) > 0 {
		for _, e := range m.MetadataList {
			l = e.Size()
			n += 1 + l + sovMetadata(uint64(l))
		}
	}
	if m.LastUpdateTime != 0 {
		n += 1 + sovMetadata(uint64(m.LastUpdateTime))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *MetadataByIdRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.MetadataId)
	if l > 0 {
		n += 1 + l + sovMetadata(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *MetadataByIdResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Metadata != nil {
		l = m.Metadata.Size()
		n += 1 + l + sovMetadata(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func sovMetadata(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozMetadata(x uint64) (n int) {
	return sovMetadata(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *MetaDataSummary) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMetadata
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MetaDataSummary: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MetaDataSummary: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MetaDataId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMetadata
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMetadata
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMetadata
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.MetaDataId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field OriginId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMetadata
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMetadata
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMetadata
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.OriginId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TableName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMetadata
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMetadata
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMetadata
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.TableName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Desc", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMetadata
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMetadata
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMetadata
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Desc = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FilePath", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMetadata
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMetadata
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMetadata
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.FilePath = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Rows", wireType)
			}
			m.Rows = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMetadata
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Rows |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 7:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Columns", wireType)
			}
			m.Columns = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMetadata
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Columns |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 8:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Size_", wireType)
			}
			m.Size_ = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMetadata
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Size_ |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 9:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FileType", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMetadata
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMetadata
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMetadata
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.FileType = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 10:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field HasTitle", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMetadata
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.HasTitle = bool(v != 0)
		case 11:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field State", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMetadata
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMetadata
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMetadata
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.State = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMetadata(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthMetadata
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MetaDataColumnDetail) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMetadata
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MetaDataColumnDetail: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MetaDataColumnDetail: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cindex", wireType)
			}
			m.Cindex = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMetadata
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cindex |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cname", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMetadata
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMetadata
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMetadata
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Cname = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Ctype", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMetadata
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMetadata
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMetadata
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Ctype = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Csize", wireType)
			}
			m.Csize = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMetadata
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Csize |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Ccomment", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMetadata
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMetadata
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMetadata
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Ccomment = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMetadata(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthMetadata
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MetaDataSaveRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMetadata
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MetaDataSaveRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MetaDataSaveRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MetaSummary", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMetadata
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMetadata
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMetadata
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.MetaSummary == nil {
				m.MetaSummary = &MetaDataSummary{}
			}
			if err := m.MetaSummary.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ColumnMeta", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMetadata
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMetadata
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMetadata
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ColumnMeta = append(m.ColumnMeta, &MetaDataColumnDetail{})
			if err := m.ColumnMeta[len(m.ColumnMeta)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMetadata(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthMetadata
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MetaDataSaveResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMetadata
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MetaDataSaveResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MetaDataSaveResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Status", wireType)
			}
			m.Status = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMetadata
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Status |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Msg", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMetadata
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMetadata
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMetadata
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Msg = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MetaDataId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMetadata
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMetadata
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMetadata
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.MetaDataId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMetadata(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthMetadata
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *RevokeMetaDataRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMetadata
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: RevokeMetaDataRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: RevokeMetaDataRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Owner", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMetadata
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMetadata
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMetadata
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Owner == nil {
				m.Owner = &Organization{}
			}
			if err := m.Owner.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MetaDataId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMetadata
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMetadata
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMetadata
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.MetaDataId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMetadata(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthMetadata
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MetaDataSummaryListResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMetadata
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MetaDataSummaryListResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MetaDataSummaryListResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MetadataSummaryList", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMetadata
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMetadata
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMetadata
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.MetadataSummaryList = append(m.MetadataSummaryList, &MetaDataSummaryOwner{})
			if err := m.MetadataSummaryList[len(m.MetadataSummaryList)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMetadata(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthMetadata
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MetaDataSummaryOwner) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMetadata
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MetaDataSummaryOwner: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MetaDataSummaryOwner: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Owner", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMetadata
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMetadata
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMetadata
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Owner == nil {
				m.Owner = &Organization{}
			}
			if err := m.Owner.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Information", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMetadata
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMetadata
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMetadata
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Information == nil {
				m.Information = &MetaDataSummary{}
			}
			if err := m.Information.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMetadata(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthMetadata
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MetaDataSummaryByStateRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMetadata
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MetaDataSummaryByStateRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MetaDataSummaryByStateRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field State", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMetadata
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMetadata
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMetadata
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.State = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMetadata(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthMetadata
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MetaDataSummaryByStateResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMetadata
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MetaDataSummaryByStateResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MetaDataSummaryByStateResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MetaList", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMetadata
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMetadata
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMetadata
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.MetaList = append(m.MetaList, &MetaDataSummaryOwner{})
			if err := m.MetaList[len(m.MetaList)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMetadata(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthMetadata
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Metadata) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMetadata
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Metadata: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Metadata: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Owner", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMetadata
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMetadata
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMetadata
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Owner == nil {
				m.Owner = &Organization{}
			}
			if err := m.Owner.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MetaSummary", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMetadata
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMetadata
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMetadata
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.MetaSummary == nil {
				m.MetaSummary = &MetaDataSummary{}
			}
			if err := m.MetaSummary.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ColumnMeta", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMetadata
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMetadata
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMetadata
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ColumnMeta = append(m.ColumnMeta, &MetaDataColumnDetail{})
			if err := m.ColumnMeta[len(m.ColumnMeta)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMetadata(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthMetadata
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MetadataListRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMetadata
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MetadataListRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MetadataListRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field LastUpdateTime", wireType)
			}
			m.LastUpdateTime = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMetadata
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.LastUpdateTime |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipMetadata(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthMetadata
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MetadataListResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMetadata
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MetadataListResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MetadataListResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MetadataList", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMetadata
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMetadata
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMetadata
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.MetadataList = append(m.MetadataList, &Metadata{})
			if err := m.MetadataList[len(m.MetadataList)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field LastUpdateTime", wireType)
			}
			m.LastUpdateTime = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMetadata
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.LastUpdateTime |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipMetadata(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthMetadata
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MetadataByIdRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMetadata
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MetadataByIdRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MetadataByIdRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MetadataId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMetadata
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMetadata
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMetadata
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.MetadataId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMetadata(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthMetadata
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MetadataByIdResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMetadata
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MetadataByIdResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MetadataByIdResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Metadata", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMetadata
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMetadata
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMetadata
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Metadata == nil {
				m.Metadata = &Metadata{}
			}
			if err := m.Metadata.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMetadata(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthMetadata
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipMetadata(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowMetadata
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowMetadata
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowMetadata
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthMetadata
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupMetadata
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthMetadata
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthMetadata        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowMetadata          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupMetadata = fmt.Errorf("proto: unexpected end of group")
)
