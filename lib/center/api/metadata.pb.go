// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: lib/center/api/metadata.proto

package api

import (
	context "context"
	fmt "fmt"
	common "github.com/RosettaFlow/Carrier-Go/lib/common"
	types "github.com/RosettaFlow/Carrier-Go/lib/types"
	proto "github.com/gogo/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	_ "google.golang.org/protobuf/types/known/emptypb"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type SaveMetadataRequest struct {
	Metadata             *types.MetadataPB `protobuf:"bytes,1,opt,name=metadata,proto3" json:"metadata,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *SaveMetadataRequest) Reset()         { *m = SaveMetadataRequest{} }
func (m *SaveMetadataRequest) String() string { return proto.CompactTextString(m) }
func (*SaveMetadataRequest) ProtoMessage()    {}
func (*SaveMetadataRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_95cdd10181701ff1, []int{0}
}
func (m *SaveMetadataRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *SaveMetadataRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_SaveMetadataRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *SaveMetadataRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SaveMetadataRequest.Merge(m, src)
}
func (m *SaveMetadataRequest) XXX_Size() int {
	return m.Size()
}
func (m *SaveMetadataRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SaveMetadataRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SaveMetadataRequest proto.InternalMessageInfo

func (m *SaveMetadataRequest) GetMetadata() *types.MetadataPB {
	if m != nil {
		return m.Metadata
	}
	return nil
}

type RevokeMetadataRequest struct {
	// 元数据拥有者
	Owner                *common.Organization `protobuf:"bytes,1,opt,name=owner,proto3" json:"owner,omitempty"`
	MetadataId           string               `protobuf:"bytes,2,opt,name=metadata_id,json=metadataId,proto3" json:"metadata_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *RevokeMetadataRequest) Reset()         { *m = RevokeMetadataRequest{} }
func (m *RevokeMetadataRequest) String() string { return proto.CompactTextString(m) }
func (*RevokeMetadataRequest) ProtoMessage()    {}
func (*RevokeMetadataRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_95cdd10181701ff1, []int{1}
}
func (m *RevokeMetadataRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *RevokeMetadataRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_RevokeMetadataRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *RevokeMetadataRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RevokeMetadataRequest.Merge(m, src)
}
func (m *RevokeMetadataRequest) XXX_Size() int {
	return m.Size()
}
func (m *RevokeMetadataRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RevokeMetadataRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RevokeMetadataRequest proto.InternalMessageInfo

func (m *RevokeMetadataRequest) GetOwner() *common.Organization {
	if m != nil {
		return m.Owner
	}
	return nil
}

func (m *RevokeMetadataRequest) GetMetadataId() string {
	if m != nil {
		return m.MetadataId
	}
	return ""
}

type ListMetadataSummaryRequest struct {
	LastUpdated          uint64   `protobuf:"varint,1,opt,name=last_updated,json=lastUpdated,proto3" json:"last_updated,omitempty"`
	PageSize             uint64   `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListMetadataSummaryRequest) Reset()         { *m = ListMetadataSummaryRequest{} }
func (m *ListMetadataSummaryRequest) String() string { return proto.CompactTextString(m) }
func (*ListMetadataSummaryRequest) ProtoMessage()    {}
func (*ListMetadataSummaryRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_95cdd10181701ff1, []int{2}
}
func (m *ListMetadataSummaryRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ListMetadataSummaryRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ListMetadataSummaryRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ListMetadataSummaryRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListMetadataSummaryRequest.Merge(m, src)
}
func (m *ListMetadataSummaryRequest) XXX_Size() int {
	return m.Size()
}
func (m *ListMetadataSummaryRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListMetadataSummaryRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListMetadataSummaryRequest proto.InternalMessageInfo

func (m *ListMetadataSummaryRequest) GetLastUpdated() uint64 {
	if m != nil {
		return m.LastUpdated
	}
	return 0
}

func (m *ListMetadataSummaryRequest) GetPageSize() uint64 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

// 获取元数据摘要列表响应参数
type ListMetadataSummaryResponse struct {
	// 摘要信息列表
	MetadataSummaries    []*MetadataSummaryOwner `protobuf:"bytes,1,rep,name=metadata_summaries,json=metadataSummaries,proto3" json:"metadata_summaries,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *ListMetadataSummaryResponse) Reset()         { *m = ListMetadataSummaryResponse{} }
func (m *ListMetadataSummaryResponse) String() string { return proto.CompactTextString(m) }
func (*ListMetadataSummaryResponse) ProtoMessage()    {}
func (*ListMetadataSummaryResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_95cdd10181701ff1, []int{3}
}
func (m *ListMetadataSummaryResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ListMetadataSummaryResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ListMetadataSummaryResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ListMetadataSummaryResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListMetadataSummaryResponse.Merge(m, src)
}
func (m *ListMetadataSummaryResponse) XXX_Size() int {
	return m.Size()
}
func (m *ListMetadataSummaryResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListMetadataSummaryResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListMetadataSummaryResponse proto.InternalMessageInfo

func (m *ListMetadataSummaryResponse) GetMetadataSummaries() []*MetadataSummaryOwner {
	if m != nil {
		return m.MetadataSummaries
	}
	return nil
}

type MetadataSummaryOwner struct {
	// 元数据的拥有者
	Owner *common.Organization `protobuf:"bytes,1,opt,name=owner,proto3" json:"owner,omitempty"`
	// 元文件摘要主体
	Information          *types.MetadataSummary `protobuf:"bytes,2,opt,name=information,proto3" json:"information,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *MetadataSummaryOwner) Reset()         { *m = MetadataSummaryOwner{} }
func (m *MetadataSummaryOwner) String() string { return proto.CompactTextString(m) }
func (*MetadataSummaryOwner) ProtoMessage()    {}
func (*MetadataSummaryOwner) Descriptor() ([]byte, []int) {
	return fileDescriptor_95cdd10181701ff1, []int{4}
}
func (m *MetadataSummaryOwner) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MetadataSummaryOwner) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MetadataSummaryOwner.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MetadataSummaryOwner) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MetadataSummaryOwner.Merge(m, src)
}
func (m *MetadataSummaryOwner) XXX_Size() int {
	return m.Size()
}
func (m *MetadataSummaryOwner) XXX_DiscardUnknown() {
	xxx_messageInfo_MetadataSummaryOwner.DiscardUnknown(m)
}

var xxx_messageInfo_MetadataSummaryOwner proto.InternalMessageInfo

func (m *MetadataSummaryOwner) GetOwner() *common.Organization {
	if m != nil {
		return m.Owner
	}
	return nil
}

func (m *MetadataSummaryOwner) GetInformation() *types.MetadataSummary {
	if m != nil {
		return m.Information
	}
	return nil
}

// 根据状态获取元数据摘要列表
type ListMetadataSummaryByStateRequest struct {
	State                string   `protobuf:"bytes,1,opt,name=state,proto3" json:"state,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListMetadataSummaryByStateRequest) Reset()         { *m = ListMetadataSummaryByStateRequest{} }
func (m *ListMetadataSummaryByStateRequest) String() string { return proto.CompactTextString(m) }
func (*ListMetadataSummaryByStateRequest) ProtoMessage()    {}
func (*ListMetadataSummaryByStateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_95cdd10181701ff1, []int{5}
}
func (m *ListMetadataSummaryByStateRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ListMetadataSummaryByStateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ListMetadataSummaryByStateRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ListMetadataSummaryByStateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListMetadataSummaryByStateRequest.Merge(m, src)
}
func (m *ListMetadataSummaryByStateRequest) XXX_Size() int {
	return m.Size()
}
func (m *ListMetadataSummaryByStateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListMetadataSummaryByStateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListMetadataSummaryByStateRequest proto.InternalMessageInfo

func (m *ListMetadataSummaryByStateRequest) GetState() string {
	if m != nil {
		return m.State
	}
	return ""
}

// 根据状态查询元数据摘要列表响应参数
type ListMetadataSummaryByStateResponse struct {
	Metadata             []*MetadataSummaryOwner `protobuf:"bytes,1,rep,name=metadata,proto3" json:"metadata,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *ListMetadataSummaryByStateResponse) Reset()         { *m = ListMetadataSummaryByStateResponse{} }
func (m *ListMetadataSummaryByStateResponse) String() string { return proto.CompactTextString(m) }
func (*ListMetadataSummaryByStateResponse) ProtoMessage()    {}
func (*ListMetadataSummaryByStateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_95cdd10181701ff1, []int{6}
}
func (m *ListMetadataSummaryByStateResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ListMetadataSummaryByStateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ListMetadataSummaryByStateResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ListMetadataSummaryByStateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListMetadataSummaryByStateResponse.Merge(m, src)
}
func (m *ListMetadataSummaryByStateResponse) XXX_Size() int {
	return m.Size()
}
func (m *ListMetadataSummaryByStateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListMetadataSummaryByStateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListMetadataSummaryByStateResponse proto.InternalMessageInfo

func (m *ListMetadataSummaryByStateResponse) GetMetadata() []*MetadataSummaryOwner {
	if m != nil {
		return m.Metadata
	}
	return nil
}

type ListMetadataRequest struct {
	LastUpdated          uint64   `protobuf:"varint,1,opt,name=last_updated,json=lastUpdated,proto3" json:"last_updated,omitempty"`
	PageSize             uint64   `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListMetadataRequest) Reset()         { *m = ListMetadataRequest{} }
func (m *ListMetadataRequest) String() string { return proto.CompactTextString(m) }
func (*ListMetadataRequest) ProtoMessage()    {}
func (*ListMetadataRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_95cdd10181701ff1, []int{7}
}
func (m *ListMetadataRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ListMetadataRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ListMetadataRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ListMetadataRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListMetadataRequest.Merge(m, src)
}
func (m *ListMetadataRequest) XXX_Size() int {
	return m.Size()
}
func (m *ListMetadataRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListMetadataRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListMetadataRequest proto.InternalMessageInfo

func (m *ListMetadataRequest) GetLastUpdated() uint64 {
	if m != nil {
		return m.LastUpdated
	}
	return 0
}

func (m *ListMetadataRequest) GetPageSize() uint64 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

type ListMetadataByIdentityIdRequest struct {
	LastUpdated          uint64   `protobuf:"varint,1,opt,name=last_updated,json=lastUpdated,proto3" json:"last_updated,omitempty"`
	PageSize             uint64   `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	IdentityId           string   `protobuf:"bytes,3,opt,name=identityId,proto3" json:"identityId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListMetadataByIdentityIdRequest) Reset()         { *m = ListMetadataByIdentityIdRequest{} }
func (m *ListMetadataByIdentityIdRequest) String() string { return proto.CompactTextString(m) }
func (*ListMetadataByIdentityIdRequest) ProtoMessage()    {}
func (*ListMetadataByIdentityIdRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_95cdd10181701ff1, []int{8}
}
func (m *ListMetadataByIdentityIdRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ListMetadataByIdentityIdRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ListMetadataByIdentityIdRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ListMetadataByIdentityIdRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListMetadataByIdentityIdRequest.Merge(m, src)
}
func (m *ListMetadataByIdentityIdRequest) XXX_Size() int {
	return m.Size()
}
func (m *ListMetadataByIdentityIdRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListMetadataByIdentityIdRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListMetadataByIdentityIdRequest proto.InternalMessageInfo

func (m *ListMetadataByIdentityIdRequest) GetLastUpdated() uint64 {
	if m != nil {
		return m.LastUpdated
	}
	return 0
}

func (m *ListMetadataByIdentityIdRequest) GetPageSize() uint64 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *ListMetadataByIdentityIdRequest) GetIdentityId() string {
	if m != nil {
		return m.IdentityId
	}
	return ""
}

type ListMetadataResponse struct {
	Metadata             []*types.MetadataPB `protobuf:"bytes,1,rep,name=metadata,proto3" json:"metadata,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *ListMetadataResponse) Reset()         { *m = ListMetadataResponse{} }
func (m *ListMetadataResponse) String() string { return proto.CompactTextString(m) }
func (*ListMetadataResponse) ProtoMessage()    {}
func (*ListMetadataResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_95cdd10181701ff1, []int{9}
}
func (m *ListMetadataResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ListMetadataResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ListMetadataResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ListMetadataResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListMetadataResponse.Merge(m, src)
}
func (m *ListMetadataResponse) XXX_Size() int {
	return m.Size()
}
func (m *ListMetadataResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListMetadataResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListMetadataResponse proto.InternalMessageInfo

func (m *ListMetadataResponse) GetMetadata() []*types.MetadataPB {
	if m != nil {
		return m.Metadata
	}
	return nil
}

type FindMetadataByIdRequest struct {
	MetadataId           string   `protobuf:"bytes,1,opt,name=metadata_id,json=metadataId,proto3" json:"metadata_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FindMetadataByIdRequest) Reset()         { *m = FindMetadataByIdRequest{} }
func (m *FindMetadataByIdRequest) String() string { return proto.CompactTextString(m) }
func (*FindMetadataByIdRequest) ProtoMessage()    {}
func (*FindMetadataByIdRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_95cdd10181701ff1, []int{10}
}
func (m *FindMetadataByIdRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *FindMetadataByIdRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_FindMetadataByIdRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *FindMetadataByIdRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FindMetadataByIdRequest.Merge(m, src)
}
func (m *FindMetadataByIdRequest) XXX_Size() int {
	return m.Size()
}
func (m *FindMetadataByIdRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_FindMetadataByIdRequest.DiscardUnknown(m)
}

var xxx_messageInfo_FindMetadataByIdRequest proto.InternalMessageInfo

func (m *FindMetadataByIdRequest) GetMetadataId() string {
	if m != nil {
		return m.MetadataId
	}
	return ""
}

type FindMetadataByIdResponse struct {
	Metadata             *types.MetadataPB `protobuf:"bytes,1,opt,name=metadata,proto3" json:"metadata,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *FindMetadataByIdResponse) Reset()         { *m = FindMetadataByIdResponse{} }
func (m *FindMetadataByIdResponse) String() string { return proto.CompactTextString(m) }
func (*FindMetadataByIdResponse) ProtoMessage()    {}
func (*FindMetadataByIdResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_95cdd10181701ff1, []int{11}
}
func (m *FindMetadataByIdResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *FindMetadataByIdResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_FindMetadataByIdResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *FindMetadataByIdResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FindMetadataByIdResponse.Merge(m, src)
}
func (m *FindMetadataByIdResponse) XXX_Size() int {
	return m.Size()
}
func (m *FindMetadataByIdResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_FindMetadataByIdResponse.DiscardUnknown(m)
}

var xxx_messageInfo_FindMetadataByIdResponse proto.InternalMessageInfo

func (m *FindMetadataByIdResponse) GetMetadata() *types.MetadataPB {
	if m != nil {
		return m.Metadata
	}
	return nil
}

func init() {
	proto.RegisterType((*SaveMetadataRequest)(nil), "api.SaveMetadataRequest")
	proto.RegisterType((*RevokeMetadataRequest)(nil), "api.RevokeMetadataRequest")
	proto.RegisterType((*ListMetadataSummaryRequest)(nil), "api.ListMetadataSummaryRequest")
	proto.RegisterType((*ListMetadataSummaryResponse)(nil), "api.ListMetadataSummaryResponse")
	proto.RegisterType((*MetadataSummaryOwner)(nil), "api.MetadataSummaryOwner")
	proto.RegisterType((*ListMetadataSummaryByStateRequest)(nil), "api.ListMetadataSummaryByStateRequest")
	proto.RegisterType((*ListMetadataSummaryByStateResponse)(nil), "api.ListMetadataSummaryByStateResponse")
	proto.RegisterType((*ListMetadataRequest)(nil), "api.ListMetadataRequest")
	proto.RegisterType((*ListMetadataByIdentityIdRequest)(nil), "api.ListMetadataByIdentityIdRequest")
	proto.RegisterType((*ListMetadataResponse)(nil), "api.ListMetadataResponse")
	proto.RegisterType((*FindMetadataByIdRequest)(nil), "api.FindMetadataByIdRequest")
	proto.RegisterType((*FindMetadataByIdResponse)(nil), "api.FindMetadataByIdResponse")
}

func init() { proto.RegisterFile("lib/center/api/metadata.proto", fileDescriptor_95cdd10181701ff1) }

var fileDescriptor_95cdd10181701ff1 = []byte{
	// 635 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x55, 0x5f, 0x4f, 0xd3, 0x50,
	0x14, 0x4f, 0x1d, 0x18, 0x38, 0x25, 0x2a, 0x17, 0xd0, 0x52, 0x64, 0x8c, 0xc6, 0x07, 0x5e, 0x68,
	0xc9, 0x8c, 0x89, 0xfa, 0xe0, 0xc3, 0x50, 0x74, 0x46, 0x83, 0xe9, 0x42, 0x62, 0xc4, 0x84, 0xdc,
	0xd1, 0x43, 0xbd, 0xba, 0xf6, 0xd6, 0xde, 0x3b, 0x48, 0x79, 0xd3, 0x4f, 0xe7, 0xa3, 0x1f, 0xc1,
	0xf0, 0x11, 0xfc, 0x04, 0x66, 0xb7, 0xed, 0xd6, 0x6e, 0xdd, 0x48, 0x0c, 0x8f, 0x3d, 0x7f, 0x7e,
	0xf7, 0xfc, 0xce, 0xf9, 0x9d, 0x53, 0xd8, 0xec, 0xb1, 0xae, 0x73, 0x8a, 0xa1, 0xc4, 0xd8, 0xa1,
	0x11, 0x73, 0x02, 0x94, 0xd4, 0xa3, 0x92, 0xda, 0x51, 0xcc, 0x25, 0x27, 0x35, 0x1a, 0x31, 0x73,
	0x4d, 0xc5, 0xf0, 0x20, 0xe0, 0xa1, 0xd3, 0xa5, 0x02, 0x53, 0x9f, 0x69, 0x0c, 0xcc, 0x32, 0x89,
	0x50, 0x8c, 0x65, 0x99, 0x1b, 0x3e, 0xe7, 0x7e, 0x0f, 0x1d, 0xf5, 0xd5, 0xed, 0x9f, 0x39, 0x18,
	0x44, 0x32, 0x49, 0x9d, 0xd6, 0x4b, 0x58, 0xe9, 0xd0, 0x73, 0x7c, 0x9f, 0xa5, 0xb8, 0xf8, 0xbd,
	0x8f, 0x42, 0x92, 0x5d, 0x58, 0xc8, 0x51, 0x0c, 0xad, 0xa1, 0xed, 0xe8, 0xcd, 0x65, 0x5b, 0x81,
	0xdb, 0x79, 0xe4, 0x87, 0x96, 0x3b, 0x0c, 0xb1, 0xbe, 0xc2, 0x9a, 0x8b, 0xe7, 0xfc, 0xdb, 0x04,
	0xce, 0x1e, 0xcc, 0xf3, 0x8b, 0x10, 0xe3, 0x0c, 0xc4, 0xb4, 0x69, 0xc4, 0xec, 0xbc, 0x10, 0xfb,
	0x30, 0xf6, 0x69, 0xc8, 0x2e, 0xa9, 0x64, 0x3c, 0x74, 0xd3, 0x40, 0xb2, 0x05, 0x7a, 0x0e, 0x7b,
	0xc2, 0x3c, 0xe3, 0x56, 0x43, 0xdb, 0x59, 0x74, 0x21, 0x37, 0xb5, 0x3d, 0xeb, 0x33, 0x98, 0xef,
	0x98, 0x90, 0xf9, 0x4b, 0x9d, 0x7e, 0x10, 0xd0, 0x38, 0xc9, 0x1f, 0xdc, 0x86, 0xa5, 0x1e, 0x15,
	0xf2, 0xa4, 0x1f, 0x79, 0x54, 0xa2, 0xa7, 0xde, 0x9d, 0x73, 0xf5, 0x81, 0xed, 0x28, 0x35, 0x91,
	0x0d, 0x58, 0x8c, 0xa8, 0x8f, 0x27, 0x82, 0x5d, 0xa2, 0xc2, 0x9f, 0x73, 0x17, 0x06, 0x86, 0x0e,
	0xbb, 0x44, 0xcb, 0x87, 0x8d, 0x4a, 0x74, 0x11, 0xf1, 0x50, 0x20, 0x79, 0x03, 0x64, 0x58, 0x9d,
	0x50, 0x3e, 0x86, 0xc2, 0xd0, 0x1a, 0xb5, 0x1d, 0xbd, 0xb9, 0xae, 0xc8, 0x8d, 0x65, 0x1e, 0x0e,
	0x48, 0xb9, 0xcb, 0x41, 0xc9, 0xca, 0x50, 0x58, 0x3f, 0x35, 0x58, 0xad, 0x8a, 0xfd, 0x8f, 0x96,
	0x3d, 0x05, 0x9d, 0x85, 0x67, 0x3c, 0x0e, 0x94, 0x55, 0x51, 0xd2, 0x9b, 0xf7, 0xc7, 0xe6, 0x95,
	0x33, 0x29, 0x86, 0x5a, 0xcf, 0x60, 0xbb, 0x82, 0x6d, 0x2b, 0xe9, 0x48, 0x2a, 0x31, 0x6f, 0xe9,
	0x2a, 0xcc, 0x8b, 0xc1, 0xb7, 0x2a, 0x68, 0xd1, 0x4d, 0x3f, 0xac, 0x63, 0xb0, 0x66, 0xa5, 0x66,
	0xfd, 0x7a, 0x52, 0xd2, 0xd1, 0x35, 0x5d, 0x1a, 0xe9, 0xe9, 0x08, 0x56, 0x8a, 0xe0, 0x37, 0x35,
	0xdc, 0x1f, 0x1a, 0x6c, 0x15, 0x71, 0x5b, 0x49, 0xdb, 0xc3, 0x50, 0x32, 0x99, 0xb4, 0xbd, 0x1b,
	0x7a, 0x83, 0xd4, 0x01, 0xd8, 0x10, 0xd4, 0xa8, 0xa5, 0xf2, 0x1d, 0x59, 0xac, 0x57, 0xb0, 0x5a,
	0xa6, 0x96, 0x75, 0x6a, 0x77, 0xa2, 0x53, 0x33, 0x37, 0xee, 0x39, 0x3c, 0x38, 0x60, 0xa1, 0x57,
	0x64, 0x92, 0x33, 0x18, 0xdb, 0x20, 0x6d, 0x62, 0x83, 0xda, 0x60, 0x4c, 0xe6, 0x56, 0x96, 0x71,
	0xdd, 0xe2, 0x37, 0xff, 0xd6, 0xe0, 0xee, 0x70, 0x96, 0x18, 0x9f, 0xb3, 0x53, 0x24, 0x07, 0xb0,
	0x54, 0x3c, 0x29, 0xc4, 0x50, 0x13, 0xaf, 0xb8, 0x32, 0xe6, 0xc3, 0xb2, 0xb6, 0x3b, 0x2c, 0x88,
	0x7a, 0x23, 0xed, 0x7c, 0x2c, 0x8b, 0x20, 0x93, 0x0a, 0xd9, 0x52, 0x49, 0xd3, 0x4f, 0x80, 0xd9,
	0x98, 0x1e, 0x90, 0x21, 0xef, 0xc3, 0x52, 0xd1, 0x9d, 0x55, 0x58, 0xa1, 0x38, 0x73, 0xbd, 0xc2,
	0x93, 0x81, 0x1c, 0x83, 0x31, 0x4d, 0x4b, 0xe4, 0xd1, 0x44, 0x5a, 0x85, 0xd4, 0x66, 0x81, 0x1f,
	0xc2, 0xbd, 0xf1, 0x11, 0x91, 0xb4, 0x5b, 0x53, 0xa6, 0x6e, 0x6e, 0x4e, 0xf1, 0x66, 0x80, 0x6f,
	0xe1, 0x4e, 0xf9, 0x42, 0x93, 0xf4, 0xb0, 0x54, 0x9e, 0xed, 0xd9, 0x83, 0x69, 0xbd, 0xf8, 0x75,
	0x55, 0xd7, 0x7e, 0x5f, 0xd5, 0xb5, 0x3f, 0x57, 0x75, 0xed, 0xd3, 0x9e, 0xcf, 0xe4, 0x97, 0x7e,
	0xd7, 0x3e, 0xe5, 0x81, 0xe3, 0x72, 0x81, 0x52, 0xd2, 0x83, 0x1e, 0xbf, 0x70, 0xf6, 0x69, 0x1c,
	0x33, 0x8c, 0x77, 0x5f, 0x73, 0xa7, 0xfc, 0x57, 0xeb, 0xde, 0x56, 0xc0, 0x8f, 0xff, 0x05, 0x00,
	0x00, 0xff, 0xff, 0x1d, 0xc1, 0x11, 0xc5, 0xee, 0x06, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MetadataServiceClient is the client API for MetadataService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MetadataServiceClient interface {
	// 保存元数据
	SaveMetadata(ctx context.Context, in *SaveMetadataRequest, opts ...grpc.CallOption) (*common.SimpleResponse, error)
	// 查看全部元数据摘要列表 (不包含 列字段描述)，状态为可用
	ListMetadataSummary(ctx context.Context, in *ListMetadataSummaryRequest, opts ...grpc.CallOption) (*ListMetadataSummaryResponse, error)
	// 新增：元数据详细列表（用于将数据同步给管理台，考虑checkpoint同步点位）
	ListMetadata(ctx context.Context, in *ListMetadataRequest, opts ...grpc.CallOption) (*ListMetadataResponse, error)
	// 新增：对应identityId的元数据详细列表（用于将数据同步给管理台，考虑checkpoint同步点位）
	ListMetadataByIdentityId(ctx context.Context, in *ListMetadataByIdentityIdRequest, opts ...grpc.CallOption) (*ListMetadataResponse, error)
	// 新增，根据元数据ID查询元数据详情
	FindMetadataById(ctx context.Context, in *FindMetadataByIdRequest, opts ...grpc.CallOption) (*FindMetadataByIdResponse, error)
	// 撤销元数据 (从底层网络撤销)
	RevokeMetadata(ctx context.Context, in *RevokeMetadataRequest, opts ...grpc.CallOption) (*common.SimpleResponse, error)
}

type metadataServiceClient struct {
	cc *grpc.ClientConn
}

func NewMetadataServiceClient(cc *grpc.ClientConn) MetadataServiceClient {
	return &metadataServiceClient{cc}
}

func (c *metadataServiceClient) SaveMetadata(ctx context.Context, in *SaveMetadataRequest, opts ...grpc.CallOption) (*common.SimpleResponse, error) {
	out := new(common.SimpleResponse)
	err := c.cc.Invoke(ctx, "/api.MetadataService/SaveMetadata", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *metadataServiceClient) ListMetadataSummary(ctx context.Context, in *ListMetadataSummaryRequest, opts ...grpc.CallOption) (*ListMetadataSummaryResponse, error) {
	out := new(ListMetadataSummaryResponse)
	err := c.cc.Invoke(ctx, "/api.MetadataService/ListMetadataSummary", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *metadataServiceClient) ListMetadata(ctx context.Context, in *ListMetadataRequest, opts ...grpc.CallOption) (*ListMetadataResponse, error) {
	out := new(ListMetadataResponse)
	err := c.cc.Invoke(ctx, "/api.MetadataService/ListMetadata", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *metadataServiceClient) ListMetadataByIdentityId(ctx context.Context, in *ListMetadataByIdentityIdRequest, opts ...grpc.CallOption) (*ListMetadataResponse, error) {
	out := new(ListMetadataResponse)
	err := c.cc.Invoke(ctx, "/api.MetadataService/ListMetadataByIdentityId", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *metadataServiceClient) FindMetadataById(ctx context.Context, in *FindMetadataByIdRequest, opts ...grpc.CallOption) (*FindMetadataByIdResponse, error) {
	out := new(FindMetadataByIdResponse)
	err := c.cc.Invoke(ctx, "/api.MetadataService/FindMetadataById", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *metadataServiceClient) RevokeMetadata(ctx context.Context, in *RevokeMetadataRequest, opts ...grpc.CallOption) (*common.SimpleResponse, error) {
	out := new(common.SimpleResponse)
	err := c.cc.Invoke(ctx, "/api.MetadataService/RevokeMetadata", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MetadataServiceServer is the server API for MetadataService service.
type MetadataServiceServer interface {
	// 保存元数据
	SaveMetadata(context.Context, *SaveMetadataRequest) (*common.SimpleResponse, error)
	// 查看全部元数据摘要列表 (不包含 列字段描述)，状态为可用
	ListMetadataSummary(context.Context, *ListMetadataSummaryRequest) (*ListMetadataSummaryResponse, error)
	// 新增：元数据详细列表（用于将数据同步给管理台，考虑checkpoint同步点位）
	ListMetadata(context.Context, *ListMetadataRequest) (*ListMetadataResponse, error)
	// 新增：对应identityId的元数据详细列表（用于将数据同步给管理台，考虑checkpoint同步点位）
	ListMetadataByIdentityId(context.Context, *ListMetadataByIdentityIdRequest) (*ListMetadataResponse, error)
	// 新增，根据元数据ID查询元数据详情
	FindMetadataById(context.Context, *FindMetadataByIdRequest) (*FindMetadataByIdResponse, error)
	// 撤销元数据 (从底层网络撤销)
	RevokeMetadata(context.Context, *RevokeMetadataRequest) (*common.SimpleResponse, error)
}

// UnimplementedMetadataServiceServer can be embedded to have forward compatible implementations.
type UnimplementedMetadataServiceServer struct {
}

func (*UnimplementedMetadataServiceServer) SaveMetadata(ctx context.Context, req *SaveMetadataRequest) (*common.SimpleResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SaveMetadata not implemented")
}
func (*UnimplementedMetadataServiceServer) ListMetadataSummary(ctx context.Context, req *ListMetadataSummaryRequest) (*ListMetadataSummaryResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListMetadataSummary not implemented")
}
func (*UnimplementedMetadataServiceServer) ListMetadata(ctx context.Context, req *ListMetadataRequest) (*ListMetadataResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListMetadata not implemented")
}
func (*UnimplementedMetadataServiceServer) ListMetadataByIdentityId(ctx context.Context, req *ListMetadataByIdentityIdRequest) (*ListMetadataResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListMetadataByIdentityId not implemented")
}
func (*UnimplementedMetadataServiceServer) FindMetadataById(ctx context.Context, req *FindMetadataByIdRequest) (*FindMetadataByIdResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FindMetadataById not implemented")
}
func (*UnimplementedMetadataServiceServer) RevokeMetadata(ctx context.Context, req *RevokeMetadataRequest) (*common.SimpleResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RevokeMetadata not implemented")
}

func RegisterMetadataServiceServer(s *grpc.Server, srv MetadataServiceServer) {
	s.RegisterService(&_MetadataService_serviceDesc, srv)
}

func _MetadataService_SaveMetadata_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SaveMetadataRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MetadataServiceServer).SaveMetadata(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.MetadataService/SaveMetadata",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MetadataServiceServer).SaveMetadata(ctx, req.(*SaveMetadataRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MetadataService_ListMetadataSummary_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListMetadataSummaryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MetadataServiceServer).ListMetadataSummary(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.MetadataService/ListMetadataSummary",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MetadataServiceServer).ListMetadataSummary(ctx, req.(*ListMetadataSummaryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MetadataService_ListMetadata_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListMetadataRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MetadataServiceServer).ListMetadata(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.MetadataService/ListMetadata",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MetadataServiceServer).ListMetadata(ctx, req.(*ListMetadataRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MetadataService_ListMetadataByIdentityId_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListMetadataByIdentityIdRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MetadataServiceServer).ListMetadataByIdentityId(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.MetadataService/ListMetadataByIdentityId",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MetadataServiceServer).ListMetadataByIdentityId(ctx, req.(*ListMetadataByIdentityIdRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MetadataService_FindMetadataById_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FindMetadataByIdRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MetadataServiceServer).FindMetadataById(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.MetadataService/FindMetadataById",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MetadataServiceServer).FindMetadataById(ctx, req.(*FindMetadataByIdRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MetadataService_RevokeMetadata_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RevokeMetadataRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MetadataServiceServer).RevokeMetadata(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.MetadataService/RevokeMetadata",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MetadataServiceServer).RevokeMetadata(ctx, req.(*RevokeMetadataRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _MetadataService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "api.MetadataService",
	HandlerType: (*MetadataServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SaveMetadata",
			Handler:    _MetadataService_SaveMetadata_Handler,
		},
		{
			MethodName: "ListMetadataSummary",
			Handler:    _MetadataService_ListMetadataSummary_Handler,
		},
		{
			MethodName: "ListMetadata",
			Handler:    _MetadataService_ListMetadata_Handler,
		},
		{
			MethodName: "ListMetadataByIdentityId",
			Handler:    _MetadataService_ListMetadataByIdentityId_Handler,
		},
		{
			MethodName: "FindMetadataById",
			Handler:    _MetadataService_FindMetadataById_Handler,
		},
		{
			MethodName: "RevokeMetadata",
			Handler:    _MetadataService_RevokeMetadata_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "lib/center/api/metadata.proto",
}

func (m *SaveMetadataRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *SaveMetadataRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *SaveMetadataRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Metadata != nil {
		{
			size, err := m.Metadata.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintMetadata(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *RevokeMetadataRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *RevokeMetadataRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *RevokeMetadataRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.MetadataId) > 0 {
		i -= len(m.MetadataId)
		copy(dAtA[i:], m.MetadataId)
		i = encodeVarintMetadata(dAtA, i, uint64(len(m.MetadataId)))
		i--
		dAtA[i] = 0x12
	}
	if m.Owner != nil {
		{
			size, err := m.Owner.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintMetadata(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *ListMetadataSummaryRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ListMetadataSummaryRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ListMetadataSummaryRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.PageSize != 0 {
		i = encodeVarintMetadata(dAtA, i, uint64(m.PageSize))
		i--
		dAtA[i] = 0x10
	}
	if m.LastUpdated != 0 {
		i = encodeVarintMetadata(dAtA, i, uint64(m.LastUpdated))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *ListMetadataSummaryResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ListMetadataSummaryResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ListMetadataSummaryResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.MetadataSummaries) > 0 {
		for iNdEx := len(m.MetadataSummaries) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.MetadataSummaries[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintMetadata(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *MetadataSummaryOwner) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MetadataSummaryOwner) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MetadataSummaryOwner) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Information != nil {
		{
			size, err := m.Information.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintMetadata(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	if m.Owner != nil {
		{
			size, err := m.Owner.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintMetadata(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *ListMetadataSummaryByStateRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ListMetadataSummaryByStateRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ListMetadataSummaryByStateRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.State) > 0 {
		i -= len(m.State)
		copy(dAtA[i:], m.State)
		i = encodeVarintMetadata(dAtA, i, uint64(len(m.State)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *ListMetadataSummaryByStateResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ListMetadataSummaryByStateResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ListMetadataSummaryByStateResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Metadata) > 0 {
		for iNdEx := len(m.Metadata) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Metadata[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintMetadata(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *ListMetadataRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ListMetadataRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ListMetadataRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.PageSize != 0 {
		i = encodeVarintMetadata(dAtA, i, uint64(m.PageSize))
		i--
		dAtA[i] = 0x10
	}
	if m.LastUpdated != 0 {
		i = encodeVarintMetadata(dAtA, i, uint64(m.LastUpdated))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *ListMetadataByIdentityIdRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ListMetadataByIdentityIdRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ListMetadataByIdentityIdRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.IdentityId) > 0 {
		i -= len(m.IdentityId)
		copy(dAtA[i:], m.IdentityId)
		i = encodeVarintMetadata(dAtA, i, uint64(len(m.IdentityId)))
		i--
		dAtA[i] = 0x1a
	}
	if m.PageSize != 0 {
		i = encodeVarintMetadata(dAtA, i, uint64(m.PageSize))
		i--
		dAtA[i] = 0x10
	}
	if m.LastUpdated != 0 {
		i = encodeVarintMetadata(dAtA, i, uint64(m.LastUpdated))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *ListMetadataResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ListMetadataResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ListMetadataResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Metadata) > 0 {
		for iNdEx := len(m.Metadata) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Metadata[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintMetadata(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *FindMetadataByIdRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *FindMetadataByIdRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *FindMetadataByIdRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.MetadataId) > 0 {
		i -= len(m.MetadataId)
		copy(dAtA[i:], m.MetadataId)
		i = encodeVarintMetadata(dAtA, i, uint64(len(m.MetadataId)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *FindMetadataByIdResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *FindMetadataByIdResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *FindMetadataByIdResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Metadata != nil {
		{
			size, err := m.Metadata.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintMetadata(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func encodeVarintMetadata(dAtA []byte, offset int, v uint64) int {
	offset -= sovMetadata(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *SaveMetadataRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Metadata != nil {
		l = m.Metadata.Size()
		n += 1 + l + sovMetadata(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *RevokeMetadataRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Owner != nil {
		l = m.Owner.Size()
		n += 1 + l + sovMetadata(uint64(l))
	}
	l = len(m.MetadataId)
	if l > 0 {
		n += 1 + l + sovMetadata(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ListMetadataSummaryRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.LastUpdated != 0 {
		n += 1 + sovMetadata(uint64(m.LastUpdated))
	}
	if m.PageSize != 0 {
		n += 1 + sovMetadata(uint64(m.PageSize))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ListMetadataSummaryResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.MetadataSummaries) > 0 {
		for _, e := range m.MetadataSummaries {
			l = e.Size()
			n += 1 + l + sovMetadata(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *MetadataSummaryOwner) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Owner != nil {
		l = m.Owner.Size()
		n += 1 + l + sovMetadata(uint64(l))
	}
	if m.Information != nil {
		l = m.Information.Size()
		n += 1 + l + sovMetadata(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ListMetadataSummaryByStateRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.State)
	if l > 0 {
		n += 1 + l + sovMetadata(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ListMetadataSummaryByStateResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Metadata) > 0 {
		for _, e := range m.Metadata {
			l = e.Size()
			n += 1 + l + sovMetadata(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ListMetadataRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.LastUpdated != 0 {
		n += 1 + sovMetadata(uint64(m.LastUpdated))
	}
	if m.PageSize != 0 {
		n += 1 + sovMetadata(uint64(m.PageSize))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ListMetadataByIdentityIdRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.LastUpdated != 0 {
		n += 1 + sovMetadata(uint64(m.LastUpdated))
	}
	if m.PageSize != 0 {
		n += 1 + sovMetadata(uint64(m.PageSize))
	}
	l = len(m.IdentityId)
	if l > 0 {
		n += 1 + l + sovMetadata(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ListMetadataResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Metadata) > 0 {
		for _, e := range m.Metadata {
			l = e.Size()
			n += 1 + l + sovMetadata(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *FindMetadataByIdRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.MetadataId)
	if l > 0 {
		n += 1 + l + sovMetadata(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *FindMetadataByIdResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Metadata != nil {
		l = m.Metadata.Size()
		n += 1 + l + sovMetadata(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func sovMetadata(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozMetadata(x uint64) (n int) {
	return sovMetadata(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *SaveMetadataRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMetadata
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: SaveMetadataRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: SaveMetadataRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Metadata", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMetadata
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMetadata
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMetadata
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Metadata == nil {
				m.Metadata = &types.MetadataPB{}
			}
			if err := m.Metadata.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMetadata(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthMetadata
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *RevokeMetadataRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMetadata
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: RevokeMetadataRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: RevokeMetadataRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Owner", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMetadata
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMetadata
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMetadata
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Owner == nil {
				m.Owner = &common.Organization{}
			}
			if err := m.Owner.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MetadataId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMetadata
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMetadata
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMetadata
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.MetadataId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMetadata(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthMetadata
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ListMetadataSummaryRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMetadata
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ListMetadataSummaryRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ListMetadataSummaryRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field LastUpdated", wireType)
			}
			m.LastUpdated = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMetadata
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.LastUpdated |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PageSize", wireType)
			}
			m.PageSize = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMetadata
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.PageSize |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipMetadata(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthMetadata
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ListMetadataSummaryResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMetadata
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ListMetadataSummaryResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ListMetadataSummaryResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MetadataSummaries", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMetadata
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMetadata
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMetadata
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.MetadataSummaries = append(m.MetadataSummaries, &MetadataSummaryOwner{})
			if err := m.MetadataSummaries[len(m.MetadataSummaries)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMetadata(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthMetadata
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MetadataSummaryOwner) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMetadata
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MetadataSummaryOwner: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MetadataSummaryOwner: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Owner", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMetadata
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMetadata
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMetadata
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Owner == nil {
				m.Owner = &common.Organization{}
			}
			if err := m.Owner.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Information", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMetadata
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMetadata
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMetadata
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Information == nil {
				m.Information = &types.MetadataSummary{}
			}
			if err := m.Information.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMetadata(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthMetadata
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ListMetadataSummaryByStateRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMetadata
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ListMetadataSummaryByStateRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ListMetadataSummaryByStateRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field State", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMetadata
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMetadata
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMetadata
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.State = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMetadata(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthMetadata
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ListMetadataSummaryByStateResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMetadata
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ListMetadataSummaryByStateResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ListMetadataSummaryByStateResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Metadata", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMetadata
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMetadata
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMetadata
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Metadata = append(m.Metadata, &MetadataSummaryOwner{})
			if err := m.Metadata[len(m.Metadata)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMetadata(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthMetadata
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ListMetadataRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMetadata
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ListMetadataRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ListMetadataRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field LastUpdated", wireType)
			}
			m.LastUpdated = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMetadata
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.LastUpdated |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PageSize", wireType)
			}
			m.PageSize = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMetadata
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.PageSize |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipMetadata(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthMetadata
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ListMetadataByIdentityIdRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMetadata
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ListMetadataByIdentityIdRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ListMetadataByIdentityIdRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field LastUpdated", wireType)
			}
			m.LastUpdated = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMetadata
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.LastUpdated |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PageSize", wireType)
			}
			m.PageSize = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMetadata
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.PageSize |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field IdentityId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMetadata
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMetadata
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMetadata
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.IdentityId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMetadata(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthMetadata
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ListMetadataResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMetadata
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ListMetadataResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ListMetadataResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Metadata", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMetadata
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMetadata
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMetadata
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Metadata = append(m.Metadata, &types.MetadataPB{})
			if err := m.Metadata[len(m.Metadata)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMetadata(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthMetadata
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *FindMetadataByIdRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMetadata
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: FindMetadataByIdRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: FindMetadataByIdRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MetadataId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMetadata
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMetadata
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMetadata
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.MetadataId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMetadata(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthMetadata
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *FindMetadataByIdResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMetadata
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: FindMetadataByIdResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: FindMetadataByIdResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Metadata", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMetadata
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMetadata
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMetadata
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Metadata == nil {
				m.Metadata = &types.MetadataPB{}
			}
			if err := m.Metadata.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMetadata(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthMetadata
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipMetadata(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowMetadata
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowMetadata
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowMetadata
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthMetadata
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupMetadata
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthMetadata
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthMetadata        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowMetadata          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupMetadata = fmt.Errorf("proto: unexpected end of group")
)
