// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: lib/types/taskmng.proto

package types

import (
	fmt "fmt"
	twopc "github.com/Metisnetwork/Metis-Carrier/lib/netmsg/consensus/twopc"
	proto "github.com/gogo/protobuf/proto"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type NeedExecuteTask struct {
	RemotePid              string                     `protobuf:"bytes,1,opt,name=remote_pid,json=remotePid,proto3" json:"remote_pid,omitempty"`
	LocalTaskRole          TaskRole                   `protobuf:"varint,2,opt,name=local_task_role,json=localTaskRole,proto3,enum=types.TaskRole" json:"local_task_role,omitempty"`
	LocalTaskOrganization  *TaskOrganization          `protobuf:"bytes,3,opt,name=local_task_organization,json=localTaskOrganization,proto3" json:"local_task_organization,omitempty"`
	RemoteTaskRole         TaskRole                   `protobuf:"varint,4,opt,name=remote_task_role,json=remoteTaskRole,proto3,enum=types.TaskRole" json:"remote_task_role,omitempty"`
	RemoteTaskOrganization *TaskOrganization          `protobuf:"bytes,5,opt,name=remote_task_organization,json=remoteTaskOrganization,proto3" json:"remote_task_organization,omitempty"`
	TaskId                 string                     `protobuf:"bytes,6,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	ConsStatus             []byte                     `protobuf:"bytes,7,opt,name=consStatus,proto3" json:"consStatus,omitempty"`
	LocalResource          *PrepareVoteResource       `protobuf:"bytes,8,opt,name=local_resource,json=localResource,proto3" json:"local_resource,omitempty"`
	Resources              *twopc.ConfirmTaskPeerInfo `protobuf:"bytes,9,opt,name=resources,proto3" json:"resources,omitempty"`
	ErrStr                 string                     `protobuf:"bytes,10,opt,name=err_str,json=errStr,proto3" json:"err_str,omitempty"`
	ConsumeQueryId         string                     `protobuf:"bytes,11,opt,name=consume_query_id,json=consumeQueryId,proto3" json:"consume_query_id,omitempty"`
	ConsumeSpec            string                     `protobuf:"bytes,12,opt,name=consume_spec,json=consumeSpec,proto3" json:"consume_spec,omitempty"`
	XXX_NoUnkeyedLiteral   struct{}                   `json:"-"`
	XXX_unrecognized       []byte                     `json:"-"`
	XXX_sizecache          int32                      `json:"-"`
}

func (m *NeedExecuteTask) Reset()         { *m = NeedExecuteTask{} }
func (m *NeedExecuteTask) String() string { return proto.CompactTextString(m) }
func (*NeedExecuteTask) ProtoMessage()    {}
func (*NeedExecuteTask) Descriptor() ([]byte, []int) {
	return fileDescriptor_428cc5d029914643, []int{0}
}
func (m *NeedExecuteTask) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NeedExecuteTask) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NeedExecuteTask.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NeedExecuteTask) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NeedExecuteTask.Merge(m, src)
}
func (m *NeedExecuteTask) XXX_Size() int {
	return m.Size()
}
func (m *NeedExecuteTask) XXX_DiscardUnknown() {
	xxx_messageInfo_NeedExecuteTask.DiscardUnknown(m)
}

var xxx_messageInfo_NeedExecuteTask proto.InternalMessageInfo

func (m *NeedExecuteTask) GetRemotePid() string {
	if m != nil {
		return m.RemotePid
	}
	return ""
}

func (m *NeedExecuteTask) GetLocalTaskRole() TaskRole {
	if m != nil {
		return m.LocalTaskRole
	}
	return TaskRole_TaskRole_Unknown
}

func (m *NeedExecuteTask) GetLocalTaskOrganization() *TaskOrganization {
	if m != nil {
		return m.LocalTaskOrganization
	}
	return nil
}

func (m *NeedExecuteTask) GetRemoteTaskRole() TaskRole {
	if m != nil {
		return m.RemoteTaskRole
	}
	return TaskRole_TaskRole_Unknown
}

func (m *NeedExecuteTask) GetRemoteTaskOrganization() *TaskOrganization {
	if m != nil {
		return m.RemoteTaskOrganization
	}
	return nil
}

func (m *NeedExecuteTask) GetTaskId() string {
	if m != nil {
		return m.TaskId
	}
	return ""
}

func (m *NeedExecuteTask) GetConsStatus() []byte {
	if m != nil {
		return m.ConsStatus
	}
	return nil
}

func (m *NeedExecuteTask) GetLocalResource() *PrepareVoteResource {
	if m != nil {
		return m.LocalResource
	}
	return nil
}

func (m *NeedExecuteTask) GetResources() *twopc.ConfirmTaskPeerInfo {
	if m != nil {
		return m.Resources
	}
	return nil
}

func (m *NeedExecuteTask) GetErrStr() string {
	if m != nil {
		return m.ErrStr
	}
	return ""
}

func (m *NeedExecuteTask) GetConsumeQueryId() string {
	if m != nil {
		return m.ConsumeQueryId
	}
	return ""
}

func (m *NeedExecuteTask) GetConsumeSpec() string {
	if m != nil {
		return m.ConsumeSpec
	}
	return ""
}

func init() {
	proto.RegisterType((*NeedExecuteTask)(nil), "types.NeedExecuteTask")
}

func init() { proto.RegisterFile("lib/types/taskmng.proto", fileDescriptor_428cc5d029914643) }

var fileDescriptor_428cc5d029914643 = []byte{
	// 461 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x92, 0x4f, 0x6f, 0xd3, 0x40,
	0x10, 0xc5, 0x65, 0x68, 0x53, 0xb2, 0x09, 0x49, 0xb5, 0x02, 0xb2, 0x8a, 0x44, 0x14, 0x38, 0xf9,
	0x82, 0x2d, 0x95, 0x03, 0x70, 0xe0, 0x00, 0x15, 0x87, 0x1c, 0xa0, 0xa9, 0x83, 0x38, 0x70, 0xb1,
	0x36, 0xf6, 0xd4, 0xac, 0x62, 0x7b, 0xcd, 0xec, 0x58, 0xa5, 0x7c, 0x42, 0x8e, 0x7c, 0x04, 0x14,
	0xf1, 0x41, 0xd0, 0xfa, 0x4f, 0xec, 0x4a, 0xa8, 0xc7, 0x79, 0xef, 0xcd, 0xd3, 0xcf, 0xe3, 0x65,
	0xb3, 0x54, 0x6d, 0x7d, 0xba, 0x29, 0xc0, 0xf8, 0x24, 0xcd, 0x2e, 0xcb, 0x13, 0xaf, 0x40, 0x4d,
	0x9a, 0x1f, 0x57, 0xe2, 0xfc, 0x51, 0xe7, 0x6f, 0xa5, 0x81, 0xda, 0x9c, 0x2f, 0x3a, 0x35, 0xd2,
	0xb9, 0x81, 0xdc, 0x94, 0xc6, 0x90, 0xa4, 0xd6, 0x77, 0xad, 0x9f, 0x03, 0x65, 0x26, 0xe9, 0x02,
	0x3e, 0x5d, 0xeb, 0x22, 0xf2, 0x33, 0x30, 0x46, 0x26, 0x4d, 0xf2, 0xf9, 0xdf, 0x23, 0x36, 0xfd,
	0x04, 0x10, 0x7f, 0xf8, 0x01, 0x51, 0x49, 0xf0, 0x59, 0x9a, 0x1d, 0x7f, 0xca, 0x18, 0x42, 0xa6,
	0x09, 0xc2, 0x42, 0xc5, 0xc2, 0x59, 0x3a, 0xee, 0x30, 0x18, 0xd6, 0xca, 0x5a, 0xc5, 0xfc, 0x15,
	0x9b, 0xa6, 0x3a, 0x92, 0x69, 0x68, 0x81, 0x43, 0xd4, 0x29, 0x88, 0x7b, 0x4b, 0xc7, 0x9d, 0x9c,
	0x4d, 0xbd, 0x0a, 0xc9, 0xb3, 0x25, 0x81, 0x4e, 0x21, 0x78, 0x58, 0xe5, 0xda, 0x91, 0x5f, 0xb0,
	0x59, 0x6f, 0x51, 0x63, 0x22, 0x73, 0xf5, 0x53, 0x92, 0xd2, 0xb9, 0xb8, 0xbf, 0x74, 0xdc, 0xd1,
	0xd9, 0xac, 0x57, 0x70, 0xd1, 0xb3, 0x83, 0xc7, 0x87, 0xa2, 0xbe, 0xcc, 0xdf, 0xb0, 0xd3, 0x06,
	0xb4, 0x43, 0x39, 0xfa, 0x3f, 0xca, 0xa4, 0x0e, 0x1e, 0x58, 0x2e, 0x99, 0xe8, 0xaf, 0xde, 0x82,
	0x39, 0xbe, 0x1b, 0xe6, 0x49, 0x57, 0x75, 0x8b, 0x66, 0xc6, 0x4e, 0xaa, 0x2e, 0x15, 0x8b, 0x41,
	0x75, 0xb3, 0x81, 0x1d, 0x57, 0x31, 0x5f, 0x30, 0x66, 0x7f, 0xc2, 0x86, 0x24, 0x95, 0x46, 0x9c,
	0x2c, 0x1d, 0x77, 0x1c, 0xf4, 0x14, 0xfe, 0x8e, 0x4d, 0xea, 0xbb, 0x20, 0x18, 0x5d, 0x62, 0x04,
	0xe2, 0x41, 0x45, 0x30, 0x6f, 0x08, 0xd6, 0x08, 0x85, 0x44, 0xf8, 0xa2, 0x09, 0x82, 0x26, 0xd1,
	0x9c, 0xb6, 0x1d, 0xf9, 0x6b, 0x36, 0x6c, 0x97, 0x8d, 0x18, 0xb6, 0xdb, 0xf6, 0x7f, 0x7b, 0xe7,
	0x3a, 0xbf, 0x52, 0x98, 0x59, 0xdc, 0x35, 0x00, 0xae, 0xf2, 0x2b, 0x1d, 0x74, 0x61, 0x4b, 0x0d,
	0x88, 0xa1, 0x21, 0x14, 0xac, 0xa6, 0x06, 0xc4, 0x0d, 0x21, 0x77, 0xd9, 0xa9, 0x65, 0x2c, 0x33,
	0x08, 0xbf, 0x97, 0x80, 0x37, 0xf6, 0xbb, 0x46, 0x55, 0x62, 0xd2, 0xe8, 0x97, 0x56, 0x5e, 0xc5,
	0xfc, 0x19, 0x1b, 0xb7, 0x49, 0x53, 0x40, 0x24, 0xc6, 0x55, 0x6a, 0xd4, 0x68, 0x9b, 0x02, 0xa2,
	0xf7, 0x6f, 0x7f, 0xed, 0x17, 0xce, 0xef, 0xfd, 0xc2, 0xf9, 0xb3, 0x5f, 0x38, 0x5f, 0xfd, 0x44,
	0xd1, 0xb7, 0x72, 0xeb, 0x45, 0x3a, 0xf3, 0x3f, 0x02, 0x29, 0x93, 0x03, 0x5d, 0x6b, 0xdc, 0xd5,
	0xc3, 0x8b, 0x73, 0x89, 0xa8, 0x00, 0xfd, 0xc3, 0x23, 0xdf, 0x0e, 0xaa, 0xc7, 0xfa, 0xf2, 0x5f,
	0x00, 0x00, 0x00, 0xff, 0xff, 0x71, 0x5f, 0x65, 0xfe, 0x2e, 0x03, 0x00, 0x00,
}

func (m *NeedExecuteTask) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NeedExecuteTask) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NeedExecuteTask) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.ConsumeSpec) > 0 {
		i -= len(m.ConsumeSpec)
		copy(dAtA[i:], m.ConsumeSpec)
		i = encodeVarintTaskmng(dAtA, i, uint64(len(m.ConsumeSpec)))
		i--
		dAtA[i] = 0x62
	}
	if len(m.ConsumeQueryId) > 0 {
		i -= len(m.ConsumeQueryId)
		copy(dAtA[i:], m.ConsumeQueryId)
		i = encodeVarintTaskmng(dAtA, i, uint64(len(m.ConsumeQueryId)))
		i--
		dAtA[i] = 0x5a
	}
	if len(m.ErrStr) > 0 {
		i -= len(m.ErrStr)
		copy(dAtA[i:], m.ErrStr)
		i = encodeVarintTaskmng(dAtA, i, uint64(len(m.ErrStr)))
		i--
		dAtA[i] = 0x52
	}
	if m.Resources != nil {
		{
			size, err := m.Resources.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTaskmng(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x4a
	}
	if m.LocalResource != nil {
		{
			size, err := m.LocalResource.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTaskmng(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x42
	}
	if len(m.ConsStatus) > 0 {
		i -= len(m.ConsStatus)
		copy(dAtA[i:], m.ConsStatus)
		i = encodeVarintTaskmng(dAtA, i, uint64(len(m.ConsStatus)))
		i--
		dAtA[i] = 0x3a
	}
	if len(m.TaskId) > 0 {
		i -= len(m.TaskId)
		copy(dAtA[i:], m.TaskId)
		i = encodeVarintTaskmng(dAtA, i, uint64(len(m.TaskId)))
		i--
		dAtA[i] = 0x32
	}
	if m.RemoteTaskOrganization != nil {
		{
			size, err := m.RemoteTaskOrganization.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTaskmng(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x2a
	}
	if m.RemoteTaskRole != 0 {
		i = encodeVarintTaskmng(dAtA, i, uint64(m.RemoteTaskRole))
		i--
		dAtA[i] = 0x20
	}
	if m.LocalTaskOrganization != nil {
		{
			size, err := m.LocalTaskOrganization.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTaskmng(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if m.LocalTaskRole != 0 {
		i = encodeVarintTaskmng(dAtA, i, uint64(m.LocalTaskRole))
		i--
		dAtA[i] = 0x10
	}
	if len(m.RemotePid) > 0 {
		i -= len(m.RemotePid)
		copy(dAtA[i:], m.RemotePid)
		i = encodeVarintTaskmng(dAtA, i, uint64(len(m.RemotePid)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func encodeVarintTaskmng(dAtA []byte, offset int, v uint64) int {
	offset -= sovTaskmng(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *NeedExecuteTask) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.RemotePid)
	if l > 0 {
		n += 1 + l + sovTaskmng(uint64(l))
	}
	if m.LocalTaskRole != 0 {
		n += 1 + sovTaskmng(uint64(m.LocalTaskRole))
	}
	if m.LocalTaskOrganization != nil {
		l = m.LocalTaskOrganization.Size()
		n += 1 + l + sovTaskmng(uint64(l))
	}
	if m.RemoteTaskRole != 0 {
		n += 1 + sovTaskmng(uint64(m.RemoteTaskRole))
	}
	if m.RemoteTaskOrganization != nil {
		l = m.RemoteTaskOrganization.Size()
		n += 1 + l + sovTaskmng(uint64(l))
	}
	l = len(m.TaskId)
	if l > 0 {
		n += 1 + l + sovTaskmng(uint64(l))
	}
	l = len(m.ConsStatus)
	if l > 0 {
		n += 1 + l + sovTaskmng(uint64(l))
	}
	if m.LocalResource != nil {
		l = m.LocalResource.Size()
		n += 1 + l + sovTaskmng(uint64(l))
	}
	if m.Resources != nil {
		l = m.Resources.Size()
		n += 1 + l + sovTaskmng(uint64(l))
	}
	l = len(m.ErrStr)
	if l > 0 {
		n += 1 + l + sovTaskmng(uint64(l))
	}
	l = len(m.ConsumeQueryId)
	if l > 0 {
		n += 1 + l + sovTaskmng(uint64(l))
	}
	l = len(m.ConsumeSpec)
	if l > 0 {
		n += 1 + l + sovTaskmng(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func sovTaskmng(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozTaskmng(x uint64) (n int) {
	return sovTaskmng(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *NeedExecuteTask) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTaskmng
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: NeedExecuteTask: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: NeedExecuteTask: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RemotePid", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTaskmng
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTaskmng
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTaskmng
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.RemotePid = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field LocalTaskRole", wireType)
			}
			m.LocalTaskRole = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTaskmng
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.LocalTaskRole |= TaskRole(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LocalTaskOrganization", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTaskmng
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTaskmng
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTaskmng
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.LocalTaskOrganization == nil {
				m.LocalTaskOrganization = &TaskOrganization{}
			}
			if err := m.LocalTaskOrganization.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RemoteTaskRole", wireType)
			}
			m.RemoteTaskRole = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTaskmng
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.RemoteTaskRole |= TaskRole(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RemoteTaskOrganization", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTaskmng
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTaskmng
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTaskmng
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.RemoteTaskOrganization == nil {
				m.RemoteTaskOrganization = &TaskOrganization{}
			}
			if err := m.RemoteTaskOrganization.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TaskId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTaskmng
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTaskmng
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTaskmng
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.TaskId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ConsStatus", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTaskmng
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthTaskmng
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthTaskmng
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ConsStatus = append(m.ConsStatus[:0], dAtA[iNdEx:postIndex]...)
			if m.ConsStatus == nil {
				m.ConsStatus = []byte{}
			}
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LocalResource", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTaskmng
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTaskmng
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTaskmng
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.LocalResource == nil {
				m.LocalResource = &PrepareVoteResource{}
			}
			if err := m.LocalResource.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 9:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Resources", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTaskmng
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTaskmng
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTaskmng
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Resources == nil {
				m.Resources = &twopc.ConfirmTaskPeerInfo{}
			}
			if err := m.Resources.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 10:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ErrStr", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTaskmng
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTaskmng
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTaskmng
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ErrStr = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 11:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ConsumeQueryId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTaskmng
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTaskmng
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTaskmng
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ConsumeQueryId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 12:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ConsumeSpec", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTaskmng
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTaskmng
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTaskmng
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ConsumeSpec = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTaskmng(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTaskmng
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipTaskmng(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowTaskmng
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTaskmng
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTaskmng
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthTaskmng
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupTaskmng
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthTaskmng
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthTaskmng        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowTaskmng          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupTaskmng = fmt.Errorf("proto: unexpected end of group")
)
