// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: lib/common/base.proto

package common

import (
	fmt "fmt"
	proto "github.com/gogo/protobuf/proto"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type UserType int32

const (
	UserType_User_Unknown UserType = 0
	UserType_User_ETH     UserType = 1
	UserType_User_ATP     UserType = 2
	UserType_User_LAT     UserType = 3
)

var UserType_name = map[int32]string{
	0: "User_Unknown",
	1: "User_ETH",
	2: "User_ATP",
	3: "User_LAT",
}

var UserType_value = map[string]int32{
	"User_Unknown": 0,
	"User_ETH":     1,
	"User_ATP":     2,
	"User_LAT":     3,
}

func (x UserType) String() string {
	return proto.EnumName(UserType_name, int32(x))
}

func (UserType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_5dab74a081363d1b, []int{0}
}

// the status of data, N means normal, D means deleted.
type DataStatus int32

const (
	DataStatus_DataStatus_Unknown DataStatus = 0
	DataStatus_DataStatus_Normal  DataStatus = 1
	DataStatus_DataStatus_Deleted DataStatus = 2
)

var DataStatus_name = map[int32]string{
	0: "DataStatus_Unknown",
	1: "DataStatus_Normal",
	2: "DataStatus_Deleted",
}

var DataStatus_value = map[string]int32{
	"DataStatus_Unknown": 0,
	"DataStatus_Normal":  1,
	"DataStatus_Deleted": 2,
}

func (x DataStatus) String() string {
	return proto.EnumName(DataStatus_name, int32(x))
}

func (DataStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_5dab74a081363d1b, []int{1}
}

// Y : normal, N non-normal
type CommonStatus int32

const (
	CommonStatus_CommonStatus_Unknown   CommonStatus = 0
	CommonStatus_CommonStatus_Normal    CommonStatus = 1
	CommonStatus_CommonStatus_NonNormal CommonStatus = 2
)

var CommonStatus_name = map[int32]string{
	0: "CommonStatus_Unknown",
	1: "CommonStatus_Normal",
	2: "CommonStatus_NonNormal",
}

var CommonStatus_value = map[string]int32{
	"CommonStatus_Unknown":   0,
	"CommonStatus_Normal":    1,
	"CommonStatus_NonNormal": 2,
}

func (x CommonStatus) String() string {
	return proto.EnumName(CommonStatus_name, int32(x))
}

func (CommonStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_5dab74a081363d1b, []int{2}
}

type AuditMetaDataOption int32

const (
	AuditMetaDataOption_Audit_Pending AuditMetaDataOption = 0
	AuditMetaDataOption_Audit_Passed  AuditMetaDataOption = 1
	AuditMetaDataOption_Audit_Refused AuditMetaDataOption = 2
)

var AuditMetaDataOption_name = map[int32]string{
	0: "Audit_Pending",
	1: "Audit_Passed",
	2: "Audit_Refused",
}

var AuditMetaDataOption_value = map[string]int32{
	"Audit_Pending": 0,
	"Audit_Passed":  1,
	"Audit_Refused": 2,
}

func (x AuditMetaDataOption) String() string {
	return proto.EnumName(AuditMetaDataOption_name, int32(x))
}

func (AuditMetaDataOption) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_5dab74a081363d1b, []int{3}
}

//原始文件类型
type OriginFileType int32

const (
	OriginFileType_FileType_Unknown OriginFileType = 0
	OriginFileType_FileType_CSV     OriginFileType = 1
)

var OriginFileType_name = map[int32]string{
	0: "FileType_Unknown",
	1: "FileType_CSV",
}

var OriginFileType_value = map[string]int32{
	"FileType_Unknown": 0,
	"FileType_CSV":     1,
}

func (x OriginFileType) String() string {
	return proto.EnumName(OriginFileType_name, int32(x))
}

func (OriginFileType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_5dab74a081363d1b, []int{4}
}

// 元数据的状态 (0: 未知; 1: 还未发布的新表; 2: 已发布的表; 3: 已撤销的表)
type MetaDataState int32

const (
	MetaDataState_MetaDataState_Unknown  MetaDataState = 0
	MetaDataState_MetaDataState_Created  MetaDataState = 1
	MetaDataState_MetaDataState_Released MetaDataState = 2
	MetaDataState_MetaDataState_Revoked  MetaDataState = 3
)

var MetaDataState_name = map[int32]string{
	0: "MetaDataState_Unknown",
	1: "MetaDataState_Created",
	2: "MetaDataState_Released",
	3: "MetaDataState_Revoked",
}

var MetaDataState_value = map[string]int32{
	"MetaDataState_Unknown":  0,
	"MetaDataState_Created":  1,
	"MetaDataState_Released": 2,
	"MetaDataState_Revoked":  3,
}

func (x MetaDataState) String() string {
	return proto.EnumName(MetaDataState_name, int32(x))
}

func (MetaDataState) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_5dab74a081363d1b, []int{5}
}

// 元数据的使用方式类型枚举
type MetaDataUsageType int32

const (
	MetaDataUsageType_Usage_Unknown MetaDataUsageType = 0
	MetaDataUsageType_Usage_Period  MetaDataUsageType = 1
	MetaDataUsageType_Usage_Times   MetaDataUsageType = 2
)

var MetaDataUsageType_name = map[int32]string{
	0: "Usage_Unknown",
	1: "Usage_Period",
	2: "Usage_Times",
}

var MetaDataUsageType_value = map[string]int32{
	"Usage_Unknown": 0,
	"Usage_Period":  1,
	"Usage_Times":   2,
}

func (x MetaDataUsageType) String() string {
	return proto.EnumName(MetaDataUsageType_name, int32(x))
}

func (MetaDataUsageType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_5dab74a081363d1b, []int{6}
}

// 算力的状态 (0: 未知; 1: 还未发布的算力; 2: 已发布的算力; 3: 已撤销的算力)
type PowerState int32

const (
	PowerState_PowerState_Unknown  PowerState = 0
	PowerState_PowerState_Created  PowerState = 1
	PowerState_PowerState_Released PowerState = 2
	PowerState_PowerState_Revoked  PowerState = 3
)

var PowerState_name = map[int32]string{
	0: "PowerState_Unknown",
	1: "PowerState_Created",
	2: "PowerState_Released",
	3: "PowerState_Revoked",
}

var PowerState_value = map[string]int32{
	"PowerState_Unknown":  0,
	"PowerState_Created":  1,
	"PowerState_Released": 2,
	"PowerState_Revoked":  3,
}

func (x PowerState) String() string {
	return proto.EnumName(PowerState_name, int32(x))
}

func (PowerState) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_5dab74a081363d1b, []int{7}
}

// 本组织在task中的角色
type TaskRole int32

const (
	TaskRole_TaskRole_Unknown       TaskRole = 0
	TaskRole_TaskRole_Sender        TaskRole = 1
	TaskRole_TaskRole_DataSupplier  TaskRole = 2
	TaskRole_TaskRole_PowerSupplier TaskRole = 3
	TaskRole_TaskRole_Receiver      TaskRole = 4
	TaskRole_TaskRole_AlgoSupplier  TaskRole = 5
)

var TaskRole_name = map[int32]string{
	0: "TaskRole_Unknown",
	1: "TaskRole_Sender",
	2: "TaskRole_DataSupplier",
	3: "TaskRole_PowerSupplier",
	4: "TaskRole_Receiver",
	5: "TaskRole_AlgoSupplier",
}

var TaskRole_value = map[string]int32{
	"TaskRole_Unknown":       0,
	"TaskRole_Sender":        1,
	"TaskRole_DataSupplier":  2,
	"TaskRole_PowerSupplier": 3,
	"TaskRole_Receiver":      4,
	"TaskRole_AlgoSupplier":  5,
}

func (x TaskRole) String() string {
	return proto.EnumName(TaskRole_name, int32(x))
}

func (TaskRole) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_5dab74a081363d1b, []int{8}
}

// task的状态
type TaskState int32

const (
	TaskState_TaskState_Unknown TaskState = 0
	TaskState_TaskState_Pending TaskState = 1
	TaskState_TaskState_Running TaskState = 2
	TaskState_TaskState_Failed  TaskState = 3
	TaskState_TaskState_Succeed TaskState = 4
)

var TaskState_name = map[int32]string{
	0: "TaskState_Unknown",
	1: "TaskState_Pending",
	2: "TaskState_Running",
	3: "TaskState_Failed",
	4: "TaskState_Succeed",
}

var TaskState_value = map[string]int32{
	"TaskState_Unknown": 0,
	"TaskState_Pending": 1,
	"TaskState_Running": 2,
	"TaskState_Failed":  3,
	"TaskState_Succeed": 4,
}

func (x TaskState) String() string {
	return proto.EnumName(TaskState_name, int32(x))
}

func (TaskState) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_5dab74a081363d1b, []int{9}
}

// A represents the basic information of the organization.
type Organization struct {
	// org name
	NodeName string `protobuf:"bytes,1,opt,name=node_name,json=nodeName,proto3" json:"node_name,omitempty"`
	// the node_id for org
	NodeId string `protobuf:"bytes,2,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	// the identity for org
	IdentityId           string   `protobuf:"bytes,3,opt,name=identity_id,json=identityId,proto3" json:"identity_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Organization) Reset()         { *m = Organization{} }
func (m *Organization) String() string { return proto.CompactTextString(m) }
func (*Organization) ProtoMessage()    {}
func (*Organization) Descriptor() ([]byte, []int) {
	return fileDescriptor_5dab74a081363d1b, []int{0}
}
func (m *Organization) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Organization) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Organization.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Organization) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Organization.Merge(m, src)
}
func (m *Organization) XXX_Size() int {
	return m.Size()
}
func (m *Organization) XXX_DiscardUnknown() {
	xxx_messageInfo_Organization.DiscardUnknown(m)
}

var xxx_messageInfo_Organization proto.InternalMessageInfo

func (m *Organization) GetNodeName() string {
	if m != nil {
		return m.NodeName
	}
	return ""
}

func (m *Organization) GetNodeId() string {
	if m != nil {
		return m.NodeId
	}
	return ""
}

func (m *Organization) GetIdentityId() string {
	if m != nil {
		return m.IdentityId
	}
	return ""
}

// 任务下的组织信息
type TaskOrganization struct {
	PartyId string `protobuf:"bytes,1,opt,name=party_id,json=partyId,proto3" json:"party_id,omitempty"`
	// org name
	NodeName string `protobuf:"bytes,2,opt,name=node_name,json=nodeName,proto3" json:"node_name,omitempty"`
	// the node_id for org
	NodeId string `protobuf:"bytes,3,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	// the identity for org
	IdentityId           string   `protobuf:"bytes,4,opt,name=identity_id,json=identityId,proto3" json:"identity_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TaskOrganization) Reset()         { *m = TaskOrganization{} }
func (m *TaskOrganization) String() string { return proto.CompactTextString(m) }
func (*TaskOrganization) ProtoMessage()    {}
func (*TaskOrganization) Descriptor() ([]byte, []int) {
	return fileDescriptor_5dab74a081363d1b, []int{1}
}
func (m *TaskOrganization) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TaskOrganization) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TaskOrganization.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TaskOrganization) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TaskOrganization.Merge(m, src)
}
func (m *TaskOrganization) XXX_Size() int {
	return m.Size()
}
func (m *TaskOrganization) XXX_DiscardUnknown() {
	xxx_messageInfo_TaskOrganization.DiscardUnknown(m)
}

var xxx_messageInfo_TaskOrganization proto.InternalMessageInfo

func (m *TaskOrganization) GetPartyId() string {
	if m != nil {
		return m.PartyId
	}
	return ""
}

func (m *TaskOrganization) GetNodeName() string {
	if m != nil {
		return m.NodeName
	}
	return ""
}

func (m *TaskOrganization) GetNodeId() string {
	if m != nil {
		return m.NodeId
	}
	return ""
}

func (m *TaskOrganization) GetIdentityId() string {
	if m != nil {
		return m.IdentityId
	}
	return ""
}

type SimpleResponse struct {
	// the code for response
	Status int32 `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	// the message for response
	Msg                  string   `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SimpleResponse) Reset()         { *m = SimpleResponse{} }
func (m *SimpleResponse) String() string { return proto.CompactTextString(m) }
func (*SimpleResponse) ProtoMessage()    {}
func (*SimpleResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_5dab74a081363d1b, []int{2}
}
func (m *SimpleResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *SimpleResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_SimpleResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *SimpleResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SimpleResponse.Merge(m, src)
}
func (m *SimpleResponse) XXX_Size() int {
	return m.Size()
}
func (m *SimpleResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SimpleResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SimpleResponse proto.InternalMessageInfo

func (m *SimpleResponse) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *SimpleResponse) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

func init() {
	proto.RegisterEnum("api.protobuf.UserType", UserType_name, UserType_value)
	proto.RegisterEnum("api.protobuf.DataStatus", DataStatus_name, DataStatus_value)
	proto.RegisterEnum("api.protobuf.CommonStatus", CommonStatus_name, CommonStatus_value)
	proto.RegisterEnum("api.protobuf.AuditMetaDataOption", AuditMetaDataOption_name, AuditMetaDataOption_value)
	proto.RegisterEnum("api.protobuf.OriginFileType", OriginFileType_name, OriginFileType_value)
	proto.RegisterEnum("api.protobuf.MetaDataState", MetaDataState_name, MetaDataState_value)
	proto.RegisterEnum("api.protobuf.MetaDataUsageType", MetaDataUsageType_name, MetaDataUsageType_value)
	proto.RegisterEnum("api.protobuf.PowerState", PowerState_name, PowerState_value)
	proto.RegisterEnum("api.protobuf.TaskRole", TaskRole_name, TaskRole_value)
	proto.RegisterEnum("api.protobuf.TaskState", TaskState_name, TaskState_value)
	proto.RegisterType((*Organization)(nil), "api.protobuf.Organization")
	proto.RegisterType((*TaskOrganization)(nil), "api.protobuf.TaskOrganization")
	proto.RegisterType((*SimpleResponse)(nil), "api.protobuf.SimpleResponse")
}

func init() { proto.RegisterFile("lib/common/base.proto", fileDescriptor_5dab74a081363d1b) }

var fileDescriptor_5dab74a081363d1b = []byte{
	// 665 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x54, 0xcd, 0x4e, 0xdb, 0x4c,
	0x14, 0xc5, 0x0e, 0x3f, 0xe1, 0x12, 0x60, 0xe2, 0x40, 0xf8, 0xf9, 0x24, 0xbe, 0x4f, 0xac, 0x3e,
	0x59, 0x2d, 0x59, 0x74, 0x53, 0xb1, 0x4b, 0x43, 0xd3, 0x46, 0x2a, 0x10, 0x39, 0xa1, 0x8b, 0x4a,
	0x55, 0x34, 0x89, 0x2f, 0xee, 0x08, 0x7b, 0xc6, 0x1a, 0x8f, 0x41, 0x54, 0xed, 0xae, 0xcf, 0xd1,
	0xe7, 0xe9, 0xb2, 0x8f, 0x50, 0xf1, 0x24, 0xd5, 0x8c, 0x63, 0xc7, 0x06, 0xb5, 0xbb, 0x7b, 0xce,
	0x99, 0x7b, 0xef, 0xf1, 0xb1, 0x3d, 0xb0, 0x1b, 0xb2, 0x69, 0x67, 0x26, 0xa2, 0x48, 0xf0, 0xce,
	0x94, 0x26, 0x78, 0x12, 0x4b, 0xa1, 0x84, 0xd3, 0xa0, 0x31, 0xcb, 0xca, 0x69, 0x7a, 0x7d, 0x8c,
	0xd0, 0xb8, 0x94, 0x01, 0xe5, 0xec, 0x33, 0x55, 0x4c, 0x70, 0xe7, 0x1f, 0x58, 0xe7, 0xc2, 0xc7,
	0x09, 0xa7, 0x11, 0xee, 0x5b, 0xff, 0x59, 0xff, 0xaf, 0x7b, 0x75, 0x4d, 0x5c, 0xd0, 0x08, 0x9d,
	0x3d, 0x58, 0x33, 0x22, 0xf3, 0xf7, 0x6d, 0x23, 0xad, 0x6a, 0x38, 0xf0, 0x9d, 0x7f, 0x61, 0x83,
	0xf9, 0xc8, 0x15, 0x53, 0xf7, 0x5a, 0xac, 0x19, 0x11, 0x72, 0x6a, 0xe0, 0x1f, 0x7f, 0xb3, 0x80,
	0x8c, 0x69, 0x72, 0x53, 0xd9, 0x75, 0x00, 0xf5, 0x98, 0xca, 0xac, 0x25, 0x5b, 0xb5, 0x66, 0xf0,
	0xc0, 0xaf, 0xda, 0xb0, 0xff, 0x6c, 0xa3, 0xf6, 0x37, 0x1b, 0xcb, 0x4f, 0x6c, 0x9c, 0xc2, 0xd6,
	0x88, 0x45, 0x71, 0x88, 0x1e, 0x26, 0xb1, 0xe0, 0x09, 0x3a, 0x6d, 0x58, 0x4d, 0x14, 0x55, 0x69,
	0x62, 0x1c, 0xac, 0x78, 0x73, 0xe4, 0x10, 0xa8, 0x45, 0x49, 0x30, 0x5f, 0xad, 0x4b, 0xb7, 0x0f,
	0xf5, 0xab, 0x04, 0xe5, 0xf8, 0x3e, 0x46, 0x87, 0x40, 0x43, 0xd7, 0x93, 0x2b, 0x7e, 0xc3, 0xc5,
	0x1d, 0x27, 0x4b, 0x4e, 0x23, 0x53, 0x27, 0xaf, 0xc7, 0x6f, 0x89, 0x55, 0xa0, 0xee, 0x78, 0x48,
	0xec, 0x02, 0xbd, 0xeb, 0x8e, 0x49, 0xcd, 0x1d, 0x01, 0x9c, 0x51, 0x45, 0x47, 0xd9, 0x9e, 0x36,
	0x38, 0x0b, 0x54, 0x9a, 0xb7, 0x0b, 0xcd, 0x12, 0x7f, 0x21, 0x64, 0x44, 0x43, 0x62, 0x3d, 0x3a,
	0x7e, 0x86, 0x21, 0x2a, 0xf4, 0x89, 0xed, 0x7e, 0x84, 0x46, 0xcf, 0xbc, 0xe9, 0xf9, 0xd8, 0x7d,
	0xd8, 0x29, 0xe3, 0xd2, 0xe0, 0x3d, 0x68, 0x55, 0x94, 0x62, 0xf4, 0x21, 0xb4, 0x1f, 0x09, 0x7c,
	0xae, 0xd9, 0xee, 0x39, 0xb4, 0xba, 0xa9, 0xcf, 0xd4, 0x39, 0x2a, 0xaa, 0xf7, 0x5f, 0xc6, 0xe6,
	0x05, 0x36, 0x61, 0xd3, 0xd0, 0x93, 0x21, 0x72, 0x9f, 0xf1, 0x80, 0x2c, 0xe9, 0x64, 0xe6, 0x14,
	0x4d, 0x12, 0xf4, 0x89, 0xb5, 0x38, 0xe4, 0xe1, 0x75, 0x9a, 0x18, 0xb7, 0x2f, 0x61, 0xeb, 0x52,
	0xb2, 0x80, 0xf1, 0x3e, 0x0b, 0xd1, 0x04, 0xba, 0x03, 0x24, 0xaf, 0x4b, 0x5e, 0x09, 0x34, 0x0a,
	0xb6, 0x37, 0x7a, 0x4f, 0x2c, 0xf7, 0x0b, 0x6c, 0xe6, 0x1e, 0xb4, 0x4d, 0x74, 0x0e, 0x60, 0xb7,
	0x42, 0x94, 0xba, 0x9f, 0x48, 0x3d, 0x89, 0x54, 0x19, 0x4f, 0x87, 0xd0, 0xae, 0x4a, 0x1e, 0x86,
	0x48, 0x8d, 0xb9, 0xa7, 0x6d, 0x1e, 0xde, 0x8a, 0x1b, 0xf4, 0x49, 0xcd, 0x1d, 0x40, 0x33, 0x97,
	0xae, 0x12, 0x1a, 0x64, 0xd6, 0x9b, 0xb0, 0x69, 0x40, 0xd5, 0x77, 0x46, 0x0d, 0x51, 0x32, 0xa1,
	0x17, 0x6e, 0xc3, 0x46, 0xc6, 0x8c, 0x59, 0x84, 0x09, 0xb1, 0xdd, 0x08, 0x60, 0x28, 0xee, 0x50,
	0x66, 0x4f, 0xd1, 0x06, 0x67, 0x81, 0x4a, 0x83, 0xaa, 0xfc, 0xc2, 0xff, 0x1e, 0xb4, 0x4a, 0x7c,
	0xc9, 0x7c, 0xb5, 0x61, 0xe1, 0xfc, 0xbb, 0x05, 0x75, 0xfd, 0xff, 0x79, 0x22, 0x34, 0x61, 0xe7,
	0x75, 0x69, 0x57, 0x0b, 0xb6, 0x0b, 0x76, 0x84, 0xdc, 0x47, 0x49, 0x2c, 0x1d, 0x46, 0x41, 0x9a,
	0x44, 0xd2, 0x38, 0x0e, 0x19, 0x4a, 0x62, 0xeb, 0x0c, 0x0b, 0x29, 0xdb, 0x99, 0x6b, 0x35, 0xfd,
	0xf5, 0x16, 0x9a, 0x87, 0x33, 0x64, 0xb7, 0x28, 0xc9, 0x72, 0x65, 0x5a, 0x37, 0x0c, 0x44, 0xd1,
	0xb1, 0xe2, 0x7e, 0x85, 0x75, 0x2d, 0x65, 0x71, 0xcc, 0xdb, 0x1f, 0xa7, 0x51, 0xa1, 0xf3, 0x4f,
	0xce, 0xaa, 0xd2, 0x5e, 0xca, 0xb9, 0xa6, 0xed, 0xfc, 0x29, 0x33, 0xba, 0x4f, 0x59, 0xa8, 0x83,
	0xa8, 0x1e, 0x1e, 0xa5, 0xb3, 0x19, 0xa2, 0x4f, 0x96, 0x5f, 0x9d, 0xfe, 0x78, 0x38, 0xb2, 0x7e,
	0x3e, 0x1c, 0x59, 0xbf, 0x1e, 0x8e, 0xac, 0x0f, 0xcf, 0x02, 0xa6, 0x3e, 0xa5, 0xd3, 0x93, 0x99,
	0x88, 0x3a, 0x9e, 0x48, 0x50, 0x29, 0xda, 0x0f, 0xc5, 0x5d, 0xa7, 0x47, 0xa5, 0x64, 0x28, 0x9f,
	0xbf, 0x11, 0x9d, 0xc5, 0xdd, 0x3a, 0x5d, 0x35, 0x97, 0xe9, 0x8b, 0xdf, 0x01, 0x00, 0x00, 0xff,
	0xff, 0x90, 0x9e, 0x35, 0x71, 0x70, 0x05, 0x00, 0x00,
}

func (m *Organization) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Organization) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Organization) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.IdentityId) > 0 {
		i -= len(m.IdentityId)
		copy(dAtA[i:], m.IdentityId)
		i = encodeVarintBase(dAtA, i, uint64(len(m.IdentityId)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.NodeId) > 0 {
		i -= len(m.NodeId)
		copy(dAtA[i:], m.NodeId)
		i = encodeVarintBase(dAtA, i, uint64(len(m.NodeId)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.NodeName) > 0 {
		i -= len(m.NodeName)
		copy(dAtA[i:], m.NodeName)
		i = encodeVarintBase(dAtA, i, uint64(len(m.NodeName)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *TaskOrganization) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TaskOrganization) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TaskOrganization) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.IdentityId) > 0 {
		i -= len(m.IdentityId)
		copy(dAtA[i:], m.IdentityId)
		i = encodeVarintBase(dAtA, i, uint64(len(m.IdentityId)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.NodeId) > 0 {
		i -= len(m.NodeId)
		copy(dAtA[i:], m.NodeId)
		i = encodeVarintBase(dAtA, i, uint64(len(m.NodeId)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.NodeName) > 0 {
		i -= len(m.NodeName)
		copy(dAtA[i:], m.NodeName)
		i = encodeVarintBase(dAtA, i, uint64(len(m.NodeName)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.PartyId) > 0 {
		i -= len(m.PartyId)
		copy(dAtA[i:], m.PartyId)
		i = encodeVarintBase(dAtA, i, uint64(len(m.PartyId)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *SimpleResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *SimpleResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *SimpleResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Msg) > 0 {
		i -= len(m.Msg)
		copy(dAtA[i:], m.Msg)
		i = encodeVarintBase(dAtA, i, uint64(len(m.Msg)))
		i--
		dAtA[i] = 0x12
	}
	if m.Status != 0 {
		i = encodeVarintBase(dAtA, i, uint64(m.Status))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func encodeVarintBase(dAtA []byte, offset int, v uint64) int {
	offset -= sovBase(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *Organization) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.NodeName)
	if l > 0 {
		n += 1 + l + sovBase(uint64(l))
	}
	l = len(m.NodeId)
	if l > 0 {
		n += 1 + l + sovBase(uint64(l))
	}
	l = len(m.IdentityId)
	if l > 0 {
		n += 1 + l + sovBase(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TaskOrganization) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.PartyId)
	if l > 0 {
		n += 1 + l + sovBase(uint64(l))
	}
	l = len(m.NodeName)
	if l > 0 {
		n += 1 + l + sovBase(uint64(l))
	}
	l = len(m.NodeId)
	if l > 0 {
		n += 1 + l + sovBase(uint64(l))
	}
	l = len(m.IdentityId)
	if l > 0 {
		n += 1 + l + sovBase(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *SimpleResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Status != 0 {
		n += 1 + sovBase(uint64(m.Status))
	}
	l = len(m.Msg)
	if l > 0 {
		n += 1 + l + sovBase(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func sovBase(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozBase(x uint64) (n int) {
	return sovBase(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *Organization) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowBase
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Organization: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Organization: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field NodeName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBase
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthBase
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthBase
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.NodeName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field NodeId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBase
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthBase
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthBase
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.NodeId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field IdentityId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBase
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthBase
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthBase
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.IdentityId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipBase(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthBase
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TaskOrganization) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowBase
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TaskOrganization: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TaskOrganization: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PartyId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBase
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthBase
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthBase
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PartyId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field NodeName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBase
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthBase
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthBase
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.NodeName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field NodeId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBase
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthBase
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthBase
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.NodeId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field IdentityId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBase
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthBase
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthBase
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.IdentityId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipBase(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthBase
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *SimpleResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowBase
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: SimpleResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: SimpleResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Status", wireType)
			}
			m.Status = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBase
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Status |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Msg", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBase
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthBase
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthBase
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Msg = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipBase(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthBase
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipBase(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowBase
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowBase
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowBase
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthBase
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupBase
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthBase
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthBase        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowBase          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupBase = fmt.Errorf("proto: unexpected end of group")
)
